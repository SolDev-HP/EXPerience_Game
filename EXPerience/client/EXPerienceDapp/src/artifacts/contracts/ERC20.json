{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC165.sol",
    "1": "contracts/ERC20.sol",
    "3": "contracts/utils/Context.sol",
    "5": "interfaces/IERC165.sol",
    "6": "interfaces/IERC20.sol",
    "7": "interfaces/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        582
      ],
      "ERC165": [
        22
      ],
      "ERC20": [
        403
      ],
      "IERC165": [
        633
      ],
      "IERC20": [
        712
      ],
      "IERC20Metadata": [
        737
      ]
    },
    "id": 404,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:1"
      },
      {
        "absolutePath": "contracts/ERC165.sol",
        "file": "./ERC165.sol",
        "id": 25,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 404,
        "sourceUnit": 23,
        "src": "58:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 26,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 404,
        "sourceUnit": 713,
        "src": "81:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/extensions/IERC20Metadata.sol",
        "file": "../interfaces/extensions/IERC20Metadata.sol",
        "id": 27,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 404,
        "sourceUnit": 738,
        "src": "116:53:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/Context.sol",
        "file": "./utils/Context.sol",
        "id": 28,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 404,
        "sourceUnit": 583,
        "src": "170:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 582,
              "src": "2071:7:1"
            },
            "id": 31,
            "nodeType": "InheritanceSpecifier",
            "src": "2071:7:1"
          },
          {
            "baseName": {
              "id": 32,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22,
              "src": "2080:6:1"
            },
            "id": 33,
            "nodeType": "InheritanceSpecifier",
            "src": "2080:6:1"
          },
          {
            "baseName": {
              "id": 34,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 712,
              "src": "2088:6:1"
            },
            "id": 35,
            "nodeType": "InheritanceSpecifier",
            "src": "2088:6:1"
          },
          {
            "baseName": {
              "id": 36,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 737,
              "src": "2096:14:1"
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "2096:14:1"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 29,
          "nodeType": "StructuredDocumentation",
          "src": "614:1172:1",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 403,
        "linearizedBaseContracts": [
          403,
          737,
          712,
          22,
          633,
          582
        ],
        "name": "ERC20",
        "nameLocation": "2062:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "2153:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 403,
            "src": "2117:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 40,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2125:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2117:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 39,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2136:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "2185:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 403,
            "src": "2169:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2169:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "2219:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 403,
            "src": "2204:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2204:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "2245:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 403,
            "src": "2230:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 46,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2230:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "2618:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2628:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "2636:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2628:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:13:1"
                },
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2651:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2661:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2651:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:17:1"
                }
              ]
            },
            "documentation": {
              "id": 48,
              "nodeType": "StructuredDocumentation",
              "src": "2259:298:1",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 64,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2588:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "2574:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2574:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2609:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "2595:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2573:44:1"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2618:0:1"
            },
            "scope": 403,
            "src": "2562:113:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21
            ],
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "2841:190:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "2870:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 76,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 712,
                                "src": "2890:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$712_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$712_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              ],
                              "id": 75,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "2885:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2885:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20_$712",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "2885:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2870:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "2925:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 82,
                                "name": "IERC20Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 737,
                                "src": "2945:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$737_$",
                                  "typeString": "type(contract IERC20Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$737_$",
                                  "typeString": "type(contract IERC20Metadata)"
                                }
                              ],
                              "id": 81,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "2940:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2940:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20Metadata_$737",
                              "typeString": "type(contract IERC20Metadata)"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "2940:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2925:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2870:102:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "3012:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 87,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "2988:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC20_$403_$",
                            "typeString": "type(contract super ERC20)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "2988:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2988:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2870:154:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 92,
                  "nodeType": "Return",
                  "src": "2851:173:1"
                }
              ]
            },
            "documentation": {
              "id": 65,
              "nodeType": "StructuredDocumentation",
              "src": "2681:56:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2751:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 70,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 69,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22,
                  "src": "2818:6:1"
                }
              ],
              "src": "2809:16:1"
            },
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2776:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "2769:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2769:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2768:20:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "2835:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2835:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2834:6:1"
            },
            "scope": 403,
            "src": "2742:289:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              724
            ],
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "3165:29:1",
              "statements": [
                {
                  "expression": {
                    "id": 101,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "3182:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 100,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "3175:12:1"
                }
              ]
            },
            "documentation": {
              "id": 95,
              "nodeType": "StructuredDocumentation",
              "src": "3037:54:1",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "3105:4:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 97,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3132:8:1"
            },
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3109:2:1"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "3150:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3150:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3149:15:1"
            },
            "scope": 403,
            "src": "3096:98:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              730
            ],
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "3378:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 111,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "3395:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 110,
                  "id": 112,
                  "nodeType": "Return",
                  "src": "3388:14:1"
                }
              ]
            },
            "documentation": {
              "id": 105,
              "nodeType": "StructuredDocumentation",
              "src": "3200:102:1",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3316:6:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 107,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3345:8:1"
            },
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3322:2:1"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "3363:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3362:15:1"
            },
            "scope": 403,
            "src": "3307:102:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              736
            ],
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "4098:26:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4115:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 120,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "4108:9:1"
                }
              ]
            },
            "documentation": {
              "id": 115,
              "nodeType": "StructuredDocumentation",
              "src": "3415:613:1",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "4042:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 117,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4073:8:1"
            },
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4050:2:1"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "4091:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4091:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4090:7:1"
            },
            "scope": 403,
            "src": "4033:91:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              661
            ],
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "4254:36:1",
              "statements": [
                {
                  "expression": {
                    "id": 131,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "4271:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 132,
                  "nodeType": "Return",
                  "src": "4264:19:1"
                }
              ]
            },
            "documentation": {
              "id": 125,
              "nodeType": "StructuredDocumentation",
              "src": "4130:49:1",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "4193:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 127,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4227:8:1"
            },
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4204:2:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "4245:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4245:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4244:9:1"
            },
            "scope": 403,
            "src": "4184:106:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              669
            ],
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "4431:42:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 143,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "4448:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 145,
                    "indexExpression": {
                      "id": 144,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "4458:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4448:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 142,
                  "id": 146,
                  "nodeType": "Return",
                  "src": "4441:25:1"
                }
              ]
            },
            "documentation": {
              "id": 135,
              "nodeType": "StructuredDocumentation",
              "src": "4296:47:1",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4357:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 139,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4404:8:1"
            },
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4375:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "4367:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4366:17:1"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "4422:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4422:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4421:9:1"
            },
            "scope": 403,
            "src": "4348:125:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              679
            ],
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "4630:65:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 159,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "4680:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4680:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "4680:8:1"
                }
              ]
            },
            "documentation": {
              "id": 149,
              "nodeType": "StructuredDocumentation",
              "src": "4479:71:1",
              "text": " @dev See {IERC20-transfer}.\n Restricted"
            },
            "functionSelector": "a9059cbb",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4564:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 155,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4606:8:1"
            },
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "4573:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4573:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "4582:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4582:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4572:18:1"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "4624:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4624:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4623:6:1"
            },
            "scope": 403,
            "src": "4555:140:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              689
            ],
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "4863:63:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 174,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "4911:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4911:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "4911:8:1"
                }
              ]
            },
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "4701:73:1",
              "text": " @dev See {IERC20-allowance}.\n Unsupported"
            },
            "functionSelector": "dd62ed3e",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "4788:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4836:8:1"
            },
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "4798:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4798:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "4807:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4807:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4797:18:1"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "4854:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4854:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4853:9:1"
            },
            "scope": 403,
            "src": "4779:147:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              699
            ],
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "5082:65:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 189,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "5132:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "5132:8:1"
                }
              ]
            },
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "4932:71:1",
              "text": " @dev See {IERC20-approve}.\n Restricted "
            },
            "functionSelector": "095ea7b3",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "5017:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 185,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5058:8:1"
            },
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "5025:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5025:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "5034:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5034:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5024:18:1"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "5076:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5076:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5075:6:1"
            },
            "scope": 403,
            "src": "5008:139:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              711
            ],
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "5321:65:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 206,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "5371:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5371:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "5371:8:1"
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "5153:75:1",
              "text": " @dev See {IERC20-transferFrom}.\n Restricted"
            },
            "functionSelector": "23b872dd",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5242:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5297:8:1"
            },
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "5255:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5255:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "5264:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "5273:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5273:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5254:27:1"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "5315:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5315:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5314:6:1"
            },
            "scope": 403,
            "src": "5233:153:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "5592:63:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 220,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "5640:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5640:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "5640:8:1"
                }
              ]
            },
            "documentation": {
              "id": 211,
              "nodeType": "StructuredDocumentation",
              "src": "5392:120:1",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n Unsupported"
            },
            "functionSelector": "39509351",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5526:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "5544:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5544:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "5553:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5553:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5543:18:1"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "5586:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5586:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5585:6:1"
            },
            "scope": 403,
            "src": "5517:138:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "5861:63:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 234,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "5909:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5909:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "5909:8:1"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "5661:120:1",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n Unsupported"
            },
            "functionSelector": "a457c2d7",
            "id": 238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "5795:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "5813:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5813:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "5822:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5822:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5812:18:1"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "5855:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5855:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5854:6:1"
            },
            "scope": 403,
            "src": "5786:138:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "6265:324:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 247,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "6283:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6302:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6294:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6294:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6294:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6283:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6306:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6275:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6275:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "6275:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6380:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6372:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6372:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6372:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 261,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "6384:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 262,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "6393:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 256,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "6351:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6351:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "6351:49:1"
                },
                {
                  "expression": {
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 265,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6411:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 266,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "6427:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6411:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "6411:22:1"
                },
                {
                  "expression": {
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 269,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "6443:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 271,
                      "indexExpression": {
                        "id": 270,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "6453:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6443:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 272,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "6465:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6443:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "6443:28:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6503:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6495:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 276,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6495:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6495:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 280,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "6507:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 281,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "6516:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 275,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "6486:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6486:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "EmitStatement",
                  "src": "6481:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6562:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6554:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6554:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6554:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 289,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "6566:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 290,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "6575:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 284,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "6534:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6534:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "6534:48:1"
                }
              ]
            },
            "documentation": {
              "id": 239,
              "nodeType": "StructuredDocumentation",
              "src": "5930:265:1",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "6209:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6223:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "6215:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6215:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6240:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "6232:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6232:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6214:33:1"
            },
            "returnParameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6265:0:1"
            },
            "scope": 403,
            "src": "6200:389:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "6974:511:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 303,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "6992:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7011:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7003:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 304,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7003:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7003:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6992:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7015:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6984:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6984:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "6984:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 313,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "7083:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7100:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7092:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7092:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7092:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 318,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "7104:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 312,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "7062:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7062:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "7062:49:1"
                },
                {
                  "assignments": [
                    322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 322,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "7130:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "7122:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 321,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7122:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 326,
                  "initialValue": {
                    "baseExpression": {
                      "id": 323,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "7147:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 325,
                    "indexExpression": {
                      "id": 324,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "7157:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7147:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7122:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 328,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "7183:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 329,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 299,
                          "src": "7201:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7183:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7209:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7175:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7175:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "7175:71:1"
                },
                {
                  "id": 342,
                  "nodeType": "UncheckedBlock",
                  "src": "7256:79:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 334,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "7280:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 336,
                          "indexExpression": {
                            "id": 335,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "7290:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7280:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 337,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "7301:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 338,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "7318:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7301:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7280:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 341,
                      "nodeType": "ExpressionStatement",
                      "src": "7280:44:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 343,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "7344:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 344,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "7360:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7344:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "7344:22:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 348,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "7391:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7408:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7400:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 349,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7400:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7400:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 353,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "7412:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 347,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "7382:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7382:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "EmitStatement",
                  "src": "7377:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 357,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "7450:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7467:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7459:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7459:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7459:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 362,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "7471:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 356,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "7430:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7430:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "7430:48:1"
                }
              ]
            },
            "documentation": {
              "id": 295,
              "nodeType": "StructuredDocumentation",
              "src": "6595:309:1",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "6918:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6932:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "6924:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6924:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6949:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "6941:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6941:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6923:33:1"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6974:0:1"
            },
            "scope": 403,
            "src": "6909:576:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 379,
              "nodeType": "Block",
              "src": "7677:65:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 376,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "7727:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7727:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "7727:8:1"
                }
              ]
            },
            "documentation": {
              "id": 367,
              "nodeType": "StructuredDocumentation",
              "src": "7491:119:1",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n Restricted"
            },
            "id": 380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "7624:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "7633:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7633:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "7642:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7642:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "7651:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7651:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7632:27:1"
            },
            "returnParameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7677:0:1"
            },
            "scope": 403,
            "src": "7615:127:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "8445:2:1",
              "statements": []
            },
            "documentation": {
              "id": 381,
              "nodeType": "StructuredDocumentation",
              "src": "7748:573:1",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8335:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8373:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "8365:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8365:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8395:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "8387:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8387:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8415:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "8407:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8407:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8355:72:1"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8445:0:1"
            },
            "scope": 403,
            "src": "8326:121:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "9153:2:1",
              "statements": []
            },
            "documentation": {
              "id": 392,
              "nodeType": "StructuredDocumentation",
              "src": "8453:577:1",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "9044:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9081:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "9073:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9073:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9103:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "9095:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9095:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9123:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "9115:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9115:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9063:72:1"
            },
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9153:0:1"
            },
            "scope": 403,
            "src": "9035:120:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 404,
        "src": "2053:7104:1",
        "usedErrors": []
      }
    ],
    "src": "32:9126:1"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161069c38038061069c83398101604081905261002f916101b9565b815161004290600290602085019061005e565b50805161005690600390602084019061005e565b505050610256565b82805461006a9061021c565b90600052602060002090601f01602090048101928261008c57600085556100d2565b82601f106100a557805160ff19168380011785556100d2565b828001600101855582156100d2579182015b828111156100d25782518255916020019190600101906100b7565b506100de9291506100e2565b5090565b5b808211156100de57600081556001016100e3565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261011e57600080fd5b81516001600160401b0380821115610138576101386100f7565b604051601f8301601f19908116603f01168101908282118183101715610160576101606100f7565b8160405283815260209250868385880101111561017c57600080fd5b600091505b8382101561019e5785820183015181830184015290820190610181565b838211156101af5760008385830101525b9695505050505050565b600080604083850312156101cc57600080fd5b82516001600160401b03808211156101e357600080fd5b6101ef8683870161010d565b9350602085015191508082111561020557600080fd5b506102128582860161010d565b9150509250929050565b600181811c9082168061023057607f821691505b60208210810361025057634e487b7160e01b600052602260045260246000fd5b50919050565b610437806102656000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146100f657806370a082311461013857806395d89b4114610161578063a457c2d7146100f6578063a9059cbb146100f6578063dd62ed3e1461016957600080fd5b806301ffc9a7146100b957806306fdde03146100e1578063095ea7b3146100f657806318160ddd1461010957806323b872dd1461011b578063313ce56714610129575b600080fd5b6100cc6100c7366004610271565b610177565b60405190151581526020015b60405180910390f35b6100e96101c9565b6040516100d891906102a2565b6100cc610104366004610313565b61025b565b6001545b6040519081526020016100d8565b6100cc61010436600461033d565b604051601281526020016100d8565b61010d610146366004610379565b6001600160a01b031660009081526020819052604090205490565b6100e9610262565b61010d610104366004610394565b60006001600160e01b031982166336372b0760e01b14806101a857506001600160e01b0319821663a219a02560e01b145b806101c357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546101d8906103c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610204906103c7565b80156102515780601f1061022657610100808354040283529160200191610251565b820191906000526020600020905b81548152906001019060200180831161023457829003601f168201915b5050505050905090565b6000806000fd5b6060600380546101d8906103c7565b60006020828403121561028357600080fd5b81356001600160e01b03198116811461029b57600080fd5b9392505050565b600060208083528351808285015260005b818110156102cf578581018301518582016040015282016102b3565b818111156102e1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461030e57600080fd5b919050565b6000806040838503121561032657600080fd5b61032f836102f7565b946020939093013593505050565b60008060006060848603121561035257600080fd5b61035b846102f7565b9250610369602085016102f7565b9150604084013590509250925092565b60006020828403121561038b57600080fd5b61029b826102f7565b600080604083850312156103a757600080fd5b6103b0836102f7565b91506103be602084016102f7565b90509250929050565b600181811c908216806103db57607f821691505b6020821081036103fb57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212202e6c094cead4ed26764531f04bf28bdbae2faa81a59b19b623e690d9fa59e6b064736f6c634300080d0033",
  "bytecodeSha1": "f8d4ad7fcae3f6b81ab24bac6b199567609d56e6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "3": {},
      "5": {},
      "6": {},
      "7": {}
    },
    "statements": {
      "0": {
        "ERC165.supportsInterface": {
          "4": [
            615,
            662
          ]
        }
      },
      "1": {
        "ERC20.approve": {
          "6": [
            5132,
            5140
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            4441,
            4466
          ]
        },
        "ERC20.decimals": {
          "1": [
            4108,
            4117
          ]
        },
        "ERC20.name": {
          "5": [
            3175,
            3187
          ]
        },
        "ERC20.supportsInterface": {
          "3": [
            2851,
            3024
          ]
        },
        "ERC20.symbol": {
          "7": [
            3388,
            3402
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            4264,
            4283
          ]
        }
      },
      "3": {},
      "5": {},
      "6": {},
      "7": {}
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "IERC165",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146100f657806370a082311461013857806395d89b4114610161578063a457c2d7146100f6578063a9059cbb146100f6578063dd62ed3e1461016957600080fd5b806301ffc9a7146100b957806306fdde03146100e1578063095ea7b3146100f657806318160ddd1461010957806323b872dd1461011b578063313ce56714610129575b600080fd5b6100cc6100c7366004610271565b610177565b60405190151581526020015b60405180910390f35b6100e96101c9565b6040516100d891906102a2565b6100cc610104366004610313565b61025b565b6001545b6040519081526020016100d8565b6100cc61010436600461033d565b604051601281526020016100d8565b61010d610146366004610379565b6001600160a01b031660009081526020819052604090205490565b6100e9610262565b61010d610104366004610394565b60006001600160e01b031982166336372b0760e01b14806101a857506001600160e01b0319821663a219a02560e01b145b806101c357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546101d8906103c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610204906103c7565b80156102515780601f1061022657610100808354040283529160200191610251565b820191906000526020600020905b81548152906001019060200180831161023457829003601f168201915b5050505050905090565b6000806000fd5b6060600380546101d8906103c7565b60006020828403121561028357600080fd5b81356001600160e01b03198116811461029b57600080fd5b9392505050565b600060208083528351808285015260005b818110156102cf578581018301518582016040015282016102b3565b818111156102e1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461030e57600080fd5b919050565b6000806040838503121561032657600080fd5b61032f836102f7565b946020939093013593505050565b60008060006060848603121561035257600080fd5b61035b846102f7565b9250610369602085016102f7565b9150604084013590509250925092565b60006020828403121561038b57600080fd5b61029b826102f7565b600080604083850312156103a757600080fd5b6103b0836102f7565b91506103be602084016102f7565b90509250929050565b600181811c908216806103db57607f821691505b6020821081036103fb57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212202e6c094cead4ed26764531f04bf28bdbae2faa81a59b19b623e690d9fa59e6b064736f6c634300080d0033",
  "deployedSourceMap": "2053:7104:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:289;;;;;;:::i;:::-;;:::i;:::-;;;470:14:8;;463:22;445:41;;433:2;418:18;2742:289:1;;;;;;;;3096:98;;;:::i;:::-;;;;;;;:::i;5008:139::-;;;;;;:::i;:::-;;:::i;4184:106::-;4271:12;;4184:106;;;1682:25:8;;;1670:2;1655:18;4184:106:1;1536:177:8;5233:153:1;;;;;;:::i;4033:91::-;;;4115:2;2193:36:8;;2181:2;2166:18;4033:91:1;2051:184:8;4348:125:1;;;;;;:::i;:::-;-1:-1:-1;;;;;4448:18:1;4422:7;4448:18;;;;;;;;;;;;4348:125;3307:102;;;:::i;4779:147::-;;;;;;:::i;2742:289::-;2835:4;-1:-1:-1;;;;;;2870:39:1;;-1:-1:-1;;;2870:39:1;;:102;;-1:-1:-1;;;;;;;2925:47:1;;-1:-1:-1;;;2925:47:1;2870:102;:154;;;-1:-1:-1;;;;;;;;;;622:40:0;;;2988:36:1;2851:173;2742:289;-1:-1:-1;;2742:289:1:o;3096:98::-;3150:13;3182:5;3175:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3096:98;:::o;5008:139::-;5076:4;5132:8;;;3307:102;3363:13;3395:7;3388:14;;;;;:::i;14:286:8:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:8;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:8:o;497:597::-;609:4;638:2;667;656:9;649:21;699:6;693:13;742:6;737:2;726:9;722:18;715:34;767:1;777:140;791:6;788:1;785:13;777:140;;;886:14;;;882:23;;876:30;852:17;;;871:2;848:26;841:66;806:10;;777:140;;;935:6;932:1;929:13;926:91;;;1005:1;1000:2;991:6;980:9;976:22;972:31;965:42;926:91;-1:-1:-1;1078:2:8;1057:15;-1:-1:-1;;1053:29:8;1038:45;;;;1085:2;1034:54;;497:597;-1:-1:-1;;;497:597:8:o;1099:173::-;1167:20;;-1:-1:-1;;;;;1216:31:8;;1206:42;;1196:70;;1262:1;1259;1252:12;1196:70;1099:173;;;:::o;1277:254::-;1345:6;1353;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;1445:29;1464:9;1445:29;:::i;:::-;1435:39;1521:2;1506:18;;;;1493:32;;-1:-1:-1;;;1277:254:8:o;1718:328::-;1795:6;1803;1811;1864:2;1852:9;1843:7;1839:23;1835:32;1832:52;;;1880:1;1877;1870:12;1832:52;1903:29;1922:9;1903:29;:::i;:::-;1893:39;;1951:38;1985:2;1974:9;1970:18;1951:38;:::i;:::-;1941:48;;2036:2;2025:9;2021:18;2008:32;1998:42;;1718:328;;;;;:::o;2240:186::-;2299:6;2352:2;2340:9;2331:7;2327:23;2323:32;2320:52;;;2368:1;2365;2358:12;2320:52;2391:29;2410:9;2391:29;:::i;2431:260::-;2499:6;2507;2560:2;2548:9;2539:7;2535:23;2531:32;2528:52;;;2576:1;2573;2566:12;2528:52;2599:29;2618:9;2599:29;:::i;:::-;2589:39;;2647:38;2681:2;2670:9;2666:18;2647:38;:::i;:::-;2637:48;;2431:260;;;;;:::o;2696:380::-;2775:1;2771:12;;;;2818;;;2839:61;;2893:4;2885:6;2881:17;2871:27;;2839:61;2946:2;2938:6;2935:14;2915:18;2912:38;2909:161;;2992:10;2987:3;2983:20;2980:1;2973:31;3027:4;3024:1;3017:15;3055:4;3052:1;3045:15;2909:161;;2696:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}. Unsupported"
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Restricted "
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. Unsupported"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. Unsupported"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Restricted"
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Restricted"
      }
    },
    "version": 1
  },
  "offset": [
    2053,
    9157
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x129 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x271 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x2A2 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x313 JUMP JUMPDEST PUSH2 0x25B JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x36372B07 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA219A025 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x1C3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x204 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x251 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x226 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x251 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x234 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D8 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2B3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32F DUP4 PUSH2 0x2F7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35B DUP5 PUSH2 0x2F7 JUMP JUMPDEST SWAP3 POP PUSH2 0x369 PUSH1 0x20 DUP6 ADD PUSH2 0x2F7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29B DUP3 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B0 DUP4 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BE PUSH1 0x20 DUP5 ADD PUSH2 0x2F7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3DB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E PUSH13 0x94CEAD4ED26764531F04BF28B 0xDB 0xAE 0x2F 0xAA DUP2 0xA5 SWAP12 NOT 0xB6 0x23 0xE6 SWAP1 0xD9 STATICCALL MSIZE 0xE6 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6"
    },
    "53": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x138"
    },
    "64": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x161"
    },
    "75": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6"
    },
    "86": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6"
    },
    "97": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x169"
    },
    "108": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "REVERT",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "120": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "131": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1"
    },
    "135": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "142": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6"
    },
    "146": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "153": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "154": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x109"
    },
    "157": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "158": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "164": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "165": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "168": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "169": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "175": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "EQ",
      "path": "1"
    },
    "176": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x129"
    },
    "179": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "180": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2053,
        9157
      ],
      "op": "REVERT",
      "path": "1"
    },
    "185": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "186": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC"
    },
    "189": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7"
    },
    "192": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "193": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "195": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x271"
    },
    "198": {
      "fn": "ERC20.supportsInterface",
      "jump": "i",
      "offset": [
        2742,
        3031
      ],
      "op": "JUMP",
      "path": "1"
    },
    "199": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "200": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "203": {
      "fn": "ERC20.supportsInterface",
      "jump": "i",
      "offset": [
        2742,
        3031
      ],
      "op": "JUMP",
      "path": "1"
    },
    "204": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "205": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "207": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "208": {
      "op": "SWAP1"
    },
    "209": {
      "op": "ISZERO"
    },
    "210": {
      "op": "ISZERO"
    },
    "211": {
      "op": "DUP2"
    },
    "212": {
      "op": "MSTORE"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "215": {
      "op": "ADD"
    },
    "216": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "217": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "219": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "220": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "DUP1",
      "path": "1"
    },
    "221": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "222": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "SUB",
      "path": "1"
    },
    "223": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "224": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "RETURN",
      "path": "1"
    },
    "225": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "226": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9"
    },
    "229": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C9"
    },
    "232": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        3096,
        3194
      ],
      "op": "JUMP",
      "path": "1"
    },
    "233": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "234": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "236": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "237": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD8"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "241": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "242": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A2"
    },
    "245": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        3096,
        3194
      ],
      "op": "JUMP",
      "path": "1"
    },
    "246": {
      "fn": "ERC20.approve",
      "offset": [
        5008,
        5147
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "247": {
      "fn": "ERC20.approve",
      "offset": [
        5008,
        5147
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC"
    },
    "250": {
      "fn": "ERC20.approve",
      "offset": [
        5008,
        5147
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "253": {
      "fn": "ERC20.approve",
      "offset": [
        5008,
        5147
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "254": {
      "fn": "ERC20.approve",
      "offset": [
        5008,
        5147
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "256": {
      "fn": "ERC20.approve",
      "offset": [
        5008,
        5147
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x313"
    },
    "259": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        5008,
        5147
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "ERC20.approve",
      "offset": [
        5008,
        5147
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "ERC20.approve",
      "offset": [
        5008,
        5147
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25B"
    },
    "264": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        5008,
        5147
      ],
      "op": "JUMP",
      "path": "1"
    },
    "265": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4184,
        4290
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "266": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4271,
        4283
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x1"
    },
    "268": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4271,
        4283
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "269": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4184,
        4290
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "270": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4184,
        4290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "272": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4184,
        4290
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "273": {
      "op": "SWAP1"
    },
    "274": {
      "op": "DUP2"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "278": {
      "op": "ADD"
    },
    "279": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4184,
        4290
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD8"
    },
    "282": {
      "op": "JUMP"
    },
    "283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5233,
        5386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "284": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5233,
        5386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC"
    },
    "287": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5233,
        5386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "290": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5233,
        5386
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "291": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5233,
        5386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "293": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5233,
        5386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33D"
    },
    "296": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5233,
        5386
      ],
      "op": "JUMP",
      "path": "1"
    },
    "297": {
      "fn": "ERC20.decimals",
      "offset": [
        4033,
        4124
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "298": {
      "fn": "ERC20.decimals",
      "offset": [
        4033,
        4124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "300": {
      "fn": "ERC20.decimals",
      "offset": [
        4033,
        4124
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "301": {
      "fn": "ERC20.decimals",
      "offset": [
        4115,
        4117
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "303": {
      "op": "DUP2"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "307": {
      "op": "ADD"
    },
    "308": {
      "fn": "ERC20.decimals",
      "offset": [
        4033,
        4124
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD8"
    },
    "311": {
      "op": "JUMP"
    },
    "312": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4348,
        4473
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "313": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4348,
        4473
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D"
    },
    "316": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4348,
        4473
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "319": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4348,
        4473
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4348,
        4473
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "322": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4348,
        4473
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x379"
    },
    "325": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        4348,
        4473
      ],
      "op": "JUMP",
      "path": "1"
    },
    "326": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4348,
        4473
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "333": {
      "op": "SHL"
    },
    "334": {
      "op": "SUB"
    },
    "335": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "AND",
      "path": "1",
      "statement": 2
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4422,
        4429
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "DUP2",
      "path": "1"
    },
    "340": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "DUP2",
      "path": "1"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "345": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "351": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4448,
        4466
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "352": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4348,
        4473
      ],
      "op": "JUMP",
      "path": "1"
    },
    "353": {
      "fn": "ERC20.symbol",
      "offset": [
        3307,
        3409
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "354": {
      "fn": "ERC20.symbol",
      "offset": [
        3307,
        3409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9"
    },
    "357": {
      "fn": "ERC20.symbol",
      "offset": [
        3307,
        3409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x262"
    },
    "360": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        3307,
        3409
      ],
      "op": "JUMP",
      "path": "1"
    },
    "361": {
      "fn": "ERC20.allowance",
      "offset": [
        4779,
        4926
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "362": {
      "fn": "ERC20.allowance",
      "offset": [
        4779,
        4926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D"
    },
    "365": {
      "fn": "ERC20.allowance",
      "offset": [
        4779,
        4926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "368": {
      "fn": "ERC20.allowance",
      "offset": [
        4779,
        4926
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "369": {
      "fn": "ERC20.allowance",
      "offset": [
        4779,
        4926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "371": {
      "fn": "ERC20.allowance",
      "offset": [
        4779,
        4926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x394"
    },
    "374": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4779,
        4926
      ],
      "op": "JUMP",
      "path": "1"
    },
    "375": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2835,
        2839
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "384": {
      "op": "SHL"
    },
    "385": {
      "op": "SUB"
    },
    "386": {
      "op": "NOT"
    },
    "387": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        2909
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 3
    },
    "388": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        2909
      ],
      "op": "AND",
      "path": "1"
    },
    "389": {
      "op": "PUSH4",
      "value": "0x36372B07"
    },
    "394": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "396": {
      "op": "SHL"
    },
    "397": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        2909
      ],
      "op": "EQ",
      "path": "1"
    },
    "398": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        2909
      ],
      "op": "DUP1",
      "path": "1"
    },
    "399": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        2972
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A8"
    },
    "402": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        2972
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "403": {
      "op": "POP"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "op": "SUB"
    },
    "412": {
      "op": "NOT"
    },
    "413": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2925,
        2972
      ],
      "op": "DUP3",
      "path": "1"
    },
    "414": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2925,
        2972
      ],
      "op": "AND",
      "path": "1"
    },
    "415": {
      "op": "PUSH4",
      "value": "0xA219A025"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "422": {
      "op": "SHL"
    },
    "423": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2925,
        2972
      ],
      "op": "EQ",
      "path": "1"
    },
    "424": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        2972
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "425": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        3024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "426": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        3024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C3"
    },
    "429": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2870,
        3024
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "430": {
      "op": "POP"
    },
    "431": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "436": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "438": {
      "op": "SHL"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "op": "SUB"
    },
    "447": {
      "op": "NOT"
    },
    "448": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        622,
        662
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 4
    },
    "449": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        622,
        662
      ],
      "op": "AND",
      "path": "0"
    },
    "450": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        622,
        662
      ],
      "op": "EQ",
      "path": "0"
    },
    "451": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2988,
        3024
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "452": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2851,
        3024
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "453": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        2742,
        3031
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "454": {
      "op": "POP"
    },
    "455": {
      "op": "POP"
    },
    "456": {
      "fn": "ERC20.supportsInterface",
      "jump": "o",
      "offset": [
        2742,
        3031
      ],
      "op": "JUMP",
      "path": "1"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        3150,
        3163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        3182,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x2"
    },
    "462": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP1",
      "path": "1"
    },
    "463": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D8"
    },
    "467": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "468": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C7"
    },
    "471": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "472": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP1",
      "path": "1"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ADD",
      "path": "1"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP1",
      "path": "1"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DIV",
      "path": "1"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "MUL",
      "path": "1"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ADD",
      "path": "1"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "490": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ADD",
      "path": "1"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP1",
      "path": "1"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ADD",
      "path": "1"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP3",
      "path": "1"
    },
    "506": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP1",
      "path": "1"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x204"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C7"
    },
    "515": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP1",
      "path": "1"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x251"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP1",
      "path": "1"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "LT",
      "path": "1"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x226"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP1",
      "path": "1"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP4",
      "path": "1"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DIV",
      "path": "1"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "MUL",
      "path": "1"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP4",
      "path": "1"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ADD",
      "path": "1"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x251"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMP",
      "path": "1"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP3",
      "path": "1"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ADD",
      "path": "1"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ADD",
      "path": "1"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ADD",
      "path": "1"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP1",
      "path": "1"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP4",
      "path": "1"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "GT",
      "path": "1"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x234"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP3",
      "path": "1"
    },
    "585": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SUB",
      "path": "1"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "AND",
      "path": "1"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "DUP3",
      "path": "1"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "ADD",
      "path": "1"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "POP",
      "path": "1"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "POP",
      "path": "1"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "POP",
      "path": "1"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "POP",
      "path": "1"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "POP",
      "path": "1"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "600": {
      "fn": "ERC20.name",
      "offset": [
        3175,
        3187
      ],
      "op": "POP",
      "path": "1"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        3096,
        3194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "602": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        3096,
        3194
      ],
      "op": "JUMP",
      "path": "1"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        5008,
        5147
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "604": {
      "fn": "ERC20.approve",
      "offset": [
        5076,
        5080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "606": {
      "fn": "ERC20.approve",
      "offset": [
        5132,
        5140
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 6
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        5132,
        5140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        5132,
        5140
      ],
      "op": "REVERT",
      "path": "1"
    },
    "610": {
      "fn": "ERC20.symbol",
      "offset": [
        3307,
        3409
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "611": {
      "fn": "ERC20.symbol",
      "offset": [
        3363,
        3376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "613": {
      "fn": "ERC20.symbol",
      "offset": [
        3395,
        3402
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x3"
    },
    "615": {
      "fn": "ERC20.symbol",
      "offset": [
        3388,
        3402
      ],
      "op": "DUP1",
      "path": "1"
    },
    "616": {
      "fn": "ERC20.symbol",
      "offset": [
        3388,
        3402
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "617": {
      "fn": "ERC20.symbol",
      "offset": [
        3388,
        3402
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D8"
    },
    "620": {
      "fn": "ERC20.symbol",
      "offset": [
        3388,
        3402
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "621": {
      "fn": "ERC20.symbol",
      "offset": [
        3388,
        3402
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C7"
    },
    "624": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        3388,
        3402
      ],
      "op": "JUMP",
      "path": "1"
    },
    "625": {
      "op": "JUMPDEST"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "630": {
      "op": "DUP3"
    },
    "631": {
      "op": "DUP5"
    },
    "632": {
      "op": "SUB"
    },
    "633": {
      "op": "SLT"
    },
    "634": {
      "op": "ISZERO"
    },
    "635": {
      "op": "PUSH2",
      "value": "0x283"
    },
    "638": {
      "op": "JUMPI"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "641": {
      "op": "DUP1"
    },
    "642": {
      "op": "REVERT"
    },
    "643": {
      "op": "JUMPDEST"
    },
    "644": {
      "op": "DUP2"
    },
    "645": {
      "op": "CALLDATALOAD"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "652": {
      "op": "SHL"
    },
    "653": {
      "op": "SUB"
    },
    "654": {
      "op": "NOT"
    },
    "655": {
      "op": "DUP2"
    },
    "656": {
      "op": "AND"
    },
    "657": {
      "op": "DUP2"
    },
    "658": {
      "op": "EQ"
    },
    "659": {
      "op": "PUSH2",
      "value": "0x29B"
    },
    "662": {
      "op": "JUMPI"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "665": {
      "op": "DUP1"
    },
    "666": {
      "op": "REVERT"
    },
    "667": {
      "op": "JUMPDEST"
    },
    "668": {
      "op": "SWAP4"
    },
    "669": {
      "op": "SWAP3"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "op": "POP"
    },
    "672": {
      "op": "POP"
    },
    "673": {
      "jump": "o",
      "op": "JUMP"
    },
    "674": {
      "op": "JUMPDEST"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "679": {
      "op": "DUP1"
    },
    "680": {
      "op": "DUP4"
    },
    "681": {
      "op": "MSTORE"
    },
    "682": {
      "op": "DUP4"
    },
    "683": {
      "op": "MLOAD"
    },
    "684": {
      "op": "DUP1"
    },
    "685": {
      "op": "DUP3"
    },
    "686": {
      "op": "DUP6"
    },
    "687": {
      "op": "ADD"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "691": {
      "op": "JUMPDEST"
    },
    "692": {
      "op": "DUP2"
    },
    "693": {
      "op": "DUP2"
    },
    "694": {
      "op": "LT"
    },
    "695": {
      "op": "ISZERO"
    },
    "696": {
      "op": "PUSH2",
      "value": "0x2CF"
    },
    "699": {
      "op": "JUMPI"
    },
    "700": {
      "op": "DUP6"
    },
    "701": {
      "op": "DUP2"
    },
    "702": {
      "op": "ADD"
    },
    "703": {
      "op": "DUP4"
    },
    "704": {
      "op": "ADD"
    },
    "705": {
      "op": "MLOAD"
    },
    "706": {
      "op": "DUP6"
    },
    "707": {
      "op": "DUP3"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "711": {
      "op": "ADD"
    },
    "712": {
      "op": "MSTORE"
    },
    "713": {
      "op": "DUP3"
    },
    "714": {
      "op": "ADD"
    },
    "715": {
      "op": "PUSH2",
      "value": "0x2B3"
    },
    "718": {
      "op": "JUMP"
    },
    "719": {
      "op": "JUMPDEST"
    },
    "720": {
      "op": "DUP2"
    },
    "721": {
      "op": "DUP2"
    },
    "722": {
      "op": "GT"
    },
    "723": {
      "op": "ISZERO"
    },
    "724": {
      "op": "PUSH2",
      "value": "0x2E1"
    },
    "727": {
      "op": "JUMPI"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "732": {
      "op": "DUP4"
    },
    "733": {
      "op": "DUP8"
    },
    "734": {
      "op": "ADD"
    },
    "735": {
      "op": "ADD"
    },
    "736": {
      "op": "MSTORE"
    },
    "737": {
      "op": "JUMPDEST"
    },
    "738": {
      "op": "POP"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "744": {
      "op": "NOT"
    },
    "745": {
      "op": "AND"
    },
    "746": {
      "op": "SWAP3"
    },
    "747": {
      "op": "SWAP1"
    },
    "748": {
      "op": "SWAP3"
    },
    "749": {
      "op": "ADD"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "752": {
      "op": "ADD"
    },
    "753": {
      "op": "SWAP4"
    },
    "754": {
      "op": "SWAP3"
    },
    "755": {
      "op": "POP"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "op": "POP"
    },
    "758": {
      "jump": "o",
      "op": "JUMP"
    },
    "759": {
      "op": "JUMPDEST"
    },
    "760": {
      "op": "DUP1"
    },
    "761": {
      "op": "CALLDATALOAD"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "SUB"
    },
    "770": {
      "op": "DUP2"
    },
    "771": {
      "op": "AND"
    },
    "772": {
      "op": "DUP2"
    },
    "773": {
      "op": "EQ"
    },
    "774": {
      "op": "PUSH2",
      "value": "0x30E"
    },
    "777": {
      "op": "JUMPI"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "780": {
      "op": "DUP1"
    },
    "781": {
      "op": "REVERT"
    },
    "782": {
      "op": "JUMPDEST"
    },
    "783": {
      "op": "SWAP2"
    },
    "784": {
      "op": "SWAP1"
    },
    "785": {
      "op": "POP"
    },
    "786": {
      "jump": "o",
      "op": "JUMP"
    },
    "787": {
      "op": "JUMPDEST"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "790": {
      "op": "DUP1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "793": {
      "op": "DUP4"
    },
    "794": {
      "op": "DUP6"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "op": "SLT"
    },
    "797": {
      "op": "ISZERO"
    },
    "798": {
      "op": "PUSH2",
      "value": "0x326"
    },
    "801": {
      "op": "JUMPI"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "804": {
      "op": "DUP1"
    },
    "805": {
      "op": "REVERT"
    },
    "806": {
      "op": "JUMPDEST"
    },
    "807": {
      "op": "PUSH2",
      "value": "0x32F"
    },
    "810": {
      "op": "DUP4"
    },
    "811": {
      "op": "PUSH2",
      "value": "0x2F7"
    },
    "814": {
      "jump": "i",
      "op": "JUMP"
    },
    "815": {
      "op": "JUMPDEST"
    },
    "816": {
      "op": "SWAP5"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "819": {
      "op": "SWAP4"
    },
    "820": {
      "op": "SWAP1"
    },
    "821": {
      "op": "SWAP4"
    },
    "822": {
      "op": "ADD"
    },
    "823": {
      "op": "CALLDATALOAD"
    },
    "824": {
      "op": "SWAP4"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "jump": "o",
      "op": "JUMP"
    },
    "829": {
      "op": "JUMPDEST"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "832": {
      "op": "DUP1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "837": {
      "op": "DUP5"
    },
    "838": {
      "op": "DUP7"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "op": "SLT"
    },
    "841": {
      "op": "ISZERO"
    },
    "842": {
      "op": "PUSH2",
      "value": "0x352"
    },
    "845": {
      "op": "JUMPI"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "848": {
      "op": "DUP1"
    },
    "849": {
      "op": "REVERT"
    },
    "850": {
      "op": "JUMPDEST"
    },
    "851": {
      "op": "PUSH2",
      "value": "0x35B"
    },
    "854": {
      "op": "DUP5"
    },
    "855": {
      "op": "PUSH2",
      "value": "0x2F7"
    },
    "858": {
      "jump": "i",
      "op": "JUMP"
    },
    "859": {
      "op": "JUMPDEST"
    },
    "860": {
      "op": "SWAP3"
    },
    "861": {
      "op": "POP"
    },
    "862": {
      "op": "PUSH2",
      "value": "0x369"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "867": {
      "op": "DUP6"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "op": "PUSH2",
      "value": "0x2F7"
    },
    "872": {
      "jump": "i",
      "op": "JUMP"
    },
    "873": {
      "op": "JUMPDEST"
    },
    "874": {
      "op": "SWAP2"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "878": {
      "op": "DUP5"
    },
    "879": {
      "op": "ADD"
    },
    "880": {
      "op": "CALLDATALOAD"
    },
    "881": {
      "op": "SWAP1"
    },
    "882": {
      "op": "POP"
    },
    "883": {
      "op": "SWAP3"
    },
    "884": {
      "op": "POP"
    },
    "885": {
      "op": "SWAP3"
    },
    "886": {
      "op": "POP"
    },
    "887": {
      "op": "SWAP3"
    },
    "888": {
      "jump": "o",
      "op": "JUMP"
    },
    "889": {
      "op": "JUMPDEST"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "894": {
      "op": "DUP3"
    },
    "895": {
      "op": "DUP5"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "op": "SLT"
    },
    "898": {
      "op": "ISZERO"
    },
    "899": {
      "op": "PUSH2",
      "value": "0x38B"
    },
    "902": {
      "op": "JUMPI"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "905": {
      "op": "DUP1"
    },
    "906": {
      "op": "REVERT"
    },
    "907": {
      "op": "JUMPDEST"
    },
    "908": {
      "op": "PUSH2",
      "value": "0x29B"
    },
    "911": {
      "op": "DUP3"
    },
    "912": {
      "op": "PUSH2",
      "value": "0x2F7"
    },
    "915": {
      "jump": "i",
      "op": "JUMP"
    },
    "916": {
      "op": "JUMPDEST"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "919": {
      "op": "DUP1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "922": {
      "op": "DUP4"
    },
    "923": {
      "op": "DUP6"
    },
    "924": {
      "op": "SUB"
    },
    "925": {
      "op": "SLT"
    },
    "926": {
      "op": "ISZERO"
    },
    "927": {
      "op": "PUSH2",
      "value": "0x3A7"
    },
    "930": {
      "op": "JUMPI"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "933": {
      "op": "DUP1"
    },
    "934": {
      "op": "REVERT"
    },
    "935": {
      "op": "JUMPDEST"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x3B0"
    },
    "939": {
      "op": "DUP4"
    },
    "940": {
      "op": "PUSH2",
      "value": "0x2F7"
    },
    "943": {
      "jump": "i",
      "op": "JUMP"
    },
    "944": {
      "op": "JUMPDEST"
    },
    "945": {
      "op": "SWAP2"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "op": "PUSH2",
      "value": "0x3BE"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "952": {
      "op": "DUP5"
    },
    "953": {
      "op": "ADD"
    },
    "954": {
      "op": "PUSH2",
      "value": "0x2F7"
    },
    "957": {
      "jump": "i",
      "op": "JUMP"
    },
    "958": {
      "op": "JUMPDEST"
    },
    "959": {
      "op": "SWAP1"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "op": "SWAP3"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "op": "SWAP3"
    },
    "964": {
      "op": "SWAP1"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "jump": "o",
      "op": "JUMP"
    },
    "967": {
      "op": "JUMPDEST"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "DUP2"
    },
    "972": {
      "op": "SHR"
    },
    "973": {
      "op": "SWAP1"
    },
    "974": {
      "op": "DUP3"
    },
    "975": {
      "op": "AND"
    },
    "976": {
      "op": "DUP1"
    },
    "977": {
      "op": "PUSH2",
      "value": "0x3DB"
    },
    "980": {
      "op": "JUMPI"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "983": {
      "op": "DUP3"
    },
    "984": {
      "op": "AND"
    },
    "985": {
      "op": "SWAP2"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "op": "JUMPDEST"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "990": {
      "op": "DUP3"
    },
    "991": {
      "op": "LT"
    },
    "992": {
      "op": "DUP2"
    },
    "993": {
      "op": "SUB"
    },
    "994": {
      "op": "PUSH2",
      "value": "0x3FB"
    },
    "997": {
      "op": "JUMPI"
    },
    "998": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1013": {
      "op": "MSTORE"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1018": {
      "op": "REVERT"
    },
    "1019": {
      "op": "JUMPDEST"
    },
    "1020": {
      "op": "POP"
    },
    "1021": {
      "op": "SWAP2"
    },
    "1022": {
      "op": "SWAP1"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3a36de86d9d08d070fd7a16068a5d69d7be47b01",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"./ERC165.sol\";\nimport \"../interfaces/IERC20.sol\";\nimport \"../interfaces/extensions/IERC20Metadata.sol\";\nimport \"./utils/Context.sol\";\n\n/// @dev Taken from : OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n/// @dev Update ERC20 contract to support Soul-bounding, once assigned - cannot be transferred \n\n// Revert error OperationNotAllowed when user tries to perform restricted actions, transfer - transferFrom - approve etc.\n// error OperationNotAllowed();\n// Revert error for unsupported actions\n// error UnsupportedAction();\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\n\n // Context : retrieval of msg.sender and msg.data \n // ERC165 : Implementation of supportsInterface(byte4) \n // IERC165 : supportsInterface(byte4) external view \n // IERC20Metadata : External functions of _name, _symbol, _decimal\n // Keeping decimals fixed at 18\n\ncontract ERC20 is Context, ERC165, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165) returns (bool) {\n        return\n            interfaceId == type(IERC20).interfaceId ||\n            interfaceId == type(IERC20Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Restricted\n     */\n    function transfer(address, uint256) public virtual override returns (bool) {\n        //revert OperationNotAllowed();\n        revert();\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Unsupported\n     */\n    function allowance(address, address) public view virtual override returns (uint256) {\n        //revert UnsupportedAction();\n        revert();\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Restricted \n     */\n    function approve(address, uint256) public virtual override returns (bool) {\n        //revert OperationNotAllowed();\n        revert();\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Restricted\n     */\n    function transferFrom(address, address, uint256) public virtual override returns (bool) {\n        //revert OperationNotAllowed();\n        revert();\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * Unsupported\n     */\n    function increaseAllowance(address, uint256) public virtual returns (bool) {\n        //revert UnsupportedAction();\n        revert();\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * Unsupported\n     */\n    function decreaseAllowance(address, uint256) public virtual returns (bool) {\n        //revert UnsupportedAction();\n        revert();\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * Restricted\n     */\n    function _approve(address, address, uint256) internal virtual {\n        //revert OperationNotAllowed();\n        revert();\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "2053:7104:1:-:0;;;2562:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2628:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2651:17:1;;;;:7;;:17;;;;;:::i;:::-;;2562:113;;2053:7104;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2053:7104:1;;;-1:-1:-1;2053:7104:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:8:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:8;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;2053:7104:1;;;;;;",
  "sourcePath": "contracts/ERC20.sol",
  "type": "contract"
}