{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "interfaces/IERC20.sol",
    "12": "interfaces/extensions/IERC20Metadata.sol",
    "14": "interfaces/introspection/local/IERC165.sol",
    "2": "contracts/introspection/local/ERC165.sol",
    "3": "contracts/introspection/local/ERC165Storage.sol",
    "5": "contracts/tokens/ERC20.sol",
    "7": "contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/tokens/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        1726
      ],
      "ERC165": [
        432
      ],
      "ERC165Storage": [
        503
      ],
      "ERC20": [
        1248
      ],
      "IERC165": [
        1930
      ],
      "IERC20": [
        1918
      ],
      "IERC20Metadata": [
        1955
      ]
    },
    "id": 1249,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 631,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:5"
      },
      {
        "absolutePath": "contracts/introspection/local/ERC165Storage.sol",
        "file": "../introspection/local/ERC165Storage.sol",
        "id": 632,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1249,
        "sourceUnit": 504,
        "src": "58:50:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../../interfaces/IERC20.sol",
        "id": 633,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1249,
        "sourceUnit": 1919,
        "src": "109:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/extensions/IERC20Metadata.sol",
        "file": "../../interfaces/extensions/IERC20Metadata.sol",
        "id": 634,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1249,
        "sourceUnit": 1956,
        "src": "147:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 635,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1249,
        "sourceUnit": 1727,
        "src": "204:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 637,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1726,
              "src": "2335:7:5"
            },
            "id": 638,
            "nodeType": "InheritanceSpecifier",
            "src": "2335:7:5"
          },
          {
            "baseName": {
              "id": 639,
              "name": "ERC165Storage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 503,
              "src": "2344:13:5"
            },
            "id": 640,
            "nodeType": "InheritanceSpecifier",
            "src": "2344:13:5"
          },
          {
            "baseName": {
              "id": 641,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1918,
              "src": "2359:6:5"
            },
            "id": 642,
            "nodeType": "InheritanceSpecifier",
            "src": "2359:6:5"
          },
          {
            "baseName": {
              "id": 643,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1955,
              "src": "2367:14:5"
            },
            "id": 644,
            "nodeType": "InheritanceSpecifier",
            "src": "2367:14:5"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 636,
          "nodeType": "StructuredDocumentation",
          "src": "429:1172:5",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 1248,
        "linearizedBaseContracts": [
          1248,
          1955,
          1918,
          503,
          432,
          1930,
          1726
        ],
        "name": "ERC20",
        "nameLocation": "2326:5:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 648,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "2424:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 1248,
            "src": "2388:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 647,
              "keyType": {
                "id": 645,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2396:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2388:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 646,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2407:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 654,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "2496:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 1248,
            "src": "2440:67:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 653,
              "keyType": {
                "id": 649,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2448:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2440:47:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 652,
                "keyType": {
                  "id": 650,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2467:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2459:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 651,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2478:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 656,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "2534:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 1248,
            "src": "2518:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 655,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2518:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 658,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "2568:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1248,
            "src": "2553:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 657,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2553:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 660,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "2594:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1248,
            "src": "2579:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 659,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2579:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "2967:321:5",
              "statements": [
                {
                  "expression": {
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 668,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "2977:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 669,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "2985:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2977:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:13:5"
                },
                {
                  "expression": {
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 672,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "3000:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 673,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "3010:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3000:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:17:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 678,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1918,
                              "src": "3199:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1918_$",
                                "typeString": "type(contract IERC20)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1918_$",
                                "typeString": "type(contract IERC20)"
                              }
                            ],
                            "id": 677,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3194:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3194:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20_$1918",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "3194:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 676,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "3175:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3175:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "3175:44:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 685,
                              "name": "IERC20Metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "3253:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1955_$",
                                "typeString": "type(contract IERC20Metadata)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1955_$",
                                "typeString": "type(contract IERC20Metadata)"
                              }
                            ],
                            "id": 684,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3248:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3248:20:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20Metadata_$1955",
                            "typeString": "type(contract IERC20Metadata)"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "3248:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 683,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "3229:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3229:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "3229:52:5"
                }
              ]
            },
            "documentation": {
              "id": 661,
              "nodeType": "StructuredDocumentation",
              "src": "2608:298:5",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 691,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2937:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2923:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2958:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2944:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2944:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2922:44:5"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:0:5"
            },
            "scope": 1248,
            "src": "2911:377:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              462
            ],
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "3461:60:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 703,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "3502:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 701,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3478:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20_$1248_$",
                          "typeString": "type(contract super ERC20)"
                        }
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 462,
                      "src": "3478:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3478:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 700,
                  "id": 705,
                  "nodeType": "Return",
                  "src": "3471:43:5"
                }
              ]
            },
            "documentation": {
              "id": 692,
              "nodeType": "StructuredDocumentation",
              "src": "3294:56:5",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3364:17:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 697,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 696,
                  "name": "ERC165Storage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 503,
                  "src": "3431:13:5"
                }
              ],
              "src": "3422:23:5"
            },
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3389:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "3382:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3381:20:5"
            },
            "returnParameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "3455:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3454:6:5"
            },
            "scope": 1248,
            "src": "3355:166:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1942
            ],
            "body": {
              "id": 716,
              "nodeType": "Block",
              "src": "3655:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 714,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 658,
                    "src": "3672:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 713,
                  "id": 715,
                  "nodeType": "Return",
                  "src": "3665:12:5"
                }
              ]
            },
            "documentation": {
              "id": 708,
              "nodeType": "StructuredDocumentation",
              "src": "3527:54:5",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "3595:4:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 710,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3622:8:5"
            },
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3599:2:5"
            },
            "returnParameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 717,
                  "src": "3640:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3640:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3639:15:5"
            },
            "scope": 1248,
            "src": "3586:98:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1948
            ],
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "3868:31:5",
              "statements": [
                {
                  "expression": {
                    "id": 724,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 660,
                    "src": "3885:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 723,
                  "id": 725,
                  "nodeType": "Return",
                  "src": "3878:14:5"
                }
              ]
            },
            "documentation": {
              "id": 718,
              "nodeType": "StructuredDocumentation",
              "src": "3690:102:5",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3806:6:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 720,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3835:8:5"
            },
            "parameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3812:2:5"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "3853:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3852:15:5"
            },
            "scope": 1248,
            "src": "3797:102:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1954
            ],
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "4588:26:5",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4605:2:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 733,
                  "id": 735,
                  "nodeType": "Return",
                  "src": "4598:9:5"
                }
              ]
            },
            "documentation": {
              "id": 728,
              "nodeType": "StructuredDocumentation",
              "src": "3905:613:5",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "4532:8:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 730,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4563:8:5"
            },
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4540:2:5"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "4581:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4580:7:5"
            },
            "scope": 1248,
            "src": "4523:91:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1867
            ],
            "body": {
              "id": 746,
              "nodeType": "Block",
              "src": "4744:36:5",
              "statements": [
                {
                  "expression": {
                    "id": 744,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 656,
                    "src": "4761:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 743,
                  "id": 745,
                  "nodeType": "Return",
                  "src": "4754:19:5"
                }
              ]
            },
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "4620:49:5",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "4683:11:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 740,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4717:8:5"
            },
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4694:2:5"
            },
            "returnParameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "4735:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4735:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4734:9:5"
            },
            "scope": 1248,
            "src": "4674:106:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1875
            ],
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "4921:42:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 756,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "4938:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 758,
                    "indexExpression": {
                      "id": 757,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "4948:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4938:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 755,
                  "id": 759,
                  "nodeType": "Return",
                  "src": "4931:25:5"
                }
              ]
            },
            "documentation": {
              "id": 748,
              "nodeType": "StructuredDocumentation",
              "src": "4786:47:5",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 761,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4847:9:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 752,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4894:8:5"
            },
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4865:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "4857:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4857:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4856:17:5"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "4912:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4912:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4911:9:5"
            },
            "scope": 1248,
            "src": "4838:125:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1885
            ],
            "body": {
              "id": 785,
              "nodeType": "Block",
              "src": "5112:104:5",
              "statements": [
                {
                  "assignments": [
                    773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 773,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5130:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 785,
                      "src": "5122:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 772,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5122:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 776,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 774,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "5138:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5138:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5122:28:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 778,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "5170:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 779,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "5177:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 780,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "5181:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 777,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "5160:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5160:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "5160:28:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5205:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 771,
                  "id": 784,
                  "nodeType": "Return",
                  "src": "5198:11:5"
                }
              ]
            },
            "documentation": {
              "id": 762,
              "nodeType": "StructuredDocumentation",
              "src": "4969:53:5",
              "text": " @dev See {IERC20-transfer}."
            },
            "functionSelector": "a9059cbb",
            "id": 786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "5036:8:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 768,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5088:8:5"
            },
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5053:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "5045:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5045:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5065:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "5057:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5057:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5044:28:5"
            },
            "returnParameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "5106:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5106:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5105:6:5"
            },
            "scope": 1248,
            "src": "5027:189:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1895
            ],
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "5379:51:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 797,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 654,
                        "src": "5396:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 799,
                      "indexExpression": {
                        "id": 798,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "5408:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5396:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 801,
                    "indexExpression": {
                      "id": 800,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "5415:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5396:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 796,
                  "id": 802,
                  "nodeType": "Return",
                  "src": "5389:34:5"
                }
              ]
            },
            "documentation": {
              "id": 787,
              "nodeType": "StructuredDocumentation",
              "src": "5222:54:5",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "5290:9:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 793,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5352:8:5"
            },
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5308:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "5300:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5300:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5323:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "5315:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5315:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5299:32:5"
            },
            "returnParameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "5370:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5370:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5369:9:5"
            },
            "scope": 1248,
            "src": "5281:149:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1905
            ],
            "body": {
              "id": 828,
              "nodeType": "Block",
              "src": "5582:108:5",
              "statements": [
                {
                  "assignments": [
                    816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 816,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5600:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 828,
                      "src": "5592:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 815,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5592:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 819,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 817,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "5608:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5608:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5592:28:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 821,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "5639:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 822,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "5646:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 823,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "5655:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 820,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1182,
                      "src": "5630:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5630:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "5630:32:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5679:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 814,
                  "id": 827,
                  "nodeType": "Return",
                  "src": "5672:11:5"
                }
              ]
            },
            "documentation": {
              "id": 805,
              "nodeType": "StructuredDocumentation",
              "src": "5436:52:5",
              "text": " @dev See {IERC20-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "5502:7:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 811,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5558:8:5"
            },
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5518:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "5510:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5510:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5535:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "5527:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5509:33:5"
            },
            "returnParameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "5576:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5576:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5575:6:5"
            },
            "scope": 1248,
            "src": "5493:197:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1917
            ],
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "5891:153:5",
              "statements": [
                {
                  "assignments": [
                    843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 843,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "5909:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 861,
                      "src": "5901:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 842,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5901:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 846,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 844,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "5919:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5919:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5901:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 848,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "5957:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 849,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "5963:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 850,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "5972:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 847,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "5941:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5941:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "5941:38:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 854,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "5999:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 855,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "6005:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 856,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "6009:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 853,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "5989:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5989:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "5989:27:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6033:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 841,
                  "id": 860,
                  "nodeType": "Return",
                  "src": "6026:11:5"
                }
              ]
            },
            "documentation": {
              "id": 830,
              "nodeType": "StructuredDocumentation",
              "src": "5696:57:5",
              "text": " @dev See {IERC20-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5767:12:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 838,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5867:8:5"
            },
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5797:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "5789:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5789:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5819:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "5811:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5811:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5839:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "5831:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5831:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5779:72:5"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "5885:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5885:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5884:6:5"
            },
            "scope": 1248,
            "src": "5758:286:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "6250:140:5",
              "statements": [
                {
                  "assignments": [
                    873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 873,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6268:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 890,
                      "src": "6260:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 872,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6260:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 876,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 874,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "6276:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6276:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6260:28:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 878,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "6307:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 879,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "6314:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 881,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "6333:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 882,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "6340:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 880,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "6323:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6323:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 884,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 867,
                          "src": "6351:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6323:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 877,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1182,
                      "src": "6298:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6298:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 887,
                  "nodeType": "ExpressionStatement",
                  "src": "6298:64:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6379:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 871,
                  "id": 889,
                  "nodeType": "Return",
                  "src": "6372:11:5"
                }
              ]
            },
            "documentation": {
              "id": 863,
              "nodeType": "StructuredDocumentation",
              "src": "6050:101:5",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller."
            },
            "functionSelector": "39509351",
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "6165:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6191:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "6183:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6183:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "6208:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "6200:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6200:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6182:37:5"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "6244:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6244:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6243:6:5"
            },
            "scope": 1248,
            "src": "6156:234:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "6601:328:5",
              "statements": [
                {
                  "assignments": [
                    902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 902,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6619:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 931,
                      "src": "6611:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 901,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6611:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 905,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 903,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "6627:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6627:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6611:28:5"
                },
                {
                  "assignments": [
                    907
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 907,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6657:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 931,
                      "src": "6649:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 906,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6649:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 912,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 909,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "6686:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 910,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "6693:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 908,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "6676:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6676:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6649:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 914,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "6719:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 915,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 896,
                          "src": "6739:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6719:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6756:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6711:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6711:85:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "6711:85:5"
                },
                {
                  "id": 928,
                  "nodeType": "UncheckedBlock",
                  "src": "6806:95:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 921,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "6839:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 922,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "6846:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 923,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "6855:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 924,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 896,
                              "src": "6874:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6855:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 920,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1182,
                          "src": "6830:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6830:60:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 927,
                      "nodeType": "ExpressionStatement",
                      "src": "6830:60:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6918:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 900,
                  "id": 930,
                  "nodeType": "Return",
                  "src": "6911:11:5"
                }
              ]
            },
            "documentation": {
              "id": 892,
              "nodeType": "StructuredDocumentation",
              "src": "6396:101:5",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller."
            },
            "functionSelector": "a457c2d7",
            "id": 932,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6511:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6537:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "6529:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6529:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6554:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "6546:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6546:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6528:42:5"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "6595:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6595:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6594:6:5"
            },
            "scope": 1248,
            "src": "6502:427:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1008,
              "nodeType": "Block",
              "src": "7491:543:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 943,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "7509:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7525:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7517:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 944,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7517:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7517:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7509:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7529:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 942,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7501:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7501:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "7501:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 953,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "7587:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7601:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7593:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 954,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7593:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7593:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7587:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7605:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7579:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7579:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 961,
                  "nodeType": "ExpressionStatement",
                  "src": "7579:64:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 963,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 935,
                        "src": "7675:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 964,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "7681:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 965,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "7685:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 962,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1236,
                      "src": "7654:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7654:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "7654:38:5"
                },
                {
                  "assignments": [
                    969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 969,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "7711:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1008,
                      "src": "7703:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 968,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7703:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 973,
                  "initialValue": {
                    "baseExpression": {
                      "id": 970,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "7725:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 972,
                    "indexExpression": {
                      "id": 971,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 935,
                      "src": "7735:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7725:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7703:37:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 975,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "7758:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 976,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "7773:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7758:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7781:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 974,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7750:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7750:72:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "7750:72:5"
                },
                {
                  "id": 989,
                  "nodeType": "UncheckedBlock",
                  "src": "7832:73:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 981,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "7856:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 983,
                          "indexExpression": {
                            "id": 982,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 935,
                            "src": "7866:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7856:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 984,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "7874:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 985,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "7888:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7874:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7856:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 988,
                      "nodeType": "ExpressionStatement",
                      "src": "7856:38:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 990,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "7914:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 992,
                      "indexExpression": {
                        "id": 991,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "7924:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7914:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 993,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "7931:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7914:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "7914:23:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 997,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 935,
                        "src": "7962:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 998,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "7968:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 999,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "7972:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 996,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1852,
                      "src": "7953:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7953:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1001,
                  "nodeType": "EmitStatement",
                  "src": "7948:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1003,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 935,
                        "src": "8010:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1004,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "8016:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1005,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "8020:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1002,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1247,
                      "src": "7990:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7990:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "7990:37:5"
                }
              ]
            },
            "documentation": {
              "id": 933,
              "nodeType": "StructuredDocumentation",
              "src": "6935:443:5",
              "text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 1009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7392:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 935,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7419:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "7411:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7411:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7441:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "7433:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7433:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7461:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "7453:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7453:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7401:72:5"
            },
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7491:0:5"
            },
            "scope": 1248,
            "src": "7383:651:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1064,
              "nodeType": "Block",
              "src": "8376:324:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1018,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1012,
                          "src": "8394:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8413:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8405:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1019,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8405:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8405:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8394:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8417:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 1017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8386:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8386:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1026,
                  "nodeType": "ExpressionStatement",
                  "src": "8386:65:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8491:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8483:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1028,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8483:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8483:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1032,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "8495:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1033,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "8504:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1027,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1236,
                      "src": "8462:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8462:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "8462:49:5"
                },
                {
                  "expression": {
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1036,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "8522:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1037,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "8538:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8522:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "8522:22:5"
                },
                {
                  "expression": {
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1040,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "8554:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1042,
                      "indexExpression": {
                        "id": 1041,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "8564:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8554:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1043,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "8576:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8554:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "8554:28:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8614:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8606:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1047,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8606:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8606:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1051,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "8618:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1052,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "8627:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1046,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1852,
                      "src": "8597:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8597:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1054,
                  "nodeType": "EmitStatement",
                  "src": "8592:42:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8673:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8665:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1056,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8665:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8665:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1060,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "8677:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1061,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "8686:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1055,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1247,
                      "src": "8645:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8645:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "8645:48:5"
                }
              ]
            },
            "documentation": {
              "id": 1010,
              "nodeType": "StructuredDocumentation",
              "src": "8041:265:5",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 1065,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8320:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8334:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "8326:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8326:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8351:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "8343:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8343:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8325:33:5"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8376:0:5"
            },
            "scope": 1248,
            "src": "8311:389:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "9186:511:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1074,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "9204:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9223:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9215:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1075,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9215:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9215:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9204:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9227:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 1073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9196:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9196:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1082,
                  "nodeType": "ExpressionStatement",
                  "src": "9196:67:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1084,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "9295:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9312:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9304:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1085,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9304:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9304:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1089,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "9316:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1083,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1236,
                      "src": "9274:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9274:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "9274:49:5"
                },
                {
                  "assignments": [
                    1093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1093,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9342:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1136,
                      "src": "9334:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1092,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9334:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1097,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1094,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "9359:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1096,
                    "indexExpression": {
                      "id": 1095,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "9369:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9359:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9334:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1099,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "9395:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1100,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1070,
                          "src": "9413:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9395:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9421:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 1098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9387:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9387:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "9387:71:5"
                },
                {
                  "id": 1113,
                  "nodeType": "UncheckedBlock",
                  "src": "9468:79:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1105,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "9492:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1107,
                          "indexExpression": {
                            "id": 1106,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "9502:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9492:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1108,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1093,
                            "src": "9513:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1109,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "9530:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9513:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9492:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1112,
                      "nodeType": "ExpressionStatement",
                      "src": "9492:44:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1114,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "9556:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1115,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1070,
                      "src": "9572:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9556:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "9556:22:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1119,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "9603:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9620:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9612:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9612:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9612:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1124,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "9624:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1118,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1852,
                      "src": "9594:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9594:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1126,
                  "nodeType": "EmitStatement",
                  "src": "9589:42:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1128,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "9662:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9679:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9671:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1129,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9671:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9671:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1133,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "9683:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1127,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1247,
                      "src": "9642:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9642:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "9642:48:5"
                }
              ]
            },
            "documentation": {
              "id": 1066,
              "nodeType": "StructuredDocumentation",
              "src": "8706:410:5",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n \n Changes:\n - Remove require, instead revert with custom error to save gas"
            },
            "id": 1137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9130:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9144:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "9136:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9136:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9161:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "9153:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9153:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9135:33:5"
            },
            "returnParameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9186:0:5"
            },
            "scope": 1248,
            "src": "9121:576:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1181,
              "nodeType": "Block",
              "src": "10233:257:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1148,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "10251:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10268:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10260:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1149,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10260:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10260:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10251:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10272:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 1147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10243:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10243:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "10243:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1158,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "10329:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10348:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10340:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1159,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10340:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10340:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10329:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10352:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 1157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10321:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10321:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "10321:68:5"
                },
                {
                  "expression": {
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1167,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 654,
                          "src": "10400:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1170,
                        "indexExpression": {
                          "id": 1168,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "10412:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10400:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1171,
                      "indexExpression": {
                        "id": 1169,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1142,
                        "src": "10419:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10400:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1172,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "10430:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10400:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "10400:36:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1176,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "10460:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1177,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1142,
                        "src": "10467:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1178,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1144,
                        "src": "10476:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1175,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "10451:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10451:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1180,
                  "nodeType": "EmitStatement",
                  "src": "10446:37:5"
                }
              ]
            },
            "documentation": {
              "id": 1138,
              "nodeType": "StructuredDocumentation",
              "src": "9703:412:5",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 1182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10129:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10155:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "10147:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10147:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10178:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "10170:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10170:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1144,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10203:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "10195:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10195:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10137:78:5"
            },
            "returnParameters": {
              "id": 1146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10233:0:5"
            },
            "scope": 1248,
            "src": "10120:370:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1224,
              "nodeType": "Block",
              "src": "10891:321:5",
              "statements": [
                {
                  "assignments": [
                    1193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1193,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "10909:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1224,
                      "src": "10901:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10901:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1198,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1195,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "10938:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1196,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "10945:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1194,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "10928:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10928:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10901:52:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1199,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "10967:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10992:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1201,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10992:7:5",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 1200,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "10987:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10987:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "10987:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10967:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1223,
                  "nodeType": "IfStatement",
                  "src": "10963:243:5",
                  "trueBody": {
                    "id": 1222,
                    "nodeType": "Block",
                    "src": "11006:200:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1207,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1193,
                                "src": "11028:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1208,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1189,
                                "src": "11048:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11028:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11056:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 1206,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11020:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11020:68:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1212,
                        "nodeType": "ExpressionStatement",
                        "src": "11020:68:5"
                      },
                      {
                        "id": 1221,
                        "nodeType": "UncheckedBlock",
                        "src": "11102:94:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1214,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1185,
                                  "src": "11139:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1215,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1187,
                                  "src": "11146:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1216,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "11155:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1217,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1189,
                                    "src": "11174:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11155:25:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1213,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1182,
                                "src": "11130:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11130:51:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1220,
                            "nodeType": "ExpressionStatement",
                            "src": "11130:51:5"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1183,
              "nodeType": "StructuredDocumentation",
              "src": "10496:270:5",
              "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 1225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "10780:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1185,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10813:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "10805:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10805:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1187,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10836:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "10828:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10828:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1189,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10861:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "10853:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10853:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10795:78:5"
            },
            "returnParameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10891:0:5"
            },
            "scope": 1248,
            "src": "10771:441:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1235,
              "nodeType": "Block",
              "src": "11915:2:5",
              "statements": []
            },
            "documentation": {
              "id": 1226,
              "nodeType": "StructuredDocumentation",
              "src": "11218:573:5",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "11805:20:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1228,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11843:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "11835:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11835:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1230,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11865:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "11857:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11857:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11885:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "11877:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11877:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11825:72:5"
            },
            "returnParameters": {
              "id": 1234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11915:0:5"
            },
            "scope": 1248,
            "src": "11796:121:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1246,
              "nodeType": "Block",
              "src": "12623:2:5",
              "statements": []
            },
            "documentation": {
              "id": 1237,
              "nodeType": "StructuredDocumentation",
              "src": "11923:577:5",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "12514:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1239,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12551:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "12543:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12543:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1241,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12573:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "12565:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12565:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1243,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12593:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "12585:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12585:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12533:72:5"
            },
            "returnParameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12623:0:5"
            },
            "scope": 1248,
            "src": "12505:120:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1249,
        "src": "2317:10310:5",
        "usedErrors": []
      }
    ],
    "src": "32:12596:5"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000c5038038062000c50833981016040819052620000349162000283565b81516200004990600490602085019062000110565b5080516200005f90600590602084019062000110565b50620000726336372b0760e01b6200008c565b6200008463a219a02560e01b6200008c565b505062000329565b6001600160e01b03198082169003620000eb5760405162461bcd60e51b815260206004820152601b60248201527f4552433136353a20496e76616c696420496e7465726661636549440000000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b8280546200011e90620002ed565b90600052602060002090601f0160209004810192826200014257600085556200018d565b82601f106200015d57805160ff19168380011785556200018d565b828001600101855582156200018d579182015b828111156200018d57825182559160200191906001019062000170565b506200019b9291506200019f565b5090565b5b808211156200019b5760008155600101620001a0565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001de57600080fd5b81516001600160401b0380821115620001fb57620001fb620001b6565b604051601f8301601f19908116603f01168101908282118183101715620002265762000226620001b6565b816040528381526020925086838588010111156200024357600080fd5b600091505b8382101562000267578582018301518183018401529082019062000248565b83821115620002795760008385830101525b9695505050505050565b600080604083850312156200029757600080fd5b82516001600160401b0380821115620002af57600080fd5b620002bd86838701620001cc565b93506020850151915080821115620002d457600080fd5b50620002e385828601620001cc565b9150509250929050565b600181811c908216806200030257607f821691505b6020821081036200032357634e487b7160e01b600052602260045260246000fd5b50919050565b61091780620003396000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461013d57806370a082311461015057806395d89b4114610179578063a457c2d714610181578063a9059cbb14610194578063dd62ed3e146101a757600080fd5b806301ffc9a7146100b957806306fdde03146100e1578063095ea7b3146100f657806318160ddd1461010957806323b872dd1461011b578063313ce5671461012e575b600080fd5b6100cc6100c736600461072b565b6101ba565b60405190151581526020015b60405180910390f35b6100e96101cb565b6040516100d8919061075c565b6100cc6101043660046107cd565b61025d565b6003545b6040519081526020016100d8565b6100cc6101293660046107f7565b610275565b604051601281526020016100d8565b6100cc61014b3660046107cd565b610299565b61010d61015e366004610833565b6001600160a01b031660009081526001602052604090205490565b6100e96102bb565b6100cc61018f3660046107cd565b6102ca565b6100cc6101a23660046107cd565b61034a565b61010d6101b536600461084e565b610358565b60006101c582610383565b92915050565b6060600480546101da90610881565b80601f016020809104026020016040519081016040528092919081815260200182805461020690610881565b80156102535780601f1061022857610100808354040283529160200191610253565b820191906000526020600020905b81548152906001019060200180831161023657829003601f168201915b5050505050905090565b60003361026b8185856103bf565b5060019392505050565b6000336102838582856104e3565b61028e85858561055d565b506001949350505050565b60003361026b8185856102ac8383610358565b6102b691906108bb565b6103bf565b6060600580546101da90610881565b600033816102d88286610358565b90508381101561033d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61028e82868684036103bf565b60003361026b81858561055d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006301ffc9a760e01b6001600160e01b0319831614806101c55750506001600160e01b03191660009081526020819052604090205460ff1690565b6001600160a01b0383166104215760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610334565b6001600160a01b0382166104825760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610334565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ef8484610358565b90506000198114610557578181101561054a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610334565b61055784848484036103bf565b50505050565b6001600160a01b0383166105c15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610334565b6001600160a01b0382166106235760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610334565b6001600160a01b0383166000908152600160205260409020548181101561069b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610334565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906106d29084906108bb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161071e91815260200190565b60405180910390a3610557565b60006020828403121561073d57600080fd5b81356001600160e01b03198116811461075557600080fd5b9392505050565b600060208083528351808285015260005b818110156107895785810183015185820160400152820161076d565b8181111561079b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107c857600080fd5b919050565b600080604083850312156107e057600080fd5b6107e9836107b1565b946020939093013593505050565b60008060006060848603121561080c57600080fd5b610815846107b1565b9250610823602085016107b1565b9150604084013590509250925092565b60006020828403121561084557600080fd5b610755826107b1565b6000806040838503121561086157600080fd5b61086a836107b1565b9150610878602084016107b1565b90509250929050565b600181811c9082168061089557607f821691505b6020821081036108b557634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156108dc57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220dabdac866b577153ae1acf12188f73c7934571b8bb9bd9e389ea1c9dc890428364736f6c634300080d0033",
  "bytecodeSha1": "01f9c451ac0d8e9e62ba967c2806e71d1f9b3430",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "10": {},
      "12": {},
      "14": {},
      "2": {},
      "3": {},
      "5": {
        "ERC20._approve": {
          "33": [
            10251,
            10270,
            true
          ],
          "34": [
            10329,
            10350,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "35": [
            10967,
            11004,
            false
          ],
          "36": [
            11028,
            11054,
            true
          ]
        },
        "ERC20._transfer": {
          "37": [
            7509,
            7527,
            true
          ],
          "38": [
            7587,
            7603,
            true
          ],
          "39": [
            7758,
            7779,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "32": [
            6719,
            6754,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "10": {},
      "12": {},
      "14": {},
      "2": {
        "ERC165.supportsInterface": {
          "17": [
            642,
            689
          ]
        }
      },
      "3": {
        "ERC165Storage.supportsInterface": {
          "18": [
            1173,
            1253
          ]
        }
      },
      "5": {
        "ERC20._approve": {
          "19": [
            10243,
            10311
          ],
          "20": [
            10321,
            10389
          ],
          "21": [
            10400,
            10436
          ],
          "22": [
            10446,
            10483
          ]
        },
        "ERC20._spendAllowance": {
          "23": [
            11020,
            11088
          ],
          "24": [
            11130,
            11181
          ]
        },
        "ERC20._transfer": {
          "25": [
            7501,
            7569
          ],
          "26": [
            7579,
            7643
          ],
          "27": [
            7750,
            7822
          ],
          "28": [
            7856,
            7894
          ],
          "29": [
            7914,
            7937
          ],
          "30": [
            7948,
            7979
          ],
          "31": [
            7990,
            8027
          ]
        },
        "ERC20.allowance": {
          "16": [
            5389,
            5423
          ]
        },
        "ERC20.approve": {
          "6": [
            5630,
            5662
          ],
          "7": [
            5672,
            5683
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            4931,
            4956
          ]
        },
        "ERC20.decimals": {
          "1": [
            4598,
            4607
          ]
        },
        "ERC20.decreaseAllowance": {
          "13": [
            6711,
            6796
          ],
          "14": [
            6830,
            6890
          ]
        },
        "ERC20.increaseAllowance": {
          "11": [
            6298,
            6362
          ]
        },
        "ERC20.name": {
          "4": [
            3665,
            3677
          ]
        },
        "ERC20.supportsInterface": {
          "3": [
            3471,
            3514
          ]
        },
        "ERC20.symbol": {
          "12": [
            3878,
            3892
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            4754,
            4773
          ]
        },
        "ERC20.transfer": {
          "15": [
            5160,
            5188
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            5941,
            5979
          ],
          "9": [
            5989,
            6016
          ],
          "10": [
            6026,
            6037
          ]
        }
      },
      "7": {
        "Context._msgSender": {
          "5": [
            713,
            730
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC165Storage",
    "IERC165",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461013d57806370a082311461015057806395d89b4114610179578063a457c2d714610181578063a9059cbb14610194578063dd62ed3e146101a757600080fd5b806301ffc9a7146100b957806306fdde03146100e1578063095ea7b3146100f657806318160ddd1461010957806323b872dd1461011b578063313ce5671461012e575b600080fd5b6100cc6100c736600461072b565b6101ba565b60405190151581526020015b60405180910390f35b6100e96101cb565b6040516100d8919061075c565b6100cc6101043660046107cd565b61025d565b6003545b6040519081526020016100d8565b6100cc6101293660046107f7565b610275565b604051601281526020016100d8565b6100cc61014b3660046107cd565b610299565b61010d61015e366004610833565b6001600160a01b031660009081526001602052604090205490565b6100e96102bb565b6100cc61018f3660046107cd565b6102ca565b6100cc6101a23660046107cd565b61034a565b61010d6101b536600461084e565b610358565b60006101c582610383565b92915050565b6060600480546101da90610881565b80601f016020809104026020016040519081016040528092919081815260200182805461020690610881565b80156102535780601f1061022857610100808354040283529160200191610253565b820191906000526020600020905b81548152906001019060200180831161023657829003601f168201915b5050505050905090565b60003361026b8185856103bf565b5060019392505050565b6000336102838582856104e3565b61028e85858561055d565b506001949350505050565b60003361026b8185856102ac8383610358565b6102b691906108bb565b6103bf565b6060600580546101da90610881565b600033816102d88286610358565b90508381101561033d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61028e82868684036103bf565b60003361026b81858561055d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006301ffc9a760e01b6001600160e01b0319831614806101c55750506001600160e01b03191660009081526020819052604090205460ff1690565b6001600160a01b0383166104215760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610334565b6001600160a01b0382166104825760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610334565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ef8484610358565b90506000198114610557578181101561054a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610334565b61055784848484036103bf565b50505050565b6001600160a01b0383166105c15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610334565b6001600160a01b0382166106235760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610334565b6001600160a01b0383166000908152600160205260409020548181101561069b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610334565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906106d29084906108bb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161071e91815260200190565b60405180910390a3610557565b60006020828403121561073d57600080fd5b81356001600160e01b03198116811461075557600080fd5b9392505050565b600060208083528351808285015260005b818110156107895785810183015185820160400152820161076d565b8181111561079b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107c857600080fd5b919050565b600080604083850312156107e057600080fd5b6107e9836107b1565b946020939093013593505050565b60008060006060848603121561080c57600080fd5b610815846107b1565b9250610823602085016107b1565b9150604084013590509250925092565b60006020828403121561084557600080fd5b610755826107b1565b6000806040838503121561086157600080fd5b61086a836107b1565b9150610878602084016107b1565b90509250929050565b600181811c9082168061089557607f821691505b6020821081036108b557634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156108dc57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220dabdac866b577153ae1acf12188f73c7934571b8bb9bd9e389ea1c9dc890428364736f6c634300080d0033",
  "deployedSourceMap": "2317:10310:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3355:166;;;;;;:::i;:::-;;:::i;:::-;;;470:14:15;;463:22;445:41;;433:2;418:18;3355:166:5;;;;;;;;3586:98;;;:::i;:::-;;;;;;;:::i;5493:197::-;;;;;;:::i;:::-;;:::i;4674:106::-;4761:12;;4674:106;;;1682:25:15;;;1670:2;1655:18;4674:106:5;1536:177:15;5758:286:5;;;;;;:::i;:::-;;:::i;4523:91::-;;;4605:2;2193:36:15;;2181:2;2166:18;4523:91:5;2051:184:15;6156:234:5;;;;;;:::i;:::-;;:::i;4838:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4938:18:5;4912:7;4938:18;;;:9;:18;;;;;;;4838:125;3797:102;;;:::i;6502:427::-;;;;;;:::i;:::-;;:::i;5027:189::-;;;;;;:::i;:::-;;:::i;5281:149::-;;;;;;:::i;:::-;;:::i;3355:166::-;3455:4;3478:36;3502:11;3478:23;:36::i;:::-;3471:43;3355:166;-1:-1:-1;;3355:166:5:o;3586:98::-;3640:13;3672:5;3665:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3586:98;:::o;5493:197::-;5576:4;720:10:7;5630:32:5;720:10:7;5646:7:5;5655:6;5630:8;:32::i;:::-;-1:-1:-1;5679:4:5;;5493:197;-1:-1:-1;;;5493:197:5:o;5758:286::-;5885:4;720:10:7;5941:38:5;5957:4;720:10:7;5972:6:5;5941:15;:38::i;:::-;5989:27;5999:4;6005:2;6009:6;5989:9;:27::i;:::-;-1:-1:-1;6033:4:5;;5758:286;-1:-1:-1;;;;5758:286:5:o;6156:234::-;6244:4;720:10:7;6298:64:5;720:10:7;6314:7:5;6351:10;6323:25;720:10:7;6314:7:5;6323:9;:25::i;:::-;:38;;;;:::i;:::-;6298:8;:64::i;3797:102::-;3853:13;3885:7;3878:14;;;;;:::i;6502:427::-;6595:4;720:10:7;6595:4:5;6676:25;720:10:7;6693:7:5;6676:9;:25::i;:::-;6649:52;;6739:15;6719:16;:35;;6711:85;;;;-1:-1:-1;;;6711:85:5;;3513:2:15;6711:85:5;;;3495:21:15;3552:2;3532:18;;;3525:30;3591:34;3571:18;;;3564:62;-1:-1:-1;;;3642:18:15;;;3635:35;3687:19;;6711:85:5;;;;;;;;;6830:60;6839:5;6846:7;6874:15;6855:16;:34;6830:8;:60::i;5027:189::-;5106:4;720:10:7;5160:28:5;720:10:7;5177:2:5;5181:6;5160:9;:28::i;5281:149::-;-1:-1:-1;;;;;5396:18:5;;;5370:7;5396:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5281:149::o;1072:188:3:-;1157:4;-1:-1:-1;;;;;;;;;649:40:2;;;1180:73:3;;;-1:-1:-1;;;;;;;;1220:33:3;:20;:33;;;;;;;;;;;;;;1072:188::o;10120:370:5:-;-1:-1:-1;;;;;10251:19:5;;10243:68;;;;-1:-1:-1;;;10243:68:5;;3919:2:15;10243:68:5;;;3901:21:15;3958:2;3938:18;;;3931:30;3997:34;3977:18;;;3970:62;-1:-1:-1;;;4048:18:15;;;4041:34;4092:19;;10243:68:5;3717:400:15;10243:68:5;-1:-1:-1;;;;;10329:21:5;;10321:68;;;;-1:-1:-1;;;10321:68:5;;4324:2:15;10321:68:5;;;4306:21:15;4363:2;4343:18;;;4336:30;4402:34;4382:18;;;4375:62;-1:-1:-1;;;4453:18:15;;;4446:32;4495:19;;10321:68:5;4122:398:15;10321:68:5;-1:-1:-1;;;;;10400:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10451:32;;1682:25:15;;;10451:32:5;;1655:18:15;10451:32:5;;;;;;;10120:370;;;:::o;10771:441::-;10901:24;10928:25;10938:5;10945:7;10928:9;:25::i;:::-;10901:52;;-1:-1:-1;;10967:16:5;:37;10963:243;;11048:6;11028:16;:26;;11020:68;;;;-1:-1:-1;;;11020:68:5;;4727:2:15;11020:68:5;;;4709:21:15;4766:2;4746:18;;;4739:30;4805:31;4785:18;;;4778:59;4854:18;;11020:68:5;4525:353:15;11020:68:5;11130:51;11139:5;11146:7;11174:6;11155:16;:25;11130:8;:51::i;:::-;10891:321;10771:441;;;:::o;7383:651::-;-1:-1:-1;;;;;7509:18:5;;7501:68;;;;-1:-1:-1;;;7501:68:5;;5085:2:15;7501:68:5;;;5067:21:15;5124:2;5104:18;;;5097:30;5163:34;5143:18;;;5136:62;-1:-1:-1;;;5214:18:15;;;5207:35;5259:19;;7501:68:5;4883:401:15;7501:68:5;-1:-1:-1;;;;;7587:16:5;;7579:64;;;;-1:-1:-1;;;7579:64:5;;5491:2:15;7579:64:5;;;5473:21:15;5530:2;5510:18;;;5503:30;5569:34;5549:18;;;5542:62;-1:-1:-1;;;5620:18:15;;;5613:33;5663:19;;7579:64:5;5289:399:15;7579:64:5;-1:-1:-1;;;;;7725:15:5;;7703:19;7725:15;;;:9;:15;;;;;;7758:21;;;;7750:72;;;;-1:-1:-1;;;7750:72:5;;5895:2:15;7750:72:5;;;5877:21:15;5934:2;5914:18;;;5907:30;5973:34;5953:18;;;5946:62;-1:-1:-1;;;6024:18:15;;;6017:36;6070:19;;7750:72:5;5693:402:15;7750:72:5;-1:-1:-1;;;;;7856:15:5;;;;;;;:9;:15;;;;;;7874:20;;;7856:38;;7914:13;;;;;;;;:23;;7888:6;;7856:15;7914:23;;7888:6;;7914:23;:::i;:::-;;;;;;;;7968:2;-1:-1:-1;;;;;7953:26:5;7962:4;-1:-1:-1;;;;;7953:26:5;;7972:6;7953:26;;;;1682:25:15;;1670:2;1655:18;;1536:177;7953:26:5;;;;;;;;7990:37;11796:121;14:286:15;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:15;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:15:o;497:597::-;609:4;638:2;667;656:9;649:21;699:6;693:13;742:6;737:2;726:9;722:18;715:34;767:1;777:140;791:6;788:1;785:13;777:140;;;886:14;;;882:23;;876:30;852:17;;;871:2;848:26;841:66;806:10;;777:140;;;935:6;932:1;929:13;926:91;;;1005:1;1000:2;991:6;980:9;976:22;972:31;965:42;926:91;-1:-1:-1;1078:2:15;1057:15;-1:-1:-1;;1053:29:15;1038:45;;;;1085:2;1034:54;;497:597;-1:-1:-1;;;497:597:15:o;1099:173::-;1167:20;;-1:-1:-1;;;;;1216:31:15;;1206:42;;1196:70;;1262:1;1259;1252:12;1196:70;1099:173;;;:::o;1277:254::-;1345:6;1353;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;1445:29;1464:9;1445:29;:::i;:::-;1435:39;1521:2;1506:18;;;;1493:32;;-1:-1:-1;;;1277:254:15:o;1718:328::-;1795:6;1803;1811;1864:2;1852:9;1843:7;1839:23;1835:32;1832:52;;;1880:1;1877;1870:12;1832:52;1903:29;1922:9;1903:29;:::i;:::-;1893:39;;1951:38;1985:2;1974:9;1970:18;1951:38;:::i;:::-;1941:48;;2036:2;2025:9;2021:18;2008:32;1998:42;;1718:328;;;;;:::o;2240:186::-;2299:6;2352:2;2340:9;2331:7;2327:23;2323:32;2320:52;;;2368:1;2365;2358:12;2320:52;2391:29;2410:9;2391:29;:::i;2431:260::-;2499:6;2507;2560:2;2548:9;2539:7;2535:23;2531:32;2528:52;;;2576:1;2573;2566:12;2528:52;2599:29;2618:9;2599:29;:::i;:::-;2589:39;;2647:38;2681:2;2670:9;2666:18;2647:38;:::i;:::-;2637:48;;2431:260;;;;;:::o;2696:380::-;2775:1;2771:12;;;;2818;;;2839:61;;2893:4;2885:6;2881:17;2871:27;;2839:61;2946:2;2938:6;2935:14;2915:18;2912:38;2909:161;;2992:10;2987:3;2983:20;2980:1;2973:31;3027:4;3024:1;3017:15;3055:4;3052:1;3045:15;2909:161;;2696:380;;;:::o;3081:225::-;3121:3;3152:1;3148:6;3145:1;3142:13;3139:136;;;3197:10;3192:3;3188:20;3185:1;3178:31;3232:4;3229:1;3222:15;3260:4;3257:1;3250:15;3139:136;-1:-1:-1;3291:9:15;;3081:225::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    2317,
    12627
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST PUSH2 0xCC PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0xCC PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x2CA JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 DUP3 PUSH2 0x383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1DA SWAP1 PUSH2 0x881 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x206 SWAP1 PUSH2 0x881 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x253 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x228 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x253 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x236 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x26B DUP2 DUP6 DUP6 PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x283 DUP6 DUP3 DUP6 PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x28E DUP6 DUP6 DUP6 PUSH2 0x55D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x26B DUP2 DUP6 DUP6 PUSH2 0x2AC DUP4 DUP4 PUSH2 0x358 JUMP JUMPDEST PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x1DA SWAP1 PUSH2 0x881 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2D8 DUP3 DUP7 PUSH2 0x358 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28E DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x26B DUP2 DUP6 DUP6 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x1C5 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EF DUP5 DUP5 PUSH2 0x358 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x557 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x334 JUMP JUMPDEST PUSH2 0x557 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6D2 SWAP1 DUP5 SWAP1 PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x71E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x789 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x76D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E9 DUP4 PUSH2 0x7B1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x815 DUP5 PUSH2 0x7B1 JUMP JUMPDEST SWAP3 POP PUSH2 0x823 PUSH1 0x20 DUP6 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86A DUP4 PUSH2 0x7B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x878 PUSH1 0x20 DUP5 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x895 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xBD 0xAC DUP7 PUSH12 0x577153AE1ACF12188F73C793 GASLIMIT PUSH18 0xB8BB9BD9E389EA1C9DC890428364736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13D"
    },
    "53": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x150"
    },
    "64": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x179"
    },
    "75": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x181"
    },
    "86": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x194"
    },
    "97": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "105": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A7"
    },
    "108": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "109": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "REVERT",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1FFC9A7"
    },
    "120": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6FDDE03"
    },
    "131": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE1"
    },
    "135": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95EA7B3"
    },
    "142": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF6"
    },
    "146": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18160DDD"
    },
    "153": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "154": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109"
    },
    "157": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "158": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "164": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "165": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B"
    },
    "168": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "169": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x313CE567"
    },
    "175": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "EQ",
      "path": "5"
    },
    "176": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "179": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "180": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2317,
        12627
      ],
      "op": "REVERT",
      "path": "5"
    },
    "185": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "186": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "189": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC7"
    },
    "192": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "193": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "195": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x72B"
    },
    "198": {
      "fn": "ERC20.supportsInterface",
      "jump": "i",
      "offset": [
        3355,
        3521
      ],
      "op": "JUMP",
      "path": "5"
    },
    "199": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "200": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BA"
    },
    "203": {
      "fn": "ERC20.supportsInterface",
      "jump": "i",
      "offset": [
        3355,
        3521
      ],
      "op": "JUMP",
      "path": "5"
    },
    "204": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "205": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "207": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "208": {
      "op": "SWAP1"
    },
    "209": {
      "op": "ISZERO"
    },
    "210": {
      "op": "ISZERO"
    },
    "211": {
      "op": "DUP2"
    },
    "212": {
      "op": "MSTORE"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "215": {
      "op": "ADD"
    },
    "216": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "217": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "219": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "220": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "DUP1",
      "path": "5"
    },
    "221": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "222": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "SUB",
      "path": "5"
    },
    "223": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "224": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "RETURN",
      "path": "5"
    },
    "225": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "226": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE9"
    },
    "229": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CB"
    },
    "232": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        3586,
        3684
      ],
      "op": "JUMP",
      "path": "5"
    },
    "233": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "234": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "236": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "237": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD8"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "241": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "242": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x75C"
    },
    "245": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        3586,
        3684
      ],
      "op": "JUMP",
      "path": "5"
    },
    "246": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "247": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "250": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x104"
    },
    "253": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "254": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "256": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CD"
    },
    "259": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        5493,
        5690
      ],
      "op": "JUMP",
      "path": "5"
    },
    "260": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "261": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25D"
    },
    "264": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        5493,
        5690
      ],
      "op": "JUMP",
      "path": "5"
    },
    "265": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4674,
        4780
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "266": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x3"
    },
    "268": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4761,
        4773
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "269": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4674,
        4780
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "270": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4674,
        4780
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "272": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4674,
        4780
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "273": {
      "op": "SWAP1"
    },
    "274": {
      "op": "DUP2"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "278": {
      "op": "ADD"
    },
    "279": {
      "fn": "ERC20.totalSupply",
      "offset": [
        4674,
        4780
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD8"
    },
    "282": {
      "op": "JUMP"
    },
    "283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "284": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "287": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x129"
    },
    "290": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "291": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "293": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F7"
    },
    "296": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5758,
        6044
      ],
      "op": "JUMP",
      "path": "5"
    },
    "297": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "298": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x275"
    },
    "301": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5758,
        6044
      ],
      "op": "JUMP",
      "path": "5"
    },
    "302": {
      "fn": "ERC20.decimals",
      "offset": [
        4523,
        4614
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "303": {
      "fn": "ERC20.decimals",
      "offset": [
        4523,
        4614
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "305": {
      "fn": "ERC20.decimals",
      "offset": [
        4523,
        4614
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "306": {
      "fn": "ERC20.decimals",
      "offset": [
        4605,
        4607
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x12"
    },
    "308": {
      "op": "DUP2"
    },
    "309": {
      "op": "MSTORE"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "312": {
      "op": "ADD"
    },
    "313": {
      "fn": "ERC20.decimals",
      "offset": [
        4523,
        4614
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD8"
    },
    "316": {
      "op": "JUMP"
    },
    "317": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6156,
        6390
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "318": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6156,
        6390
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "321": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6156,
        6390
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14B"
    },
    "324": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6156,
        6390
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "325": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6156,
        6390
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "327": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6156,
        6390
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CD"
    },
    "330": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6156,
        6390
      ],
      "op": "JUMP",
      "path": "5"
    },
    "331": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6156,
        6390
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "332": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6156,
        6390
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "335": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6156,
        6390
      ],
      "op": "JUMP",
      "path": "5"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4838,
        4963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4838,
        4963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10D"
    },
    "340": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4838,
        4963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15E"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4838,
        4963
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4838,
        4963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4838,
        4963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x833"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        4838,
        4963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4838,
        4963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "357": {
      "op": "SHL"
    },
    "358": {
      "op": "SUB"
    },
    "359": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "AND",
      "path": "5",
      "statement": 2
    },
    "360": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4912,
        4919
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "362": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "363": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "DUP2",
      "path": "5"
    },
    "364": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "365": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4947
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "367": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "369": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "370": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "372": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "373": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "374": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "375": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4938,
        4956
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "376": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4838,
        4963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "377": {
      "fn": "ERC20.symbol",
      "offset": [
        3797,
        3899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "378": {
      "fn": "ERC20.symbol",
      "offset": [
        3797,
        3899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE9"
    },
    "381": {
      "fn": "ERC20.symbol",
      "offset": [
        3797,
        3899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "384": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        3797,
        3899
      ],
      "op": "JUMP",
      "path": "5"
    },
    "385": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "386": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "389": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18F"
    },
    "392": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6929
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "393": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "395": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CD"
    },
    "398": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6502,
        6929
      ],
      "op": "JUMP",
      "path": "5"
    },
    "399": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "400": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CA"
    },
    "403": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6502,
        6929
      ],
      "op": "JUMP",
      "path": "5"
    },
    "404": {
      "fn": "ERC20.transfer",
      "offset": [
        5027,
        5216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "405": {
      "fn": "ERC20.transfer",
      "offset": [
        5027,
        5216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "408": {
      "fn": "ERC20.transfer",
      "offset": [
        5027,
        5216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A2"
    },
    "411": {
      "fn": "ERC20.transfer",
      "offset": [
        5027,
        5216
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "412": {
      "fn": "ERC20.transfer",
      "offset": [
        5027,
        5216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "414": {
      "fn": "ERC20.transfer",
      "offset": [
        5027,
        5216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CD"
    },
    "417": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        5027,
        5216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "418": {
      "fn": "ERC20.transfer",
      "offset": [
        5027,
        5216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "419": {
      "fn": "ERC20.transfer",
      "offset": [
        5027,
        5216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34A"
    },
    "422": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        5027,
        5216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        5281,
        5430
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "424": {
      "fn": "ERC20.allowance",
      "offset": [
        5281,
        5430
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10D"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        5281,
        5430
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B5"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        5281,
        5430
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "431": {
      "fn": "ERC20.allowance",
      "offset": [
        5281,
        5430
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "433": {
      "fn": "ERC20.allowance",
      "offset": [
        5281,
        5430
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x84E"
    },
    "436": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        5281,
        5430
      ],
      "op": "JUMP",
      "path": "5"
    },
    "437": {
      "fn": "ERC20.allowance",
      "offset": [
        5281,
        5430
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "438": {
      "fn": "ERC20.allowance",
      "offset": [
        5281,
        5430
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x358"
    },
    "441": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        5281,
        5430
      ],
      "op": "JUMP",
      "path": "5"
    },
    "442": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "443": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3455,
        3459
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "445": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3478,
        3514
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 3,
      "value": "0x1C5"
    },
    "448": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3502,
        3513
      ],
      "op": "DUP3",
      "path": "5"
    },
    "449": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3478,
        3501
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x383"
    },
    "452": {
      "fn": "ERC20.supportsInterface",
      "jump": "i",
      "offset": [
        3478,
        3514
      ],
      "op": "JUMP",
      "path": "5"
    },
    "453": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3478,
        3514
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "454": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3471,
        3514
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "455": {
      "fn": "ERC20.supportsInterface",
      "offset": [
        3355,
        3521
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "456": {
      "op": "POP"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "fn": "ERC20.supportsInterface",
      "jump": "o",
      "offset": [
        3355,
        3521
      ],
      "op": "JUMP",
      "path": "5"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        3640,
        3653
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "462": {
      "fn": "ERC20.name",
      "offset": [
        3672,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x4"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP1",
      "path": "5"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DA"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x881"
    },
    "473": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMP",
      "path": "5"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "475": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP1",
      "path": "5"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ADD",
      "path": "5"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP1",
      "path": "5"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DIV",
      "path": "5"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "MUL",
      "path": "5"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ADD",
      "path": "5"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "490": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP2",
      "path": "5"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ADD",
      "path": "5"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP1",
      "path": "5"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP2",
      "path": "5"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP2",
      "path": "5"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "506": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ADD",
      "path": "5"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP3",
      "path": "5"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP1",
      "path": "5"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x206"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x881"
    },
    "517": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMP",
      "path": "5"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP1",
      "path": "5"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP1",
      "path": "5"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "LT",
      "path": "5"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x228"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP1",
      "path": "5"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP4",
      "path": "5"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DIV",
      "path": "5"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "MUL",
      "path": "5"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP4",
      "path": "5"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ADD",
      "path": "5"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMP",
      "path": "5"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP3",
      "path": "5"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ADD",
      "path": "5"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP2",
      "path": "5"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP2",
      "path": "5"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ADD",
      "path": "5"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ADD",
      "path": "5"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP1",
      "path": "5"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP4",
      "path": "5"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "GT",
      "path": "5"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x236"
    },
    "585": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP3",
      "path": "5"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SUB",
      "path": "5"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "AND",
      "path": "5"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "DUP3",
      "path": "5"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "ADD",
      "path": "5"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "POP",
      "path": "5"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "POP",
      "path": "5"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "POP",
      "path": "5"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "POP",
      "path": "5"
    },
    "600": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "POP",
      "path": "5"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "602": {
      "fn": "ERC20.name",
      "offset": [
        3665,
        3677
      ],
      "op": "POP",
      "path": "5"
    },
    "603": {
      "fn": "ERC20.name",
      "offset": [
        3586,
        3684
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "604": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        3586,
        3684
      ],
      "op": "JUMP",
      "path": "5"
    },
    "605": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "606": {
      "fn": "ERC20.approve",
      "offset": [
        5576,
        5580
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "608": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 5
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        5630,
        5662
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 6,
      "value": "0x26B"
    },
    "612": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "DUP2",
      "path": "7"
    },
    "613": {
      "fn": "ERC20.approve",
      "offset": [
        5646,
        5653
      ],
      "op": "DUP6",
      "path": "5"
    },
    "614": {
      "fn": "ERC20.approve",
      "offset": [
        5655,
        5661
      ],
      "op": "DUP6",
      "path": "5"
    },
    "615": {
      "fn": "ERC20.approve",
      "offset": [
        5630,
        5638
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BF"
    },
    "618": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        5630,
        5662
      ],
      "op": "JUMP",
      "path": "5"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        5630,
        5662
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "fn": "ERC20.approve",
      "offset": [
        5679,
        5683
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x1"
    },
    "623": {
      "fn": "ERC20.approve",
      "offset": [
        5679,
        5683
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "624": {
      "fn": "ERC20.approve",
      "offset": [
        5493,
        5690
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "625": {
      "op": "POP"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        5493,
        5690
      ],
      "op": "JUMP",
      "path": "5"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "630": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5885,
        5889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "632": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "CALLER",
      "path": "7"
    },
    "633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5941,
        5979
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 8,
      "value": "0x283"
    },
    "636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5957,
        5961
      ],
      "op": "DUP6",
      "path": "5"
    },
    "637": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "DUP3",
      "path": "7"
    },
    "638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5972,
        5978
      ],
      "op": "DUP6",
      "path": "5"
    },
    "639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5941,
        5956
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E3"
    },
    "642": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5941,
        5979
      ],
      "op": "JUMP",
      "path": "5"
    },
    "643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5941,
        5979
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5989,
        6016
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 9,
      "value": "0x28E"
    },
    "647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5999,
        6003
      ],
      "op": "DUP6",
      "path": "5"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6005,
        6007
      ],
      "op": "DUP6",
      "path": "5"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6009,
        6015
      ],
      "op": "DUP6",
      "path": "5"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5989,
        5998
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55D"
    },
    "653": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5989,
        6016
      ],
      "op": "JUMP",
      "path": "5"
    },
    "654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5989,
        6016
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "655": {
      "op": "POP"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6033,
        6037
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x1"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6033,
        6037
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5758,
        6044
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "660": {
      "op": "POP"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "op": "POP"
    },
    "664": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5758,
        6044
      ],
      "op": "JUMP",
      "path": "5"
    },
    "665": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6156,
        6390
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "666": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6244,
        6248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "668": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "CALLER",
      "path": "7"
    },
    "669": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6298,
        6362
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 11,
      "value": "0x26B"
    },
    "672": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "DUP2",
      "path": "7"
    },
    "673": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6314,
        6321
      ],
      "op": "DUP6",
      "path": "5"
    },
    "674": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6351,
        6361
      ],
      "op": "DUP6",
      "path": "5"
    },
    "675": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6323,
        6348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AC"
    },
    "678": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "DUP4",
      "path": "7"
    },
    "679": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6314,
        6321
      ],
      "op": "DUP4",
      "path": "5"
    },
    "680": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6323,
        6332
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x358"
    },
    "683": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6323,
        6348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "684": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6323,
        6348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "685": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6323,
        6361
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B6"
    },
    "688": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6323,
        6361
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "689": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6323,
        6361
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "690": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6323,
        6361
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8BB"
    },
    "693": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6323,
        6361
      ],
      "op": "JUMP",
      "path": "5"
    },
    "694": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6323,
        6361
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "695": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6298,
        6306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BF"
    },
    "698": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6298,
        6362
      ],
      "op": "JUMP",
      "path": "5"
    },
    "699": {
      "fn": "ERC20.symbol",
      "offset": [
        3797,
        3899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "700": {
      "fn": "ERC20.symbol",
      "offset": [
        3853,
        3866
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "702": {
      "fn": "ERC20.symbol",
      "offset": [
        3885,
        3892
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x5"
    },
    "704": {
      "fn": "ERC20.symbol",
      "offset": [
        3878,
        3892
      ],
      "op": "DUP1",
      "path": "5"
    },
    "705": {
      "fn": "ERC20.symbol",
      "offset": [
        3878,
        3892
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "706": {
      "fn": "ERC20.symbol",
      "offset": [
        3878,
        3892
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DA"
    },
    "709": {
      "fn": "ERC20.symbol",
      "offset": [
        3878,
        3892
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "710": {
      "fn": "ERC20.symbol",
      "offset": [
        3878,
        3892
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x881"
    },
    "713": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        3878,
        3892
      ],
      "op": "JUMP",
      "path": "5"
    },
    "714": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "715": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6595,
        6599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "717": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "CALLER",
      "path": "7"
    },
    "718": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6595,
        6599
      ],
      "op": "DUP2",
      "path": "5"
    },
    "719": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6676,
        6701
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D8"
    },
    "722": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "DUP3",
      "path": "7"
    },
    "723": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6693,
        6700
      ],
      "op": "DUP7",
      "path": "5"
    },
    "724": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6676,
        6685
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x358"
    },
    "727": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6676,
        6701
      ],
      "op": "JUMP",
      "path": "5"
    },
    "728": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6676,
        6701
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "729": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6649,
        6701
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "730": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6649,
        6701
      ],
      "op": "POP",
      "path": "5"
    },
    "731": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6739,
        6754
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 13
    },
    "732": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6719,
        6735
      ],
      "op": "DUP2",
      "path": "5"
    },
    "733": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6719,
        6754
      ],
      "op": "LT",
      "path": "5"
    },
    "734": {
      "branch": 32,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6719,
        6754
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "735": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33D"
    },
    "738": {
      "branch": 32,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "739": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "741": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "DUP2",
      "path": "5"
    },
    "750": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "755": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "DUP3",
      "path": "5"
    },
    "756": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "ADD",
      "path": "5"
    },
    "757": {
      "op": "MSTORE"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "762": {
      "op": "DUP3"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "op": "MSTORE"
    },
    "765": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "800": {
      "op": "DUP3"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "809": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "811": {
      "op": "SHL"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "814": {
      "op": "DUP3"
    },
    "815": {
      "op": "ADD"
    },
    "816": {
      "op": "MSTORE"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "821": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "824": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "DUP1",
      "path": "5"
    },
    "825": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "826": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "SUB",
      "path": "5"
    },
    "827": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "828": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "829": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6711,
        6796
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "830": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6830,
        6890
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 14,
      "value": "0x28E"
    },
    "833": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6839,
        6844
      ],
      "op": "DUP3",
      "path": "5"
    },
    "834": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6846,
        6853
      ],
      "op": "DUP7",
      "path": "5"
    },
    "835": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6874,
        6889
      ],
      "op": "DUP7",
      "path": "5"
    },
    "836": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6855,
        6871
      ],
      "op": "DUP5",
      "path": "5"
    },
    "837": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6855,
        6889
      ],
      "op": "SUB",
      "path": "5"
    },
    "838": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6830,
        6838
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BF"
    },
    "841": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6830,
        6890
      ],
      "op": "JUMP",
      "path": "5"
    },
    "842": {
      "fn": "ERC20.transfer",
      "offset": [
        5027,
        5216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "843": {
      "fn": "ERC20.transfer",
      "offset": [
        5106,
        5110
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "845": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "CALLER",
      "path": "7"
    },
    "846": {
      "fn": "ERC20.transfer",
      "offset": [
        5160,
        5188
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0x26B"
    },
    "849": {
      "fn": "Context._msgSender",
      "offset": [
        720,
        730
      ],
      "op": "DUP2",
      "path": "7"
    },
    "850": {
      "fn": "ERC20.transfer",
      "offset": [
        5177,
        5179
      ],
      "op": "DUP6",
      "path": "5"
    },
    "851": {
      "fn": "ERC20.transfer",
      "offset": [
        5181,
        5187
      ],
      "op": "DUP6",
      "path": "5"
    },
    "852": {
      "fn": "ERC20.transfer",
      "offset": [
        5160,
        5169
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55D"
    },
    "855": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        5160,
        5188
      ],
      "op": "JUMP",
      "path": "5"
    },
    "856": {
      "fn": "ERC20.allowance",
      "offset": [
        5281,
        5430
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "SUB"
    },
    "865": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 16
    },
    "866": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "DUP3",
      "path": "5"
    },
    "867": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "AND",
      "path": "5"
    },
    "868": {
      "fn": "ERC20.allowance",
      "offset": [
        5370,
        5377
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "870": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "871": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "DUP2",
      "path": "5"
    },
    "872": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "873": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5407
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "875": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "877": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "878": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "DUP2",
      "path": "5"
    },
    "879": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "880": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "882": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "DUP1",
      "path": "5"
    },
    "883": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "DUP4",
      "path": "5"
    },
    "884": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5414
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "885": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "886": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "887": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "888": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "AND",
      "path": "5"
    },
    "889": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "DUP3",
      "path": "5"
    },
    "890": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "891": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "892": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "893": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "894": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "895": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "896": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "897": {
      "fn": "ERC20.allowance",
      "offset": [
        5396,
        5423
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "898": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        5281,
        5430
      ],
      "op": "JUMP",
      "path": "5"
    },
    "899": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1072,
        1260
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "900": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1157,
        1161
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "902": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "op": "SUB"
    },
    "918": {
      "op": "NOT"
    },
    "919": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        649,
        689
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 17
    },
    "920": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        649,
        689
      ],
      "op": "AND",
      "path": "2"
    },
    "921": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        649,
        689
      ],
      "op": "EQ",
      "path": "2"
    },
    "922": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1180,
        1253
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 18
    },
    "923": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1180,
        1253
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C5"
    },
    "926": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1180,
        1253
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "op": "SUB"
    },
    "937": {
      "op": "NOT"
    },
    "938": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "AND",
      "path": "3"
    },
    "939": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "941": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "942": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "DUP2",
      "path": "3"
    },
    "943": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "944": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "946": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "DUP2",
      "path": "3"
    },
    "947": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "948": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "949": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "951": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "952": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "953": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "954": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "956": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "AND",
      "path": "3"
    },
    "957": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1220,
        1253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "958": {
      "fn": "ERC165Storage.supportsInterface",
      "jump": "o",
      "offset": [
        1072,
        1260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "959": {
      "fn": "ERC20._approve",
      "offset": [
        10120,
        10490
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "966": {
      "op": "SHL"
    },
    "967": {
      "op": "SUB"
    },
    "968": {
      "fn": "ERC20._approve",
      "offset": [
        10251,
        10270
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 19
    },
    "969": {
      "branch": 33,
      "fn": "ERC20._approve",
      "offset": [
        10251,
        10270
      ],
      "op": "AND",
      "path": "5"
    },
    "970": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x421"
    },
    "973": {
      "branch": 33,
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "974": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "976": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "DUP2",
      "path": "5"
    },
    "985": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "990": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "DUP3",
      "path": "5"
    },
    "991": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "ADD",
      "path": "5"
    },
    "992": {
      "op": "MSTORE"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "995": {
      "op": "DUP1"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1044": {
      "op": "SHL"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1047": {
      "op": "DUP3"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1052": {
      "op": "ADD"
    },
    "1053": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x334"
    },
    "1056": {
      "op": "JUMP"
    },
    "1057": {
      "fn": "ERC20._approve",
      "offset": [
        10243,
        10311
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1064": {
      "op": "SHL"
    },
    "1065": {
      "op": "SUB"
    },
    "1066": {
      "fn": "ERC20._approve",
      "offset": [
        10329,
        10350
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 20
    },
    "1067": {
      "branch": 34,
      "fn": "ERC20._approve",
      "offset": [
        10329,
        10350
      ],
      "op": "AND",
      "path": "5"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x482"
    },
    "1071": {
      "branch": 34,
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1072": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1074": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1083": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1086": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1088": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1089": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "ADD",
      "path": "5"
    },
    "1090": {
      "op": "MSTORE"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1095": {
      "op": "DUP3"
    },
    "1096": {
      "op": "ADD"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1133": {
      "op": "DUP3"
    },
    "1134": {
      "op": "ADD"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1141": {
      "op": "SHL"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1144": {
      "op": "DUP3"
    },
    "1145": {
      "op": "ADD"
    },
    "1146": {
      "op": "MSTORE"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x334"
    },
    "1153": {
      "op": "JUMP"
    },
    "1154": {
      "fn": "ERC20._approve",
      "offset": [
        10321,
        10389
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1161": {
      "op": "SHL"
    },
    "1162": {
      "op": "SUB"
    },
    "1163": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 21
    },
    "1164": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1165": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "AND",
      "path": "5"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1168": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1169": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1170": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1171": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10411
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1173": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1175": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1176": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1177": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1178": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1180": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1181": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1182": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10418
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1183": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1184": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1185": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "AND",
      "path": "5"
    },
    "1186": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1187": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1188": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1189": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1190": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1191": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1192": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1193": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1194": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1195": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10427
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1196": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10436
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1197": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10436
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1198": {
      "fn": "ERC20._approve",
      "offset": [
        10400,
        10436
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1199": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 22
    },
    "1200": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1201": {
      "op": "DUP5"
    },
    "1202": {
      "op": "DUP2"
    },
    "1203": {
      "op": "MSTORE"
    },
    "1204": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1237": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1241": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1242": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1243": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1244": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "SUB",
      "path": "5"
    },
    "1245": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1246": {
      "fn": "ERC20._approve",
      "offset": [
        10451,
        10483
      ],
      "op": "LOG3",
      "path": "5"
    },
    "1247": {
      "fn": "ERC20._approve",
      "offset": [
        10120,
        10490
      ],
      "op": "POP",
      "path": "5"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10120,
        10490
      ],
      "op": "POP",
      "path": "5"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10120,
        10490
      ],
      "op": "POP",
      "path": "5"
    },
    "1250": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10120,
        10490
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1251": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10771,
        11212
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1252": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10901,
        10925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1254": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10928,
        10953
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4EF"
    },
    "1257": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10938,
        10943
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1258": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10945,
        10952
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1259": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10928,
        10937
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x358"
    },
    "1262": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        10928,
        10953
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1263": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10928,
        10953
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1264": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10901,
        10953
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1265": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10901,
        10953
      ],
      "op": "POP",
      "path": "5"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1268": {
      "op": "NOT"
    },
    "1269": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10967,
        10983
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1270": {
      "branch": 35,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10967,
        11004
      ],
      "op": "EQ",
      "path": "5"
    },
    "1271": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10963,
        11206
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x557"
    },
    "1274": {
      "branch": 35,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10963,
        11206
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1275": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11048,
        11054
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 23
    },
    "1276": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11028,
        11044
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1277": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11028,
        11054
      ],
      "op": "LT",
      "path": "5"
    },
    "1278": {
      "branch": 36,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11028,
        11054
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1279": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x54A"
    },
    "1282": {
      "branch": 36,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1283": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1285": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1292": {
      "op": "SHL"
    },
    "1293": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1294": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1297": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1299": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1300": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "ADD",
      "path": "5"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1306": {
      "op": "DUP3"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1344": {
      "op": "DUP3"
    },
    "1345": {
      "op": "ADD"
    },
    "1346": {
      "op": "MSTORE"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1349": {
      "op": "ADD"
    },
    "1350": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x334"
    },
    "1353": {
      "op": "JUMP"
    },
    "1354": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11020,
        11088
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1355": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11130,
        11181
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 24,
      "value": "0x557"
    },
    "1358": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11139,
        11144
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1359": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11146,
        11153
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1360": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11174,
        11180
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1361": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11171
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1362": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11180
      ],
      "op": "SUB",
      "path": "5"
    },
    "1363": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11130,
        11138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BF"
    },
    "1366": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11130,
        11181
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1367": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11130,
        11181
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1368": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10891,
        11212
      ],
      "op": "POP",
      "path": "5"
    },
    "1369": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10771,
        11212
      ],
      "op": "POP",
      "path": "5"
    },
    "1370": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10771,
        11212
      ],
      "op": "POP",
      "path": "5"
    },
    "1371": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10771,
        11212
      ],
      "op": "POP",
      "path": "5"
    },
    "1372": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10771,
        11212
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1373": {
      "fn": "ERC20._transfer",
      "offset": [
        7383,
        8034
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "op": "SUB"
    },
    "1382": {
      "fn": "ERC20._transfer",
      "offset": [
        7509,
        7527
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 25
    },
    "1383": {
      "branch": 37,
      "fn": "ERC20._transfer",
      "offset": [
        7509,
        7527
      ],
      "op": "AND",
      "path": "5"
    },
    "1384": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5C1"
    },
    "1387": {
      "branch": 37,
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1388": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1390": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1397": {
      "op": "SHL"
    },
    "1398": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1399": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1402": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1404": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1405": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "ADD",
      "path": "5"
    },
    "1406": {
      "op": "MSTORE"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1411": {
      "op": "DUP3"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "op": "MSTORE"
    },
    "1414": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1449": {
      "op": "DUP3"
    },
    "1450": {
      "op": "ADD"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1463": {
      "op": "DUP3"
    },
    "1464": {
      "op": "ADD"
    },
    "1465": {
      "op": "MSTORE"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x334"
    },
    "1472": {
      "op": "JUMP"
    },
    "1473": {
      "fn": "ERC20._transfer",
      "offset": [
        7501,
        7569
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "op": "SUB"
    },
    "1482": {
      "fn": "ERC20._transfer",
      "offset": [
        7587,
        7603
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 26
    },
    "1483": {
      "branch": 38,
      "fn": "ERC20._transfer",
      "offset": [
        7587,
        7603
      ],
      "op": "AND",
      "path": "5"
    },
    "1484": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x623"
    },
    "1487": {
      "branch": 38,
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1488": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1490": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1491": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1497": {
      "op": "SHL"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1499": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1502": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1504": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1505": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "ADD",
      "path": "5"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1511": {
      "op": "DUP3"
    },
    "1512": {
      "op": "ADD"
    },
    "1513": {
      "op": "MSTORE"
    },
    "1514": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1549": {
      "op": "DUP3"
    },
    "1550": {
      "op": "ADD"
    },
    "1551": {
      "op": "MSTORE"
    },
    "1552": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1561": {
      "op": "DUP3"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x334"
    },
    "1570": {
      "op": "JUMP"
    },
    "1571": {
      "fn": "ERC20._transfer",
      "offset": [
        7579,
        7643
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1578": {
      "op": "SHL"
    },
    "1579": {
      "op": "SUB"
    },
    "1580": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1581": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "AND",
      "path": "5"
    },
    "1582": {
      "fn": "ERC20._transfer",
      "offset": [
        7703,
        7722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1584": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1585": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1586": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1587": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1589": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1591": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1592": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1594": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1595": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1596": {
      "fn": "ERC20._transfer",
      "offset": [
        7725,
        7740
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1597": {
      "fn": "ERC20._transfer",
      "offset": [
        7758,
        7779
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 27
    },
    "1598": {
      "fn": "ERC20._transfer",
      "offset": [
        7758,
        7779
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1599": {
      "fn": "ERC20._transfer",
      "offset": [
        7758,
        7779
      ],
      "op": "LT",
      "path": "5"
    },
    "1600": {
      "branch": 39,
      "fn": "ERC20._transfer",
      "offset": [
        7758,
        7779
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1601": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x69B"
    },
    "1604": {
      "branch": 39,
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1605": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1607": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1614": {
      "op": "SHL"
    },
    "1615": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1616": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1619": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1621": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1622": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "ADD",
      "path": "5"
    },
    "1623": {
      "op": "MSTORE"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1628": {
      "op": "DUP3"
    },
    "1629": {
      "op": "ADD"
    },
    "1630": {
      "op": "MSTORE"
    },
    "1631": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1678": {
      "op": "SHL"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1681": {
      "op": "DUP3"
    },
    "1682": {
      "op": "ADD"
    },
    "1683": {
      "op": "MSTORE"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1686": {
      "op": "ADD"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x334"
    },
    "1690": {
      "op": "JUMP"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7750,
        7822
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "op": "SUB"
    },
    "1700": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 28
    },
    "1701": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "AND",
      "path": "5"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7865
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1712": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1713": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1715": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1716": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1717": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1718": {
      "fn": "ERC20._transfer",
      "offset": [
        7874,
        7894
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1719": {
      "fn": "ERC20._transfer",
      "offset": [
        7874,
        7894
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1720": {
      "fn": "ERC20._transfer",
      "offset": [
        7874,
        7894
      ],
      "op": "SUB",
      "path": "5"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7894
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1722": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7894
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1723": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7927
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 29
    },
    "1724": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7927
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1725": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7927
      ],
      "op": "AND",
      "path": "5"
    },
    "1726": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1727": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7927
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1728": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1729": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7927
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1732": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1733": {
      "fn": "ERC20._transfer",
      "offset": [
        7888,
        7894
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1734": {
      "fn": "ERC20._transfer",
      "offset": [
        7888,
        7894
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1735": {
      "fn": "ERC20._transfer",
      "offset": [
        7856,
        7871
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1736": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6D2"
    },
    "1739": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1740": {
      "fn": "ERC20._transfer",
      "offset": [
        7888,
        7894
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1741": {
      "fn": "ERC20._transfer",
      "offset": [
        7888,
        7894
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1742": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8BB"
    },
    "1745": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7914,
        7937
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1746": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1747": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1748": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "POP",
      "path": "5"
    },
    "1749": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "POP",
      "path": "5"
    },
    "1750": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1751": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1752": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1753": {
      "fn": "ERC20._transfer",
      "offset": [
        7914,
        7937
      ],
      "op": "POP",
      "path": "5"
    },
    "1754": {
      "fn": "ERC20._transfer",
      "offset": [
        7968,
        7970
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 30
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1761": {
      "op": "SHL"
    },
    "1762": {
      "op": "SUB"
    },
    "1763": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "AND",
      "path": "5"
    },
    "1764": {
      "fn": "ERC20._transfer",
      "offset": [
        7962,
        7966
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1771": {
      "op": "SHL"
    },
    "1772": {
      "op": "SUB"
    },
    "1773": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "AND",
      "path": "5"
    },
    "1774": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1807": {
      "fn": "ERC20._transfer",
      "offset": [
        7972,
        7978
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1808": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1810": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1811": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71E"
    },
    "1814": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1815": {
      "op": "DUP2"
    },
    "1816": {
      "op": "MSTORE"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1819": {
      "op": "ADD"
    },
    "1820": {
      "op": "SWAP1"
    },
    "1821": {
      "op": "JUMP"
    },
    "1822": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1823": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1825": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1826": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1827": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1828": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "SUB",
      "path": "5"
    },
    "1829": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1830": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7979
      ],
      "op": "LOG3",
      "path": "5"
    },
    "1831": {
      "fn": "ERC20._transfer",
      "offset": [
        7990,
        8027
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 31,
      "value": "0x557"
    },
    "1834": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        11796,
        11917
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1835": {
      "op": "JUMPDEST"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1840": {
      "op": "DUP3"
    },
    "1841": {
      "op": "DUP5"
    },
    "1842": {
      "op": "SUB"
    },
    "1843": {
      "op": "SLT"
    },
    "1844": {
      "op": "ISZERO"
    },
    "1845": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "1848": {
      "op": "JUMPI"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1851": {
      "op": "DUP1"
    },
    "1852": {
      "op": "REVERT"
    },
    "1853": {
      "op": "JUMPDEST"
    },
    "1854": {
      "op": "DUP2"
    },
    "1855": {
      "op": "CALLDATALOAD"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "op": "SUB"
    },
    "1864": {
      "op": "NOT"
    },
    "1865": {
      "op": "DUP2"
    },
    "1866": {
      "op": "AND"
    },
    "1867": {
      "op": "DUP2"
    },
    "1868": {
      "op": "EQ"
    },
    "1869": {
      "op": "PUSH2",
      "value": "0x755"
    },
    "1872": {
      "op": "JUMPI"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1875": {
      "op": "DUP1"
    },
    "1876": {
      "op": "REVERT"
    },
    "1877": {
      "op": "JUMPDEST"
    },
    "1878": {
      "op": "SWAP4"
    },
    "1879": {
      "op": "SWAP3"
    },
    "1880": {
      "op": "POP"
    },
    "1881": {
      "op": "POP"
    },
    "1882": {
      "op": "POP"
    },
    "1883": {
      "jump": "o",
      "op": "JUMP"
    },
    "1884": {
      "op": "JUMPDEST"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1889": {
      "op": "DUP1"
    },
    "1890": {
      "op": "DUP4"
    },
    "1891": {
      "op": "MSTORE"
    },
    "1892": {
      "op": "DUP4"
    },
    "1893": {
      "op": "MLOAD"
    },
    "1894": {
      "op": "DUP1"
    },
    "1895": {
      "op": "DUP3"
    },
    "1896": {
      "op": "DUP6"
    },
    "1897": {
      "op": "ADD"
    },
    "1898": {
      "op": "MSTORE"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1901": {
      "op": "JUMPDEST"
    },
    "1902": {
      "op": "DUP2"
    },
    "1903": {
      "op": "DUP2"
    },
    "1904": {
      "op": "LT"
    },
    "1905": {
      "op": "ISZERO"
    },
    "1906": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "1909": {
      "op": "JUMPI"
    },
    "1910": {
      "op": "DUP6"
    },
    "1911": {
      "op": "DUP2"
    },
    "1912": {
      "op": "ADD"
    },
    "1913": {
      "op": "DUP4"
    },
    "1914": {
      "op": "ADD"
    },
    "1915": {
      "op": "MLOAD"
    },
    "1916": {
      "op": "DUP6"
    },
    "1917": {
      "op": "DUP3"
    },
    "1918": {
      "op": "ADD"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1921": {
      "op": "ADD"
    },
    "1922": {
      "op": "MSTORE"
    },
    "1923": {
      "op": "DUP3"
    },
    "1924": {
      "op": "ADD"
    },
    "1925": {
      "op": "PUSH2",
      "value": "0x76D"
    },
    "1928": {
      "op": "JUMP"
    },
    "1929": {
      "op": "JUMPDEST"
    },
    "1930": {
      "op": "DUP2"
    },
    "1931": {
      "op": "DUP2"
    },
    "1932": {
      "op": "GT"
    },
    "1933": {
      "op": "ISZERO"
    },
    "1934": {
      "op": "PUSH2",
      "value": "0x79B"
    },
    "1937": {
      "op": "JUMPI"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1942": {
      "op": "DUP4"
    },
    "1943": {
      "op": "DUP8"
    },
    "1944": {
      "op": "ADD"
    },
    "1945": {
      "op": "ADD"
    },
    "1946": {
      "op": "MSTORE"
    },
    "1947": {
      "op": "JUMPDEST"
    },
    "1948": {
      "op": "POP"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1951": {
      "op": "ADD"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1954": {
      "op": "NOT"
    },
    "1955": {
      "op": "AND"
    },
    "1956": {
      "op": "SWAP3"
    },
    "1957": {
      "op": "SWAP1"
    },
    "1958": {
      "op": "SWAP3"
    },
    "1959": {
      "op": "ADD"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1962": {
      "op": "ADD"
    },
    "1963": {
      "op": "SWAP4"
    },
    "1964": {
      "op": "SWAP3"
    },
    "1965": {
      "op": "POP"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "op": "POP"
    },
    "1968": {
      "jump": "o",
      "op": "JUMP"
    },
    "1969": {
      "op": "JUMPDEST"
    },
    "1970": {
      "op": "DUP1"
    },
    "1971": {
      "op": "CALLDATALOAD"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "op": "SUB"
    },
    "1980": {
      "op": "DUP2"
    },
    "1981": {
      "op": "AND"
    },
    "1982": {
      "op": "DUP2"
    },
    "1983": {
      "op": "EQ"
    },
    "1984": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "1987": {
      "op": "JUMPI"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1990": {
      "op": "DUP1"
    },
    "1991": {
      "op": "REVERT"
    },
    "1992": {
      "op": "JUMPDEST"
    },
    "1993": {
      "op": "SWAP2"
    },
    "1994": {
      "op": "SWAP1"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "jump": "o",
      "op": "JUMP"
    },
    "1997": {
      "op": "JUMPDEST"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2000": {
      "op": "DUP1"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2003": {
      "op": "DUP4"
    },
    "2004": {
      "op": "DUP6"
    },
    "2005": {
      "op": "SUB"
    },
    "2006": {
      "op": "SLT"
    },
    "2007": {
      "op": "ISZERO"
    },
    "2008": {
      "op": "PUSH2",
      "value": "0x7E0"
    },
    "2011": {
      "op": "JUMPI"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2014": {
      "op": "DUP1"
    },
    "2015": {
      "op": "REVERT"
    },
    "2016": {
      "op": "JUMPDEST"
    },
    "2017": {
      "op": "PUSH2",
      "value": "0x7E9"
    },
    "2020": {
      "op": "DUP4"
    },
    "2021": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "2024": {
      "jump": "i",
      "op": "JUMP"
    },
    "2025": {
      "op": "JUMPDEST"
    },
    "2026": {
      "op": "SWAP5"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2029": {
      "op": "SWAP4"
    },
    "2030": {
      "op": "SWAP1"
    },
    "2031": {
      "op": "SWAP4"
    },
    "2032": {
      "op": "ADD"
    },
    "2033": {
      "op": "CALLDATALOAD"
    },
    "2034": {
      "op": "SWAP4"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "op": "POP"
    },
    "2038": {
      "jump": "o",
      "op": "JUMP"
    },
    "2039": {
      "op": "JUMPDEST"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2042": {
      "op": "DUP1"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2047": {
      "op": "DUP5"
    },
    "2048": {
      "op": "DUP7"
    },
    "2049": {
      "op": "SUB"
    },
    "2050": {
      "op": "SLT"
    },
    "2051": {
      "op": "ISZERO"
    },
    "2052": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2055": {
      "op": "JUMPI"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2058": {
      "op": "DUP1"
    },
    "2059": {
      "op": "REVERT"
    },
    "2060": {
      "op": "JUMPDEST"
    },
    "2061": {
      "op": "PUSH2",
      "value": "0x815"
    },
    "2064": {
      "op": "DUP5"
    },
    "2065": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "2068": {
      "jump": "i",
      "op": "JUMP"
    },
    "2069": {
      "op": "JUMPDEST"
    },
    "2070": {
      "op": "SWAP3"
    },
    "2071": {
      "op": "POP"
    },
    "2072": {
      "op": "PUSH2",
      "value": "0x823"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2077": {
      "op": "DUP6"
    },
    "2078": {
      "op": "ADD"
    },
    "2079": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "2082": {
      "jump": "i",
      "op": "JUMP"
    },
    "2083": {
      "op": "JUMPDEST"
    },
    "2084": {
      "op": "SWAP2"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2088": {
      "op": "DUP5"
    },
    "2089": {
      "op": "ADD"
    },
    "2090": {
      "op": "CALLDATALOAD"
    },
    "2091": {
      "op": "SWAP1"
    },
    "2092": {
      "op": "POP"
    },
    "2093": {
      "op": "SWAP3"
    },
    "2094": {
      "op": "POP"
    },
    "2095": {
      "op": "SWAP3"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "op": "SWAP3"
    },
    "2098": {
      "jump": "o",
      "op": "JUMP"
    },
    "2099": {
      "op": "JUMPDEST"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2104": {
      "op": "DUP3"
    },
    "2105": {
      "op": "DUP5"
    },
    "2106": {
      "op": "SUB"
    },
    "2107": {
      "op": "SLT"
    },
    "2108": {
      "op": "ISZERO"
    },
    "2109": {
      "op": "PUSH2",
      "value": "0x845"
    },
    "2112": {
      "op": "JUMPI"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2115": {
      "op": "DUP1"
    },
    "2116": {
      "op": "REVERT"
    },
    "2117": {
      "op": "JUMPDEST"
    },
    "2118": {
      "op": "PUSH2",
      "value": "0x755"
    },
    "2121": {
      "op": "DUP3"
    },
    "2122": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "2125": {
      "jump": "i",
      "op": "JUMP"
    },
    "2126": {
      "op": "JUMPDEST"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2129": {
      "op": "DUP1"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2132": {
      "op": "DUP4"
    },
    "2133": {
      "op": "DUP6"
    },
    "2134": {
      "op": "SUB"
    },
    "2135": {
      "op": "SLT"
    },
    "2136": {
      "op": "ISZERO"
    },
    "2137": {
      "op": "PUSH2",
      "value": "0x861"
    },
    "2140": {
      "op": "JUMPI"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2143": {
      "op": "DUP1"
    },
    "2144": {
      "op": "REVERT"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "PUSH2",
      "value": "0x86A"
    },
    "2149": {
      "op": "DUP4"
    },
    "2150": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "2153": {
      "jump": "i",
      "op": "JUMP"
    },
    "2154": {
      "op": "JUMPDEST"
    },
    "2155": {
      "op": "SWAP2"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "op": "PUSH2",
      "value": "0x878"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2162": {
      "op": "DUP5"
    },
    "2163": {
      "op": "ADD"
    },
    "2164": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "2167": {
      "jump": "i",
      "op": "JUMP"
    },
    "2168": {
      "op": "JUMPDEST"
    },
    "2169": {
      "op": "SWAP1"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "op": "SWAP3"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "op": "SWAP3"
    },
    "2174": {
      "op": "SWAP1"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "jump": "o",
      "op": "JUMP"
    },
    "2177": {
      "op": "JUMPDEST"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2180": {
      "op": "DUP2"
    },
    "2181": {
      "op": "DUP2"
    },
    "2182": {
      "op": "SHR"
    },
    "2183": {
      "op": "SWAP1"
    },
    "2184": {
      "op": "DUP3"
    },
    "2185": {
      "op": "AND"
    },
    "2186": {
      "op": "DUP1"
    },
    "2187": {
      "op": "PUSH2",
      "value": "0x895"
    },
    "2190": {
      "op": "JUMPI"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2193": {
      "op": "DUP3"
    },
    "2194": {
      "op": "AND"
    },
    "2195": {
      "op": "SWAP2"
    },
    "2196": {
      "op": "POP"
    },
    "2197": {
      "op": "JUMPDEST"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2200": {
      "op": "DUP3"
    },
    "2201": {
      "op": "LT"
    },
    "2202": {
      "op": "DUP2"
    },
    "2203": {
      "op": "SUB"
    },
    "2204": {
      "op": "PUSH2",
      "value": "0x8B5"
    },
    "2207": {
      "op": "JUMPI"
    },
    "2208": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2218": {
      "op": "MSTORE"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2223": {
      "op": "MSTORE"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2228": {
      "op": "REVERT"
    },
    "2229": {
      "op": "JUMPDEST"
    },
    "2230": {
      "op": "POP"
    },
    "2231": {
      "op": "SWAP2"
    },
    "2232": {
      "op": "SWAP1"
    },
    "2233": {
      "op": "POP"
    },
    "2234": {
      "jump": "o",
      "op": "JUMP"
    },
    "2235": {
      "op": "JUMPDEST"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2238": {
      "op": "DUP3"
    },
    "2239": {
      "op": "NOT"
    },
    "2240": {
      "op": "DUP3"
    },
    "2241": {
      "op": "GT"
    },
    "2242": {
      "op": "ISZERO"
    },
    "2243": {
      "op": "PUSH2",
      "value": "0x8DC"
    },
    "2246": {
      "op": "JUMPI"
    },
    "2247": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2262": {
      "op": "MSTORE"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2267": {
      "op": "REVERT"
    },
    "2268": {
      "op": "JUMPDEST"
    },
    "2269": {
      "op": "POP"
    },
    "2270": {
      "op": "ADD"
    },
    "2271": {
      "op": "SWAP1"
    },
    "2272": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8477549d9cd33466d7f8e327a3aa4de92db44204",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"../introspection/local/ERC165Storage.sol\";\nimport \"../../interfaces/IERC20.sol\";\nimport \"../../interfaces/extensions/IERC20Metadata.sol\";\nimport \"../utils/Context.sol\";\n\n/// @dev Taken from : OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n/// @dev Updated to support local introspection - supportsInterface() resitry with interface mappings\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\n\n // Context : retrieval of msg.sender and msg.data \n // ERC165 : Implementation of supportsInterface(byte4) \n // IERC165 : supportsInterface(byte4) external view \n // ERC165Storage : local introspection, interface storage registry\n // IERC20Metadata : External functions of _name, _symbol, _decimal\n // Keeping decimals fixed at 18\n\n // Update: It should match IERC20 and we shouldn't update functionality in base\n // instead, we will focus on overriding concerned functions and settings them\n // to throw. However, _registerInterface() is a personal choice. I think it can\n // be utilized in similar classes and see if we can keep gas fixed/under 30000 \n // that supportsInterface() call is supposed to consume. \ncontract ERC20 is Context, ERC165Storage, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n    \n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n\n        // _register interfaces that this contract is supporting \n        // So far ERC20 has IERC20 interface and ERC20Metadata interface support\n        _registerInterface(type(IERC20).interfaceId);\n        _registerInterface(type(IERC20Metadata).interfaceId);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Storage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * \n     * Changes:\n     *\n     * - Remove require, instead revert with custom error to save gas\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "2317:10310:5:-:0;;;2911:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2977:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3000:17:5;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;3175:44:5;-1:-1:-1;;;3175:18:5;:44::i;:::-;3229:52;-1:-1:-1;;;3229:18:5;:52::i;:::-;2911:377;;2317:10310;;1408:197:3;-1:-1:-1;;;;;;1491:25:3;;;;;1483:65;;;;-1:-1:-1;;;1483:65:3;;1805:2:15;1483:65:3;;;1787:21:15;1844:2;1824:18;;;1817:30;1883:29;1863:18;;;1856:57;1930:18;;1483:65:3;;;;;;;;-1:-1:-1;;;;;;1558:33:3;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1558:40:3;1594:4;1558:40;;;1408:197::o;2317:10310:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2317:10310:5;;;-1:-1:-1;2317:10310:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:15;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:15;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:15;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:15:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:15;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1959:380::-;2038:1;2034:12;;;;2081;;;2102:61;;2156:4;2148:6;2144:17;2134:27;;2102:61;2209:2;2201:6;2198:14;2178:18;2175:38;2172:161;;2255:10;2250:3;2246:20;2243:1;2236:31;2290:4;2287:1;2280:15;2318:4;2315:1;2308:15;2172:161;;1959:380;;;:::o;:::-;2317:10310:5;;;;;;",
  "sourcePath": "contracts/tokens/ERC20.sol",
  "type": "contract"
}