{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OperationNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TempDisabled",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC165.sol",
    "1": "contracts/ERC165Storage.sol",
    "11": "interfaces/extensions/IERC721Metadata.sol",
    "12": "interfaces/introspection/local/IERC165.sol",
    "3": "contracts/ERC721.sol",
    "6": "contracts/utils/Context.sol",
    "9": "interfaces/IERC721.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC721.sol",
    "exportedSymbols": {
      "Context": [
        1293
      ],
      "ERC165": [
        22
      ],
      "ERC165Storage": [
        93
      ],
      "ERC721": [
        934
      ],
      "IERC165": [
        1271
      ],
      "IERC721": [
        1510
      ],
      "IERC721Metadata": [
        1537
      ]
    },
    "id": 935,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 480,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:24:3"
      },
      {
        "absolutePath": "interfaces/IERC721.sol",
        "file": "../interfaces/IERC721.sol",
        "id": 481,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 1511,
        "src": "133:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/extensions/IERC721Metadata.sol",
        "file": "../interfaces/extensions/IERC721Metadata.sol",
        "id": 482,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 1538,
        "src": "169:54:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/Context.sol",
        "file": "./utils/Context.sol",
        "id": 483,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 1294,
        "src": "224:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC165Storage.sol",
        "file": "./ERC165Storage.sol",
        "id": 484,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 94,
        "src": "254:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 486,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1293,
              "src": "551:7:3"
            },
            "id": 487,
            "nodeType": "InheritanceSpecifier",
            "src": "551:7:3"
          },
          {
            "baseName": {
              "id": 488,
              "name": "ERC165Storage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 93,
              "src": "560:13:3"
            },
            "id": 489,
            "nodeType": "InheritanceSpecifier",
            "src": "560:13:3"
          },
          {
            "baseName": {
              "id": 490,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1510,
              "src": "575:7:3"
            },
            "id": 491,
            "nodeType": "InheritanceSpecifier",
            "src": "575:7:3"
          },
          {
            "baseName": {
              "id": 492,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1537,
              "src": "584:15:3"
            },
            "id": 493,
            "nodeType": "InheritanceSpecifier",
            "src": "584:15:3"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 485,
          "nodeType": "StructuredDocumentation",
          "src": "285:246:3",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 934,
        "linearizedBaseContracts": [
          934,
          1537,
          1510,
          93,
          22,
          1271,
          1293
        ],
        "name": "ERC721",
        "nameLocation": "541:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 495,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "639:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "624:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 494,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "624:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 497,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "686:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "671:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 496,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "671:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 501,
            "mutability": "mutable",
            "name": "_tokenToOwnerMap",
            "nameLocation": "782:16:3",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "746:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 500,
              "keyType": {
                "id": 498,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "754:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "746:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "765:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 505,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "885:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "849:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 504,
              "keyType": {
                "id": 502,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "857:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "849:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 503,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "868:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "errorSelector": "f50a3b52",
            "id": 507,
            "name": "OperationNotAllowed",
            "nameLocation": "922:19:3",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "941:2:3"
            },
            "src": "916:28:3"
          },
          {
            "errorSelector": "6a88e924",
            "id": 509,
            "name": "TempDisabled",
            "nameLocation": "955:12:3",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:2:3"
            },
            "src": "949:21:3"
          },
          {
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "1251:219:3",
              "statements": [
                {
                  "expression": {
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 517,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "1261:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 518,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "1269:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1261:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:13:3"
                },
                {
                  "expression": {
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 521,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "1284:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 522,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1294:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1284:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:17:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 527,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1510,
                              "src": "1379:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$1510_$",
                                "typeString": "type(contract IERC721)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$1510_$",
                                "typeString": "type(contract IERC721)"
                              }
                            ],
                            "id": 526,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1374:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1374:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1510",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1374:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 525,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1355:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1355:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:45:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 534,
                              "name": "IERC721Metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1537,
                              "src": "1434:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1537_$",
                                "typeString": "type(contract IERC721Metadata)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1537_$",
                                "typeString": "type(contract IERC721Metadata)"
                              }
                            ],
                            "id": 533,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1429:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1429:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1537",
                            "typeString": "type(contract IERC721Metadata)"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1429:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 532,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1410:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:53:3"
                }
              ]
            },
            "documentation": {
              "id": 510,
              "nodeType": "StructuredDocumentation",
              "src": "1082:108:3",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 540,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1221:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "1207:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1242:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "1228:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1206:44:3"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:0:3"
            },
            "scope": 934,
            "src": "1195:275:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              52
            ],
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "1643:60:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 552,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "1684:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 550,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1660:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721_$934_$",
                          "typeString": "type(contract super ERC721)"
                        }
                      },
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "1660:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1660:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 549,
                  "id": 554,
                  "nodeType": "Return",
                  "src": "1653:43:3"
                }
              ]
            },
            "documentation": {
              "id": 541,
              "nodeType": "StructuredDocumentation",
              "src": "1476:56:3",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1546:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 546,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 545,
                  "name": "ERC165Storage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 93,
                  "src": "1613:13:3"
                }
              ],
              "src": "1604:23:3"
            },
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1571:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1564:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:20:3"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1637:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1636:6:3"
            },
            "scope": 934,
            "src": "1537:166:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1435
            ],
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "1918:123:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 566,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "1936:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1953:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1945:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 567,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1945:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1945:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1936:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1957:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        },
                        "value": "ERC721: address zero is not a valid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        }
                      ],
                      "id": 565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1928:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:73:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 575,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "2018:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 577,
                    "indexExpression": {
                      "id": 576,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "2028:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2018:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 564,
                  "id": 578,
                  "nodeType": "Return",
                  "src": "2011:23:3"
                }
              ]
            },
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "1709:123:3",
              "text": " @dev See {IERC721-balanceOf}.\n It'll always be between 0 and 1. We'll limit single nft per address"
            },
            "functionSelector": "70a08231",
            "id": 580,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1846:9:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 561,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1891:8:3"
            },
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1864:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "1856:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:15:3"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "1909:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:9:3"
            },
            "scope": 934,
            "src": "1837:204:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1443
            ],
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "2179:163:3",
              "statements": [
                {
                  "assignments": [
                    590
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 590,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2197:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 607,
                      "src": "2189:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 589,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2189:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 594,
                  "initialValue": {
                    "baseExpression": {
                      "id": 591,
                      "name": "_tokenToOwnerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "2205:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 593,
                    "indexExpression": {
                      "id": 592,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "2222:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2205:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2189:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 596,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 590,
                          "src": "2248:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2265:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2257:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 597,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2257:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2257:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2248:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2269:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2240:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "2240:73:3"
                },
                {
                  "expression": {
                    "id": 605,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 590,
                    "src": "2330:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 588,
                  "id": 606,
                  "nodeType": "Return",
                  "src": "2323:12:3"
                }
              ]
            },
            "documentation": {
              "id": 581,
              "nodeType": "StructuredDocumentation",
              "src": "2047:46:3",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2107:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 585,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2152:8:3"
            },
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2123:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "2115:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2114:17:3"
            },
            "returnParameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "2170:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2170:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2169:9:3"
            },
            "scope": 934,
            "src": "2098:244:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1522
            ],
            "body": {
              "id": 617,
              "nodeType": "Block",
              "src": "2473:29:3",
              "statements": [
                {
                  "expression": {
                    "id": 615,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 495,
                    "src": "2490:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 614,
                  "id": 616,
                  "nodeType": "Return",
                  "src": "2483:12:3"
                }
              ]
            },
            "documentation": {
              "id": 609,
              "nodeType": "StructuredDocumentation",
              "src": "2348:51:3",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2413:4:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 611,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2440:8:3"
            },
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2417:2:3"
            },
            "returnParameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "2458:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2457:15:3"
            },
            "scope": 934,
            "src": "2404:98:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1528
            ],
            "body": {
              "id": 627,
              "nodeType": "Block",
              "src": "2637:31:3",
              "statements": [
                {
                  "expression": {
                    "id": 625,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 497,
                    "src": "2654:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 624,
                  "id": 626,
                  "nodeType": "Return",
                  "src": "2647:14:3"
                }
              ]
            },
            "documentation": {
              "id": 619,
              "nodeType": "StructuredDocumentation",
              "src": "2508:53:3",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2575:6:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 621,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2604:8:3"
            },
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:2:3"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "2622:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2621:15:3"
            },
            "scope": 934,
            "src": "2566:102:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1536
            ],
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "2880:230:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 639,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "2906:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 638,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 796,
                          "src": "2898:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2898:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2916:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2890:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2890:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 643,
                  "nodeType": "ExpressionStatement",
                  "src": "2890:76:3"
                },
                {
                  "assignments": [
                    645
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 645,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2991:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "2977:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 644,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2977:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 646,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "3001:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3001:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2977:34:3"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 651,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 645,
                              "src": "3034:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3028:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 649,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3028:5:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3028:14:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3028:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3052:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3028:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3101:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3028:75:3",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 660,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 645,
                              "src": "3080:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 661,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "3089:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 658,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3063:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3063:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3063:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3056:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3056:6:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3056:42:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 636,
                  "id": 666,
                  "nodeType": "Return",
                  "src": "3021:82:3"
                }
              ]
            },
            "documentation": {
              "id": 629,
              "nodeType": "StructuredDocumentation",
              "src": "2674:113:3",
              "text": " @dev See {IERC721Metadata-tokenURI}.\n - Change to reflect on-chain generative ASCII art "
            },
            "functionSelector": "c87b56dd",
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2801:8:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 633,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2847:8:3"
            },
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2818:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "2810:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2810:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2809:17:3"
            },
            "returnParameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "2865:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2865:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2864:15:3"
            },
            "scope": 934,
            "src": "2792:318:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "3471:26:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3488:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 673,
                  "id": 675,
                  "nodeType": "Return",
                  "src": "3481:9:3"
                }
              ]
            },
            "documentation": {
              "id": 669,
              "nodeType": "StructuredDocumentation",
              "src": "3116:284:3",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts.\n Implement this in EXPerience - Badge contract"
            },
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3414:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3422:2:3"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "3456:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3456:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3455:15:3"
            },
            "scope": 934,
            "src": "3405:92:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1483
            ],
            "body": {
              "id": 689,
              "nodeType": "Block",
              "src": "3631:45:3",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 686,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "3648:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3648:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 688,
                  "nodeType": "RevertStatement",
                  "src": "3641:28:3"
                }
              ]
            },
            "documentation": {
              "id": 678,
              "nodeType": "StructuredDocumentation",
              "src": "3503:64:3",
              "text": " @dev See {IERC721-approve}.\n Restricted"
            },
            "functionSelector": "095ea7b3",
            "id": 690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3581:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 684,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3622:8:3"
            },
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "3589:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3589:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "3598:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3588:18:3"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3631:0:3"
            },
            "scope": 934,
            "src": "3572:104:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1499
            ],
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "3832:45:3",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 699,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "3849:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3849:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "RevertStatement",
                  "src": "3842:28:3"
                }
              ]
            },
            "documentation": {
              "id": 691,
              "nodeType": "StructuredDocumentation",
              "src": "3682:68:3",
              "text": " @dev See {IERC721-getApproved}.\n Restricted"
            },
            "functionSelector": "081812fc",
            "id": 703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3764:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 695,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3805:8:3"
            },
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3776:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3776:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3775:9:3"
            },
            "returnParameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3823:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3823:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3822:9:3"
            },
            "scope": 934,
            "src": "3755:122:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1491
            ],
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "4028:45:3",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 712,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "4045:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4045:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "RevertStatement",
                  "src": "4038:28:3"
                }
              ]
            },
            "documentation": {
              "id": 704,
              "nodeType": "StructuredDocumentation",
              "src": "3883:74:3",
              "text": " @dev See {IERC721-setApprovalForAll}.\n Restricted"
            },
            "functionSelector": "a22cb465",
            "id": 716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3971:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 710,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4019:8:3"
            },
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "3989:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "3998:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3998:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3988:15:3"
            },
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4028:0:3"
            },
            "scope": 934,
            "src": "3962:111:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1509
            ],
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "4245:45:3",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 727,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "4262:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4262:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "RevertStatement",
                  "src": "4255:28:3"
                }
              ]
            },
            "documentation": {
              "id": 717,
              "nodeType": "StructuredDocumentation",
              "src": "4079:73:3",
              "text": " @dev See {IERC721-isApprovedForAll}.\n Restricted"
            },
            "functionSelector": "e985e9c5",
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4166:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 723,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4221:8:3"
            },
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "4183:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4183:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "4192:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4192:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4182:18:3"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "4239:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4239:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4238:6:3"
            },
            "scope": 934,
            "src": "4157:133:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1475
            ],
            "body": {
              "id": 745,
              "nodeType": "Block",
              "src": "4443:45:3",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 742,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "4460:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4460:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "RevertStatement",
                  "src": "4453:28:3"
                }
              ]
            },
            "documentation": {
              "id": 732,
              "nodeType": "StructuredDocumentation",
              "src": "4296:69:3",
              "text": " @dev See {IERC721-transferFrom}.\n Restricted"
            },
            "functionSelector": "23b872dd",
            "id": 746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4379:12:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 740,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4434:8:3"
            },
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "4392:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4392:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "4401:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4401:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "4410:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4410:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4391:27:3"
            },
            "returnParameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4443:0:3"
            },
            "scope": 934,
            "src": "4370:118:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1465
            ],
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "4649:45:3",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 757,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "4666:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 759,
                  "nodeType": "RevertStatement",
                  "src": "4659:28:3"
                }
              ]
            },
            "documentation": {
              "id": 747,
              "nodeType": "StructuredDocumentation",
              "src": "4494:73:3",
              "text": " @dev See {IERC721-safeTransferFrom}.\n Restricted"
            },
            "functionSelector": "42842e0e",
            "id": 761,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4581:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 755,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4640:8:3"
            },
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "4598:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "4607:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "4616:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4597:27:3"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4649:0:3"
            },
            "scope": 934,
            "src": "4572:122:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1455
            ],
            "body": {
              "id": 777,
              "nodeType": "Block",
              "src": "4869:45:3",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 774,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "4886:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4886:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "RevertStatement",
                  "src": "4879:28:3"
                }
              ]
            },
            "documentation": {
              "id": 762,
              "nodeType": "StructuredDocumentation",
              "src": "4700:73:3",
              "text": " @dev See {IERC721-safeTransferFrom}.\n Restricted"
            },
            "functionSelector": "b88d4fde",
            "id": 778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4787:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 772,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4860:8:3"
            },
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "4804:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "4813:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4813:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "4822:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4822:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "4831:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4831:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4803:41:3"
            },
            "returnParameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4869:0:3"
            },
            "scope": 934,
            "src": "4778:136:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 795,
              "nodeType": "Block",
              "src": "6273:63:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 786,
                        "name": "_tokenToOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "6290:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 788,
                      "indexExpression": {
                        "id": 787,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "6307:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6290:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6327:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6319:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 789,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6319:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6319:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6290:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 785,
                  "id": 794,
                  "nodeType": "Return",
                  "src": "6283:46:3"
                }
              ]
            },
            "documentation": {
              "id": 779,
              "nodeType": "StructuredDocumentation",
              "src": "5905:292:3",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "6211:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6227:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "6219:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6219:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6218:17:3"
            },
            "returnParameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "6267:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6267:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6266:6:3"
            },
            "scope": 934,
            "src": "6202:134:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 809,
              "nodeType": "Block",
              "src": "6732:35:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 805,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 799,
                        "src": "6748:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 806,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "6752:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 804,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "6742:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6742:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "6742:18:3"
                }
              ]
            },
            "documentation": {
              "id": 797,
              "nodeType": "StructuredDocumentation",
              "src": "6343:319:3",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "6676:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6694:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "6686:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6706:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "6698:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6698:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6685:29:3"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6732:0:3"
            },
            "scope": 934,
            "src": "6667:100:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 825,
              "nodeType": "Block",
              "src": "7097:150:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 821,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "7113:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 822,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "7117:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 820,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "7107:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7107:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "7107:18:3"
                }
              ]
            },
            "documentation": {
              "id": 811,
              "nodeType": "StructuredDocumentation",
              "src": "6773:210:3",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "6997:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7024:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "7016:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7016:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7044:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "7036:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7036:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "7061:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7061:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7006:73:3"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7097:0:3"
            },
            "scope": 934,
            "src": "6988:259:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 900,
              "nodeType": "Block",
              "src": "7721:467:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 835,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 829,
                          "src": "7739:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7753:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7745:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 836,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7745:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7745:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7739:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7731:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7731:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "7731:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7810:17:3",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 846,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 831,
                              "src": "7819:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 845,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "7811:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7811:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7829:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7802:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7802:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "7802:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 853,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 505,
                            "src": "7878:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 855,
                          "indexExpression": {
                            "id": 854,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "7888:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7878:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7895:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7878:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a204f6e6c79206f6e6520455850657269656e636556696577657220284e465429207065722061646472657373",
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7898:53:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dc797a71e690c6a35d6c1fecba8a348b39e099b3f3c0d58423fda3fcc4bc75c",
                          "typeString": "literal_string \"ERC721: Only one EXPerienceViewer (NFT) per address\""
                        },
                        "value": "ERC721: Only one EXPerienceViewer (NFT) per address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dc797a71e690c6a35d6c1fecba8a348b39e099b3f3c0d58423fda3fcc4bc75c",
                          "typeString": "literal_string \"ERC721: Only one EXPerienceViewer (NFT) per address\""
                        }
                      ],
                      "id": 852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7870:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7870:82:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "7870:82:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7992:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7984:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 862,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7984:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7984:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 866,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "7996:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 867,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8000:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 861,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 922,
                      "src": "7963:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7963:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "7963:45:3"
                },
                {
                  "expression": {
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 870,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "8019:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 872,
                      "indexExpression": {
                        "id": 871,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "8029:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8019:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8036:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8019:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "8019:18:3"
                },
                {
                  "expression": {
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 876,
                        "name": "_tokenToOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "8047:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 878,
                      "indexExpression": {
                        "id": 877,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8064:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8047:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 879,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "8075:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8047:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "8047:30:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8110:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8102:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 883,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8102:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8102:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 887,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "8114:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 888,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8118:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 882,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "8093:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8093:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 890,
                  "nodeType": "EmitStatement",
                  "src": "8088:38:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8165:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8157:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 892,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8157:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8157:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 896,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "8169:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 897,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8173:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 891,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "8137:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8137:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "8137:44:3"
                }
              ]
            },
            "documentation": {
              "id": 827,
              "nodeType": "StructuredDocumentation",
              "src": "7253:402:3",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n \n - We limit minting single NFT to single address here by adding a condition \n Emits a {Transfer} event."
            },
            "id": 901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7669:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7683:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 901,
                  "src": "7675:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7675:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7695:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 901,
                  "src": "7687:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7687:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7674:29:3"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7721:0:3"
            },
            "scope": 934,
            "src": "7660:528:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "8522:412:3",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 907,
                      "name": "TempDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "8539:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8539:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "RevertStatement",
                  "src": "8532:21:3"
                }
              ]
            },
            "documentation": {
              "id": 902,
              "nodeType": "StructuredDocumentation",
              "src": "8194:282:3",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n \n - At the moment, let's not think about any burning mechanism\n Emits a {Transfer} event."
            },
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8490:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "8496:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8496:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8495:9:3"
            },
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8522:0:3"
            },
            "scope": 934,
            "src": "8481:453:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 921,
              "nodeType": "Block",
              "src": "9610:2:3",
              "statements": []
            },
            "documentation": {
              "id": 912,
              "nodeType": "StructuredDocumentation",
              "src": "8940:545:3",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9499:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9537:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "9529:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9529:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9559:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "9551:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9551:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9579:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "9571:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9571:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9519:73:3"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9610:0:3"
            },
            "scope": 934,
            "src": "9490:122:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 932,
              "nodeType": "Block",
              "src": "10103:2:3",
              "statements": []
            },
            "documentation": {
              "id": 923,
              "nodeType": "StructuredDocumentation",
              "src": "9618:361:3",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "9993:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10030:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 933,
                  "src": "10022:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10022:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 927,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10052:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 933,
                  "src": "10044:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10044:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10072:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 933,
                  "src": "10064:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10064:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10012:73:3"
            },
            "returnParameters": {
              "id": 931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10103:0:3"
            },
            "scope": 934,
            "src": "9984:121:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 935,
        "src": "532:9575:3",
        "usedErrors": [
          507,
          509
        ]
      }
    ],
    "src": "107:10000:3"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000b4b38038062000b4b833981016040819052620000349162000283565b81516200004990600190602085019062000110565b5080516200005f90600290602084019062000110565b50620000726380ac58cd60e01b6200008c565b62000084635b5e139f60e01b6200008c565b505062000329565b6001600160e01b03198082169003620000eb5760405162461bcd60e51b815260206004820152601b60248201527f4552433136353a20496e76616c696420496e7465726661636549440000000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b8280546200011e90620002ed565b90600052602060002090601f0160209004810192826200014257600085556200018d565b82601f106200015d57805160ff19168380011785556200018d565b828001600101855582156200018d579182015b828111156200018d57825182559160200191906001019062000170565b506200019b9291506200019f565b5090565b5b808211156200019b5760008155600101620001a0565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001de57600080fd5b81516001600160401b0380821115620001fb57620001fb620001b6565b604051601f8301601f19908116603f01168101908282118183101715620002265762000226620001b6565b816040528381526020925086838588010111156200024357600080fd5b600091505b8382101562000267578582018301518183018401529082019062000248565b83821115620002795760008385830101525b9695505050505050565b600080604083850312156200029757600080fd5b82516001600160401b0380821115620002af57600080fd5b620002bd86838701620001cc565b93506020850151915080821115620002d457600080fd5b50620002e385828601620001cc565b9150509250929050565b600181811c908216806200030257607f821691505b6020821081036200032357634e487b7160e01b600052602260045260246000fd5b50919050565b61081280620003396000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461019b578063b88d4fde146101a9578063c87b56dd146101b7578063e985e9c5146101ca57600080fd5b80636352211e1461015f57806370a082311461017257806395d89b411461019357600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610151575b600080fd5b6100e76100e23660046104dc565b6101d8565b60405190151581526020015b60405180910390f35b6101046101e9565b6040516100f39190610536565b61012461011f366004610569565b61027b565b6040516001600160a01b0390911681526020016100f3565b61014f61014a36600461059e565b610296565b005b61014f61014a3660046105c8565b61012461016d366004610569565b6102af565b610185610180366004610604565b61032b565b6040519081526020016100f3565b6101046103b1565b61014f61014a36600461061f565b61014f61014a366004610671565b6101046101c5366004610569565b6103c0565b6100e761011f36600461074d565b60006101e3826104a0565b92915050565b6060600180546101f890610780565b80601f016020809104026020016040519081016040528092919081815260200182805461022490610780565b80156102715780601f1061024657610100808354040283529160200191610271565b820191906000526020600020905b81548152906001019060200180831161025457829003601f168201915b5050505050905090565b6000604051637a851da960e11b815260040160405180910390fd5b604051637a851da960e11b815260040160405180910390fd5b6000818152600360205260408120546001600160a01b0316806101e35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084015b60405180910390fd5b60006001600160a01b0382166103955760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610322565b506001600160a01b031660009081526004602052604090205490565b6060600280546101f890610780565b6000818152600360205260409020546060906001600160a01b031661043f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610322565b600061045660408051602081019091526000815290565b905060008151116104765760405180602001604052806000815250610499565b80836040516020016104899291906107ba565b6040516020818303038152906040525b9392505050565b60006301ffc9a760e01b6001600160e01b0319831614806101e35750506001600160e01b03191660009081526020819052604090205460ff1690565b6000602082840312156104ee57600080fd5b81356001600160e01b03198116811461049957600080fd5b60005b83811015610521578181015183820152602001610509565b83811115610530576000848401525b50505050565b6020815260008251806020840152610555816040850160208701610506565b601f01601f19169190910160400192915050565b60006020828403121561057b57600080fd5b5035919050565b80356001600160a01b038116811461059957600080fd5b919050565b600080604083850312156105b157600080fd5b6105ba83610582565b946020939093013593505050565b6000806000606084860312156105dd57600080fd5b6105e684610582565b92506105f460208501610582565b9150604084013590509250925092565b60006020828403121561061657600080fd5b61049982610582565b6000806040838503121561063257600080fd5b61063b83610582565b91506020830135801515811461065057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561068757600080fd5b61069085610582565b935061069e60208601610582565b925060408501359150606085013567ffffffffffffffff808211156106c257600080fd5b818701915087601f8301126106d657600080fd5b8135818111156106e8576106e861065b565b604051601f8201601f19908116603f011681019083821181831017156107105761071061065b565b816040528281528a602084870101111561072957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561076057600080fd5b61076983610582565b915061077760208401610582565b90509250929050565b600181811c9082168061079457607f821691505b6020821081036107b457634e487b7160e01b600052602260045260246000fd5b50919050565b600083516107cc818460208801610506565b919091019182525060200191905056fea2646970667358221220bf0d871fec60031a71c888584eb7e2c28ef4d0a52dfd762b8785709d20ed72cc64736f6c634300080d0033",
  "bytecodeSha1": "86705e11fab449a688cabfdd7b59aa0d05799010",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "11": {},
      "12": {},
      "3": {
        "ERC721.balanceOf": {
          "12": [
            1936,
            1955,
            true
          ]
        },
        "ERC721.tokenURI": {
          "13": [
            3028,
            3053,
            true
          ]
        }
      },
      "6": {},
      "9": {}
    },
    "statements": {
      "0": {
        "ERC165.supportsInterface": {
          "10": [
            636,
            683
          ]
        }
      },
      "1": {
        "ERC165Storage.supportsInterface": {
          "11": [
            1174,
            1254
          ]
        }
      },
      "11": {},
      "12": {},
      "3": {
        "ERC721._baseURI": {
          "8": [
            3481,
            3490
          ]
        },
        "ERC721._exists": {
          "6": [
            6283,
            6329
          ]
        },
        "ERC721.balanceOf": {
          "3": [
            1928,
            2001
          ],
          "4": [
            2011,
            2034
          ]
        },
        "ERC721.name": {
          "1": [
            2483,
            2495
          ]
        },
        "ERC721.ownerOf": {
          "2": [
            2240,
            2313
          ]
        },
        "ERC721.supportsInterface": {
          "0": [
            1653,
            1696
          ]
        },
        "ERC721.symbol": {
          "5": [
            2647,
            2661
          ]
        },
        "ERC721.tokenURI": {
          "7": [
            2890,
            2966
          ],
          "9": [
            3021,
            3103
          ]
        }
      },
      "6": {},
      "9": {}
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC165Storage",
    "IERC165",
    "IERC721",
    "IERC721Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461019b578063b88d4fde146101a9578063c87b56dd146101b7578063e985e9c5146101ca57600080fd5b80636352211e1461015f57806370a082311461017257806395d89b411461019357600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610151575b600080fd5b6100e76100e23660046104dc565b6101d8565b60405190151581526020015b60405180910390f35b6101046101e9565b6040516100f39190610536565b61012461011f366004610569565b61027b565b6040516001600160a01b0390911681526020016100f3565b61014f61014a36600461059e565b610296565b005b61014f61014a3660046105c8565b61012461016d366004610569565b6102af565b610185610180366004610604565b61032b565b6040519081526020016100f3565b6101046103b1565b61014f61014a36600461061f565b61014f61014a366004610671565b6101046101c5366004610569565b6103c0565b6100e761011f36600461074d565b60006101e3826104a0565b92915050565b6060600180546101f890610780565b80601f016020809104026020016040519081016040528092919081815260200182805461022490610780565b80156102715780601f1061024657610100808354040283529160200191610271565b820191906000526020600020905b81548152906001019060200180831161025457829003601f168201915b5050505050905090565b6000604051637a851da960e11b815260040160405180910390fd5b604051637a851da960e11b815260040160405180910390fd5b6000818152600360205260408120546001600160a01b0316806101e35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084015b60405180910390fd5b60006001600160a01b0382166103955760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610322565b506001600160a01b031660009081526004602052604090205490565b6060600280546101f890610780565b6000818152600360205260409020546060906001600160a01b031661043f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610322565b600061045660408051602081019091526000815290565b905060008151116104765760405180602001604052806000815250610499565b80836040516020016104899291906107ba565b6040516020818303038152906040525b9392505050565b60006301ffc9a760e01b6001600160e01b0319831614806101e35750506001600160e01b03191660009081526020819052604090205460ff1690565b6000602082840312156104ee57600080fd5b81356001600160e01b03198116811461049957600080fd5b60005b83811015610521578181015183820152602001610509565b83811115610530576000848401525b50505050565b6020815260008251806020840152610555816040850160208701610506565b601f01601f19169190910160400192915050565b60006020828403121561057b57600080fd5b5035919050565b80356001600160a01b038116811461059957600080fd5b919050565b600080604083850312156105b157600080fd5b6105ba83610582565b946020939093013593505050565b6000806000606084860312156105dd57600080fd5b6105e684610582565b92506105f460208501610582565b9150604084013590509250925092565b60006020828403121561061657600080fd5b61049982610582565b6000806040838503121561063257600080fd5b61063b83610582565b91506020830135801515811461065057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561068757600080fd5b61069085610582565b935061069e60208601610582565b925060408501359150606085013567ffffffffffffffff808211156106c257600080fd5b818701915087601f8301126106d657600080fd5b8135818111156106e8576106e861065b565b604051601f8201601f19908116603f011681019083821181831017156107105761071061065b565b816040528281528a602084870101111561072957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561076057600080fd5b61076983610582565b915061077760208401610582565b90509250929050565b600181811c9082168061079457607f821691505b6020821081036107b457634e487b7160e01b600052602260045260246000fd5b50919050565b600083516107cc818460208801610506565b919091019182525060200191905056fea2646970667358221220bf0d871fec60031a71c888584eb7e2c28ef4d0a52dfd762b8785709d20ed72cc64736f6c634300080d0033",
  "deployedSourceMap": "532:9575:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:166;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;1537:166:3;;;;;;;;2404:98;;;:::i;:::-;;;;;;;:::i;3755:122::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1497:32:13;;;1479:51;;1467:2;1452:18;3755:122:3;1333:203:13;3572:104:3;;;;;;:::i;:::-;;:::i;:::-;;4370:118;;;;;;:::i;2098:244::-;;;;;;:::i;:::-;;:::i;1837:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2648:25:13;;;2636:2;2621:18;1837:204:3;2502:177:13;2566:102:3;;;:::i;3962:111::-;;;;;;:::i;4778:136::-;;;;;;:::i;2792:318::-;;;;;;:::i;:::-;;:::i;4157:133::-;;;;;;:::i;1537:166::-;1637:4;1660:36;1684:11;1660:23;:36::i;:::-;1653:43;1537:166;-1:-1:-1;;1537:166:3:o;2404:98::-;2458:13;2490:5;2483:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2404:98;:::o;3755:122::-;3823:7;3849:21;;-1:-1:-1;;;3849:21:3;;;;;;;;;;;3572:104;3648:21;;-1:-1:-1;;;3648:21:3;;;;;;;;;;;2098:244;2170:7;2205:25;;;:16;:25;;;;;;-1:-1:-1;;;;;2205:25:3;;2240:73;;;;-1:-1:-1;;;2240:73:3;;5163:2:13;2240:73:3;;;5145:21:13;5202:2;5182:18;;;5175:30;5241:34;5221:18;;;5214:62;-1:-1:-1;;;5292:18:13;;;5285:39;5341:19;;2240:73:3;;;;;;;;1837:204;1909:7;-1:-1:-1;;;;;1936:19:3;;1928:73;;;;-1:-1:-1;;;1928:73:3;;5573:2:13;1928:73:3;;;5555:21:13;5612:2;5592:18;;;5585:30;5651:34;5631:18;;;5624:62;-1:-1:-1;;;5702:18:13;;;5695:39;5751:19;;1928:73:3;5371:405:13;1928:73:3;-1:-1:-1;;;;;;2018:16:3;;;;;:9;:16;;;;;;;1837:204::o;2566:102::-;2622:13;2654:7;2647:14;;;;;:::i;2792:318::-;6267:4;6290:25;;;:16;:25;;;;;;2865:13;;-1:-1:-1;;;;;6290:25:3;2890:76;;;;-1:-1:-1;;;2890:76:3;;5983:2:13;2890:76:3;;;5965:21:13;6022:2;6002:18;;;5995:30;6061:34;6041:18;;;6034:62;-1:-1:-1;;;6112:18:13;;;6105:45;6167:19;;2890:76:3;5781:411:13;2890:76:3;2977:21;3001:10;3481:9;;;;;;;;;-1:-1:-1;3481:9:3;;;3405:92;3001:10;2977:34;;3052:1;3034:7;3028:21;:25;:75;;;;;;;;;;;;;;;;;3080:7;3089;3063:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3028:75;3021:82;2792:318;-1:-1:-1;;;2792:318:3:o;1073:188:1:-;1158:4;-1:-1:-1;;;;;;;;;643:40:0;;;1181:73:1;;;-1:-1:-1;;;;;;;;1221:33:1;:20;:33;;;;;;;;;;;;;;1073:188::o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;745:1;736:6;731:3;727:16;720:27;701:48;;497:258;;;:::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:13;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:13:o;1148:180::-;1207:6;1260:2;1248:9;1239:7;1235:23;1231:32;1228:52;;;1276:1;1273;1266:12;1228:52;-1:-1:-1;1299:23:13;;1148:180;-1:-1:-1;1148:180:13:o;1541:173::-;1609:20;;-1:-1:-1;;;;;1658:31:13;;1648:42;;1638:70;;1704:1;1701;1694:12;1638:70;1541:173;;;:::o;1719:254::-;1787:6;1795;1848:2;1836:9;1827:7;1823:23;1819:32;1816:52;;;1864:1;1861;1854:12;1816:52;1887:29;1906:9;1887:29;:::i;:::-;1877:39;1963:2;1948:18;;;;1935:32;;-1:-1:-1;;;1719:254:13:o;1978:328::-;2055:6;2063;2071;2124:2;2112:9;2103:7;2099:23;2095:32;2092:52;;;2140:1;2137;2130:12;2092:52;2163:29;2182:9;2163:29;:::i;:::-;2153:39;;2211:38;2245:2;2234:9;2230:18;2211:38;:::i;:::-;2201:48;;2296:2;2285:9;2281:18;2268:32;2258:42;;1978:328;;;;;:::o;2311:186::-;2370:6;2423:2;2411:9;2402:7;2398:23;2394:32;2391:52;;;2439:1;2436;2429:12;2391:52;2462:29;2481:9;2462:29;:::i;2684:347::-;2749:6;2757;2810:2;2798:9;2789:7;2785:23;2781:32;2778:52;;;2826:1;2823;2816:12;2778:52;2849:29;2868:9;2849:29;:::i;:::-;2839:39;;2928:2;2917:9;2913:18;2900:32;2975:5;2968:13;2961:21;2954:5;2951:32;2941:60;;2997:1;2994;2987:12;2941:60;3020:5;3010:15;;;2684:347;;;;;:::o;3036:127::-;3097:10;3092:3;3088:20;3085:1;3078:31;3128:4;3125:1;3118:15;3152:4;3149:1;3142:15;3168:1138;3263:6;3271;3279;3287;3340:3;3328:9;3319:7;3315:23;3311:33;3308:53;;;3357:1;3354;3347:12;3308:53;3380:29;3399:9;3380:29;:::i;:::-;3370:39;;3428:38;3462:2;3451:9;3447:18;3428:38;:::i;:::-;3418:48;;3513:2;3502:9;3498:18;3485:32;3475:42;;3568:2;3557:9;3553:18;3540:32;3591:18;3632:2;3624:6;3621:14;3618:34;;;3648:1;3645;3638:12;3618:34;3686:6;3675:9;3671:22;3661:32;;3731:7;3724:4;3720:2;3716:13;3712:27;3702:55;;3753:1;3750;3743:12;3702:55;3789:2;3776:16;3811:2;3807;3804:10;3801:36;;;3817:18;;:::i;:::-;3892:2;3886:9;3860:2;3946:13;;-1:-1:-1;;3942:22:13;;;3966:2;3938:31;3934:40;3922:53;;;3990:18;;;4010:22;;;3987:46;3984:72;;;4036:18;;:::i;:::-;4076:10;4072:2;4065:22;4111:2;4103:6;4096:18;4151:7;4146:2;4141;4137;4133:11;4129:20;4126:33;4123:53;;;4172:1;4169;4162:12;4123:53;4228:2;4223;4219;4215:11;4210:2;4202:6;4198:15;4185:46;4273:1;4268:2;4263;4255:6;4251:15;4247:24;4240:35;4294:6;4284:16;;;;;;;3168:1138;;;;;;;:::o;4311:260::-;4379:6;4387;4440:2;4428:9;4419:7;4415:23;4411:32;4408:52;;;4456:1;4453;4446:12;4408:52;4479:29;4498:9;4479:29;:::i;:::-;4469:39;;4527:38;4561:2;4550:9;4546:18;4527:38;:::i;:::-;4517:48;;4311:260;;;;;:::o;4576:380::-;4655:1;4651:12;;;;4698;;;4719:61;;4773:4;4765:6;4761:17;4751:27;;4719:61;4826:2;4818:6;4815:14;4795:18;4792:38;4789:161;;4872:10;4867:3;4863:20;4860:1;4853:31;4907:4;4904:1;4897:15;4935:4;4932:1;4925:15;4789:161;;4576:380;;;:::o;6197:372::-;6356:3;6394:6;6388:13;6410:53;6456:6;6451:3;6444:4;6436:6;6432:17;6410:53;:::i;:::-;6485:16;;;;6510:21;;;-1:-1:-1;6558:4:13;6547:16;;6197:372;-1:-1:-1;6197:372:13:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}. Restricted"
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}. It'll always be between 0 and 1. We'll limit single nft per address"
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}. Restricted"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}. Restricted"
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}. Restricted"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}. Restricted"
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}. Restricted"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}. - Change to reflect on-chain generative ASCII art "
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}. Restricted"
      }
    },
    "version": 1
  },
  "offset": [
    532,
    10107
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x151 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x671 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3 DUP3 PUSH2 0x4A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1F8 SWAP1 PUSH2 0x780 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x224 SWAP1 PUSH2 0x780 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x271 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x246 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x271 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x254 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x7A851DA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7A851DA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x322 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1F8 SWAP1 PUSH2 0x780 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x322 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x499 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x489 SWAP3 SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x1E3 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x521 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x509 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x555 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5BA DUP4 PUSH2 0x582 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E6 DUP5 PUSH2 0x582 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F4 PUSH1 0x20 DUP6 ADD PUSH2 0x582 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x499 DUP3 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63B DUP4 PUSH2 0x582 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x690 DUP6 PUSH2 0x582 JUMP JUMPDEST SWAP4 POP PUSH2 0x69E PUSH1 0x20 DUP7 ADD PUSH2 0x582 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x6E8 JUMPI PUSH2 0x6E8 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x710 JUMPI PUSH2 0x710 PUSH2 0x65B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x769 DUP4 PUSH2 0x582 JUMP JUMPDEST SWAP2 POP PUSH2 0x777 PUSH1 0x20 DUP5 ADD PUSH2 0x582 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x794 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x7CC DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x506 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xD DUP8 0x1F 0xEC PUSH1 0x3 BYTE PUSH18 0xC888584EB7E2C28EF4D0A52DFD762B878570 SWAP14 KECCAK256 0xED PUSH19 0xCC64736F6C634300080D003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        532,
        10107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "64": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A9"
    },
    "75": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B7"
    },
    "86": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA"
    },
    "97": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "REVERT",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F"
    },
    "113": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x172"
    },
    "124": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x193"
    },
    "135": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "REVERT",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "142": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "153": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151"
    },
    "206": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        532,
        10107
      ],
      "op": "REVERT",
      "path": "3"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4DC"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1537,
        1703
      ],
      "op": "JUMP",
      "path": "3"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D8"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1537,
        1703
      ],
      "op": "JUMP",
      "path": "3"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "DUP1",
      "path": "3"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "SUB",
      "path": "3"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "RETURN",
      "path": "3"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2404,
        2502
      ],
      "op": "JUMP",
      "path": "3"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x536"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2404,
        2502
      ],
      "op": "JUMP",
      "path": "3"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x569"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3755,
        3877
      ],
      "op": "JUMP",
      "path": "3"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27B"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3755,
        3877
      ],
      "op": "JUMP",
      "path": "3"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59E"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3572,
        3676
      ],
      "op": "JUMP",
      "path": "3"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x296"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3572,
        3676
      ],
      "op": "JUMP",
      "path": "3"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "STOP",
      "path": "3"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4370,
        4488
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4370,
        4488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4370,
        4488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4370,
        4488
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4370,
        4488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4370,
        4488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C8"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4370,
        4488
      ],
      "op": "JUMP",
      "path": "3"
    },
    "351": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2098,
        2342
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "352": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2098,
        2342
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "355": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2098,
        2342
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16D"
    },
    "358": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2098,
        2342
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "359": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2098,
        2342
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "361": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2098,
        2342
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x569"
    },
    "364": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2098,
        2342
      ],
      "op": "JUMP",
      "path": "3"
    },
    "365": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2098,
        2342
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "366": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2098,
        2342
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF"
    },
    "369": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2098,
        2342
      ],
      "op": "JUMP",
      "path": "3"
    },
    "370": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "371": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185"
    },
    "374": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x180"
    },
    "377": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "378": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "380": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x604"
    },
    "383": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1837,
        2041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "384": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "385": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32B"
    },
    "388": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1837,
        2041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "389": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "390": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "393": {
      "op": "SWAP1"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "ERC721.symbol",
      "offset": [
        2566,
        2668
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "404": {
      "fn": "ERC721.symbol",
      "offset": [
        2566,
        2668
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "407": {
      "fn": "ERC721.symbol",
      "offset": [
        2566,
        2668
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B1"
    },
    "410": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2566,
        2668
      ],
      "op": "JUMP",
      "path": "3"
    },
    "411": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        3962,
        4073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "412": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        3962,
        4073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "415": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        3962,
        4073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A"
    },
    "418": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        3962,
        4073
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "419": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        3962,
        4073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "421": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        3962,
        4073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x61F"
    },
    "424": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        3962,
        4073
      ],
      "op": "JUMP",
      "path": "3"
    },
    "425": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4778,
        4914
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "426": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4778,
        4914
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4778,
        4914
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A"
    },
    "432": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4778,
        4914
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "433": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4778,
        4914
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "435": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4778,
        4914
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x671"
    },
    "438": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        4778,
        4914
      ],
      "op": "JUMP",
      "path": "3"
    },
    "439": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "440": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "443": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C5"
    },
    "446": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "447": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "449": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x569"
    },
    "452": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2792,
        3110
      ],
      "op": "JUMP",
      "path": "3"
    },
    "453": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "454": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C0"
    },
    "457": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2792,
        3110
      ],
      "op": "JUMP",
      "path": "3"
    },
    "458": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4157,
        4290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "459": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4157,
        4290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "462": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4157,
        4290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "465": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4157,
        4290
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "466": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4157,
        4290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "468": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4157,
        4290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x74D"
    },
    "471": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4157,
        4290
      ],
      "op": "JUMP",
      "path": "3"
    },
    "472": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "473": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1637,
        1641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "475": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1660,
        1696
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 0,
      "value": "0x1E3"
    },
    "478": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1684,
        1695
      ],
      "op": "DUP3",
      "path": "3"
    },
    "479": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1660,
        1683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A0"
    },
    "482": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1660,
        1696
      ],
      "op": "JUMP",
      "path": "3"
    },
    "483": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1660,
        1696
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "484": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1653,
        1696
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "485": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1703
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "486": {
      "op": "POP"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1537,
        1703
      ],
      "op": "JUMP",
      "path": "3"
    },
    "489": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "490": {
      "fn": "ERC721.name",
      "offset": [
        2458,
        2471
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "492": {
      "fn": "ERC721.name",
      "offset": [
        2490,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x1"
    },
    "494": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP1",
      "path": "3"
    },
    "495": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "496": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F8"
    },
    "499": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "500": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x780"
    },
    "503": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMP",
      "path": "3"
    },
    "504": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "505": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP1",
      "path": "3"
    },
    "506": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "508": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ADD",
      "path": "3"
    },
    "509": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "511": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP1",
      "path": "3"
    },
    "512": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "513": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DIV",
      "path": "3"
    },
    "514": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "MUL",
      "path": "3"
    },
    "515": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "517": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ADD",
      "path": "3"
    },
    "518": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "520": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "521": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "522": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP2",
      "path": "3"
    },
    "523": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ADD",
      "path": "3"
    },
    "524": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "526": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "527": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP1",
      "path": "3"
    },
    "528": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "529": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "530": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "531": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP2",
      "path": "3"
    },
    "532": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP2",
      "path": "3"
    },
    "533": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "534": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "536": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ADD",
      "path": "3"
    },
    "537": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP3",
      "path": "3"
    },
    "538": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP1",
      "path": "3"
    },
    "539": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "540": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x224"
    },
    "543": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "544": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x780"
    },
    "547": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMP",
      "path": "3"
    },
    "548": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "549": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP1",
      "path": "3"
    },
    "550": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "551": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x271"
    },
    "554": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "555": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP1",
      "path": "3"
    },
    "556": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "558": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "LT",
      "path": "3"
    },
    "559": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x246"
    },
    "562": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "563": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "566": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP1",
      "path": "3"
    },
    "567": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP4",
      "path": "3"
    },
    "568": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "569": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DIV",
      "path": "3"
    },
    "570": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "MUL",
      "path": "3"
    },
    "571": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP4",
      "path": "3"
    },
    "572": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "573": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "574": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "576": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ADD",
      "path": "3"
    },
    "577": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "578": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x271"
    },
    "581": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMP",
      "path": "3"
    },
    "582": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "583": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP3",
      "path": "3"
    },
    "584": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ADD",
      "path": "3"
    },
    "585": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "586": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "587": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "589": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "590": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "592": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "595": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "596": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "597": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP2",
      "path": "3"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "599": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP2",
      "path": "3"
    },
    "600": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "601": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "602": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ADD",
      "path": "3"
    },
    "605": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "606": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ADD",
      "path": "3"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP1",
      "path": "3"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP4",
      "path": "3"
    },
    "611": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "GT",
      "path": "3"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x254"
    },
    "615": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP3",
      "path": "3"
    },
    "617": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "618": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SUB",
      "path": "3"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "AND",
      "path": "3"
    },
    "622": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "DUP3",
      "path": "3"
    },
    "623": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "ADD",
      "path": "3"
    },
    "624": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "625": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "626": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "POP",
      "path": "3"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "POP",
      "path": "3"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "POP",
      "path": "3"
    },
    "629": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "POP",
      "path": "3"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "POP",
      "path": "3"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "632": {
      "fn": "ERC721.name",
      "offset": [
        2483,
        2495
      ],
      "op": "POP",
      "path": "3"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2404,
        2502
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "634": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2404,
        2502
      ],
      "op": "JUMP",
      "path": "3"
    },
    "635": {
      "fn": "ERC721.getApproved",
      "offset": [
        3755,
        3877
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "636": {
      "fn": "ERC721.getApproved",
      "offset": [
        3823,
        3830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "638": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "640": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "641": {
      "op": "PUSH4",
      "value": "0x7A851DA9"
    },
    "646": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "648": {
      "op": "SHL"
    },
    "649": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "DUP2",
      "path": "3"
    },
    "650": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "651": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "653": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "ADD",
      "path": "3"
    },
    "654": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "656": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "657": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "DUP1",
      "path": "3"
    },
    "658": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "659": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "SUB",
      "path": "3"
    },
    "660": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "661": {
      "fn": "ERC721.getApproved",
      "offset": [
        3849,
        3870
      ],
      "op": "REVERT",
      "path": "3"
    },
    "662": {
      "fn": "ERC721.approve",
      "offset": [
        3572,
        3676
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "663": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "666": {
      "op": "PUSH4",
      "value": "0x7A851DA9"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "DUP2",
      "path": "3"
    },
    "675": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "676": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "678": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "ADD",
      "path": "3"
    },
    "679": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "681": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "682": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "DUP1",
      "path": "3"
    },
    "683": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "684": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "SUB",
      "path": "3"
    },
    "685": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "686": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3669
      ],
      "op": "REVERT",
      "path": "3"
    },
    "687": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2098,
        2342
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "688": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2170,
        2177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "690": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "DUP2",
      "path": "3"
    },
    "691": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "DUP2",
      "path": "3"
    },
    "692": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "693": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "695": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "697": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "698": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "700": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "DUP2",
      "path": "3"
    },
    "701": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "702": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "709": {
      "op": "SHL"
    },
    "710": {
      "op": "SUB"
    },
    "711": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "AND",
      "path": "3"
    },
    "712": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2205,
        2230
      ],
      "op": "DUP1",
      "path": "3"
    },
    "713": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 2,
      "value": "0x1E3"
    },
    "716": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "717": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "719": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "728": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "731": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "733": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "DUP3",
      "path": "3"
    },
    "734": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "ADD",
      "path": "3"
    },
    "735": {
      "op": "MSTORE"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "740": {
      "op": "DUP3"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "op": "MSTORE"
    },
    "743": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "778": {
      "op": "DUP3"
    },
    "779": {
      "op": "ADD"
    },
    "780": {
      "op": "MSTORE"
    },
    "781": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "796": {
      "op": "DUP3"
    },
    "797": {
      "op": "ADD"
    },
    "798": {
      "op": "MSTORE"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "803": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "805": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "806": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "DUP1",
      "path": "3"
    },
    "807": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "808": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "SUB",
      "path": "3"
    },
    "809": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "810": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2240,
        2313
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "811": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1837,
        2041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "812": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1909,
        1916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "SUB"
    },
    "822": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1936,
        1955
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 3
    },
    "823": {
      "branch": 12,
      "fn": "ERC721.balanceOf",
      "offset": [
        1936,
        1955
      ],
      "op": "AND",
      "path": "3"
    },
    "824": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x395"
    },
    "827": {
      "branch": 12,
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "828": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "830": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "837": {
      "op": "SHL"
    },
    "838": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "DUP2",
      "path": "3"
    },
    "839": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "842": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "844": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "DUP3",
      "path": "3"
    },
    "845": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "ADD",
      "path": "3"
    },
    "846": {
      "op": "MSTORE"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "851": {
      "op": "DUP3"
    },
    "852": {
      "op": "ADD"
    },
    "853": {
      "op": "MSTORE"
    },
    "854": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "889": {
      "op": "DUP3"
    },
    "890": {
      "op": "ADD"
    },
    "891": {
      "op": "MSTORE"
    },
    "892": {
      "op": "PUSH9",
      "value": "0x3634B21037BBB732B9"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "907": {
      "op": "DUP3"
    },
    "908": {
      "op": "ADD"
    },
    "909": {
      "op": "MSTORE"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x322"
    },
    "916": {
      "op": "JUMP"
    },
    "917": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1928,
        2001
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "925": {
      "op": "SHL"
    },
    "926": {
      "op": "SUB"
    },
    "927": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "AND",
      "path": "3",
      "statement": 4
    },
    "928": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "930": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "931": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "DUP2",
      "path": "3"
    },
    "932": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "933": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2027
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "935": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "937": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "938": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "940": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "941": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "942": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "943": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2018,
        2034
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "944": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1837,
        2041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "945": {
      "fn": "ERC721.symbol",
      "offset": [
        2566,
        2668
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "946": {
      "fn": "ERC721.symbol",
      "offset": [
        2622,
        2635
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "948": {
      "fn": "ERC721.symbol",
      "offset": [
        2654,
        2661
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x2"
    },
    "950": {
      "fn": "ERC721.symbol",
      "offset": [
        2647,
        2661
      ],
      "op": "DUP1",
      "path": "3"
    },
    "951": {
      "fn": "ERC721.symbol",
      "offset": [
        2647,
        2661
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "952": {
      "fn": "ERC721.symbol",
      "offset": [
        2647,
        2661
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F8"
    },
    "955": {
      "fn": "ERC721.symbol",
      "offset": [
        2647,
        2661
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "956": {
      "fn": "ERC721.symbol",
      "offset": [
        2647,
        2661
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x780"
    },
    "959": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2647,
        2661
      ],
      "op": "JUMP",
      "path": "3"
    },
    "960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "961": {
      "fn": "ERC721._exists",
      "offset": [
        6267,
        6271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "963": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "964": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "DUP2",
      "path": "3"
    },
    "965": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "966": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6306
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "968": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "970": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "971": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "973": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "974": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "975": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "976": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2865,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "978": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2865,
        2878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "op": "SUB"
    },
    "987": {
      "fn": "ERC721._exists",
      "offset": [
        6290,
        6315
      ],
      "op": "AND",
      "path": "3"
    },
    "988": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0x43F"
    },
    "991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "994": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "995": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "999": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1001": {
      "op": "SHL"
    },
    "1002": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1008": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1009": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "ADD",
      "path": "3"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1015": {
      "op": "DUP3"
    },
    "1016": {
      "op": "ADD"
    },
    "1017": {
      "op": "MSTORE"
    },
    "1018": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1053": {
      "op": "DUP3"
    },
    "1054": {
      "op": "ADD"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1074": {
      "op": "SHL"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1077": {
      "op": "DUP3"
    },
    "1078": {
      "op": "ADD"
    },
    "1079": {
      "op": "MSTORE"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1082": {
      "op": "ADD"
    },
    "1083": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x322"
    },
    "1086": {
      "op": "JUMP"
    },
    "1087": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2966
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1088": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2977,
        2998
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1090": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3001,
        3011
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x456"
    },
    "1093": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x40"
    },
    "1095": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1096": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1097": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1099": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1100": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "ADD",
      "path": "3"
    },
    "1101": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1102": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1103": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1106": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1107": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1108": {
      "fn": "ERC721._baseURI",
      "offset": [
        3481,
        3490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1109": {
      "fn": "ERC721._baseURI",
      "offset": [
        3405,
        3497
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1110": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3001,
        3011
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1111": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2977,
        3011
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1112": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2977,
        3011
      ],
      "op": "POP",
      "path": "3"
    },
    "1113": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3052,
        3053
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x0"
    },
    "1115": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3034,
        3041
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1116": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1117": {
      "branch": 13,
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3053
      ],
      "op": "GT",
      "path": "3"
    },
    "1118": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x476"
    },
    "1121": {
      "branch": 13,
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1122": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1124": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1125": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1126": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1128": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "ADD",
      "path": "3"
    },
    "1129": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1131": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1132": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1133": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1135": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1136": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1137": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "POP",
      "path": "3"
    },
    "1138": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "1141": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1142": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1143": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3080,
        3087
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1144": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3096
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1145": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1147": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1148": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1150": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "ADD",
      "path": "3"
    },
    "1151": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x489"
    },
    "1154": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1155": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1156": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1157": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7BA"
    },
    "1160": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3063,
        3097
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1161": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1162": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1164": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1165": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1167": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1168": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1169": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "SUB",
      "path": "3"
    },
    "1170": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "SUB",
      "path": "3"
    },
    "1171": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1172": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1173": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1174": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1176": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3097
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1177": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3028,
        3103
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1178": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3103
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1179": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2792,
        3110
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1180": {
      "op": "POP"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2792,
        3110
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1184": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1073,
        1261
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1185": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1158,
        1162
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1187": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "op": "SUB"
    },
    "1203": {
      "op": "NOT"
    },
    "1204": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        643,
        683
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 10
    },
    "1205": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        643,
        683
      ],
      "op": "AND",
      "path": "0"
    },
    "1206": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        643,
        683
      ],
      "op": "EQ",
      "path": "0"
    },
    "1207": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1181,
        1254
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 11
    },
    "1208": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1181,
        1254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E3"
    },
    "1211": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1181,
        1254
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1212": {
      "op": "POP"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "SUB"
    },
    "1222": {
      "op": "NOT"
    },
    "1223": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "AND",
      "path": "1"
    },
    "1224": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1241
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1226": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1227": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1228": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1229": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1231": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1232": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1233": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1234": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1236": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1237": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1238": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1239": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1241": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "AND",
      "path": "1"
    },
    "1242": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1221,
        1254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1243": {
      "fn": "ERC165Storage.supportsInterface",
      "jump": "o",
      "offset": [
        1073,
        1261
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1244": {
      "op": "JUMPDEST"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1249": {
      "op": "DUP3"
    },
    "1250": {
      "op": "DUP5"
    },
    "1251": {
      "op": "SUB"
    },
    "1252": {
      "op": "SLT"
    },
    "1253": {
      "op": "ISZERO"
    },
    "1254": {
      "op": "PUSH2",
      "value": "0x4EE"
    },
    "1257": {
      "op": "JUMPI"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1260": {
      "op": "DUP1"
    },
    "1261": {
      "op": "REVERT"
    },
    "1262": {
      "op": "JUMPDEST"
    },
    "1263": {
      "op": "DUP2"
    },
    "1264": {
      "op": "CALLDATALOAD"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1271": {
      "op": "SHL"
    },
    "1272": {
      "op": "SUB"
    },
    "1273": {
      "op": "NOT"
    },
    "1274": {
      "op": "DUP2"
    },
    "1275": {
      "op": "AND"
    },
    "1276": {
      "op": "DUP2"
    },
    "1277": {
      "op": "EQ"
    },
    "1278": {
      "op": "PUSH2",
      "value": "0x499"
    },
    "1281": {
      "op": "JUMPI"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1284": {
      "op": "DUP1"
    },
    "1285": {
      "op": "REVERT"
    },
    "1286": {
      "op": "JUMPDEST"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1289": {
      "op": "JUMPDEST"
    },
    "1290": {
      "op": "DUP4"
    },
    "1291": {
      "op": "DUP2"
    },
    "1292": {
      "op": "LT"
    },
    "1293": {
      "op": "ISZERO"
    },
    "1294": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1297": {
      "op": "JUMPI"
    },
    "1298": {
      "op": "DUP2"
    },
    "1299": {
      "op": "DUP2"
    },
    "1300": {
      "op": "ADD"
    },
    "1301": {
      "op": "MLOAD"
    },
    "1302": {
      "op": "DUP4"
    },
    "1303": {
      "op": "DUP3"
    },
    "1304": {
      "op": "ADD"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "op": "PUSH2",
      "value": "0x509"
    },
    "1312": {
      "op": "JUMP"
    },
    "1313": {
      "op": "JUMPDEST"
    },
    "1314": {
      "op": "DUP4"
    },
    "1315": {
      "op": "DUP2"
    },
    "1316": {
      "op": "GT"
    },
    "1317": {
      "op": "ISZERO"
    },
    "1318": {
      "op": "PUSH2",
      "value": "0x530"
    },
    "1321": {
      "op": "JUMPI"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1324": {
      "op": "DUP5"
    },
    "1325": {
      "op": "DUP5"
    },
    "1326": {
      "op": "ADD"
    },
    "1327": {
      "op": "MSTORE"
    },
    "1328": {
      "op": "JUMPDEST"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "op": "POP"
    },
    "1333": {
      "jump": "o",
      "op": "JUMP"
    },
    "1334": {
      "op": "JUMPDEST"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1337": {
      "op": "DUP2"
    },
    "1338": {
      "op": "MSTORE"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1341": {
      "op": "DUP3"
    },
    "1342": {
      "op": "MLOAD"
    },
    "1343": {
      "op": "DUP1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1346": {
      "op": "DUP5"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH2",
      "value": "0x555"
    },
    "1352": {
      "op": "DUP2"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1355": {
      "op": "DUP6"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1359": {
      "op": "DUP8"
    },
    "1360": {
      "op": "ADD"
    },
    "1361": {
      "op": "PUSH2",
      "value": "0x506"
    },
    "1364": {
      "jump": "i",
      "op": "JUMP"
    },
    "1365": {
      "op": "JUMPDEST"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1371": {
      "op": "NOT"
    },
    "1372": {
      "op": "AND"
    },
    "1373": {
      "op": "SWAP2"
    },
    "1374": {
      "op": "SWAP1"
    },
    "1375": {
      "op": "SWAP2"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1379": {
      "op": "ADD"
    },
    "1380": {
      "op": "SWAP3"
    },
    "1381": {
      "op": "SWAP2"
    },
    "1382": {
      "op": "POP"
    },
    "1383": {
      "op": "POP"
    },
    "1384": {
      "jump": "o",
      "op": "JUMP"
    },
    "1385": {
      "op": "JUMPDEST"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1390": {
      "op": "DUP3"
    },
    "1391": {
      "op": "DUP5"
    },
    "1392": {
      "op": "SUB"
    },
    "1393": {
      "op": "SLT"
    },
    "1394": {
      "op": "ISZERO"
    },
    "1395": {
      "op": "PUSH2",
      "value": "0x57B"
    },
    "1398": {
      "op": "JUMPI"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1401": {
      "op": "DUP1"
    },
    "1402": {
      "op": "REVERT"
    },
    "1403": {
      "op": "JUMPDEST"
    },
    "1404": {
      "op": "POP"
    },
    "1405": {
      "op": "CALLDATALOAD"
    },
    "1406": {
      "op": "SWAP2"
    },
    "1407": {
      "op": "SWAP1"
    },
    "1408": {
      "op": "POP"
    },
    "1409": {
      "jump": "o",
      "op": "JUMP"
    },
    "1410": {
      "op": "JUMPDEST"
    },
    "1411": {
      "op": "DUP1"
    },
    "1412": {
      "op": "CALLDATALOAD"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "op": "DUP2"
    },
    "1422": {
      "op": "AND"
    },
    "1423": {
      "op": "DUP2"
    },
    "1424": {
      "op": "EQ"
    },
    "1425": {
      "op": "PUSH2",
      "value": "0x599"
    },
    "1428": {
      "op": "JUMPI"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1431": {
      "op": "DUP1"
    },
    "1432": {
      "op": "REVERT"
    },
    "1433": {
      "op": "JUMPDEST"
    },
    "1434": {
      "op": "SWAP2"
    },
    "1435": {
      "op": "SWAP1"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "jump": "o",
      "op": "JUMP"
    },
    "1438": {
      "op": "JUMPDEST"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1441": {
      "op": "DUP1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1444": {
      "op": "DUP4"
    },
    "1445": {
      "op": "DUP6"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "op": "SLT"
    },
    "1448": {
      "op": "ISZERO"
    },
    "1449": {
      "op": "PUSH2",
      "value": "0x5B1"
    },
    "1452": {
      "op": "JUMPI"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1455": {
      "op": "DUP1"
    },
    "1456": {
      "op": "REVERT"
    },
    "1457": {
      "op": "JUMPDEST"
    },
    "1458": {
      "op": "PUSH2",
      "value": "0x5BA"
    },
    "1461": {
      "op": "DUP4"
    },
    "1462": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1465": {
      "jump": "i",
      "op": "JUMP"
    },
    "1466": {
      "op": "JUMPDEST"
    },
    "1467": {
      "op": "SWAP5"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1470": {
      "op": "SWAP4"
    },
    "1471": {
      "op": "SWAP1"
    },
    "1472": {
      "op": "SWAP4"
    },
    "1473": {
      "op": "ADD"
    },
    "1474": {
      "op": "CALLDATALOAD"
    },
    "1475": {
      "op": "SWAP4"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "jump": "o",
      "op": "JUMP"
    },
    "1480": {
      "op": "JUMPDEST"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1483": {
      "op": "DUP1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1488": {
      "op": "DUP5"
    },
    "1489": {
      "op": "DUP7"
    },
    "1490": {
      "op": "SUB"
    },
    "1491": {
      "op": "SLT"
    },
    "1492": {
      "op": "ISZERO"
    },
    "1493": {
      "op": "PUSH2",
      "value": "0x5DD"
    },
    "1496": {
      "op": "JUMPI"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1499": {
      "op": "DUP1"
    },
    "1500": {
      "op": "REVERT"
    },
    "1501": {
      "op": "JUMPDEST"
    },
    "1502": {
      "op": "PUSH2",
      "value": "0x5E6"
    },
    "1505": {
      "op": "DUP5"
    },
    "1506": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1509": {
      "jump": "i",
      "op": "JUMP"
    },
    "1510": {
      "op": "JUMPDEST"
    },
    "1511": {
      "op": "SWAP3"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "op": "PUSH2",
      "value": "0x5F4"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1518": {
      "op": "DUP6"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1523": {
      "jump": "i",
      "op": "JUMP"
    },
    "1524": {
      "op": "JUMPDEST"
    },
    "1525": {
      "op": "SWAP2"
    },
    "1526": {
      "op": "POP"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1529": {
      "op": "DUP5"
    },
    "1530": {
      "op": "ADD"
    },
    "1531": {
      "op": "CALLDATALOAD"
    },
    "1532": {
      "op": "SWAP1"
    },
    "1533": {
      "op": "POP"
    },
    "1534": {
      "op": "SWAP3"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "op": "SWAP3"
    },
    "1537": {
      "op": "POP"
    },
    "1538": {
      "op": "SWAP3"
    },
    "1539": {
      "jump": "o",
      "op": "JUMP"
    },
    "1540": {
      "op": "JUMPDEST"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1545": {
      "op": "DUP3"
    },
    "1546": {
      "op": "DUP5"
    },
    "1547": {
      "op": "SUB"
    },
    "1548": {
      "op": "SLT"
    },
    "1549": {
      "op": "ISZERO"
    },
    "1550": {
      "op": "PUSH2",
      "value": "0x616"
    },
    "1553": {
      "op": "JUMPI"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1556": {
      "op": "DUP1"
    },
    "1557": {
      "op": "REVERT"
    },
    "1558": {
      "op": "JUMPDEST"
    },
    "1559": {
      "op": "PUSH2",
      "value": "0x499"
    },
    "1562": {
      "op": "DUP3"
    },
    "1563": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1566": {
      "jump": "i",
      "op": "JUMP"
    },
    "1567": {
      "op": "JUMPDEST"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1570": {
      "op": "DUP1"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1573": {
      "op": "DUP4"
    },
    "1574": {
      "op": "DUP6"
    },
    "1575": {
      "op": "SUB"
    },
    "1576": {
      "op": "SLT"
    },
    "1577": {
      "op": "ISZERO"
    },
    "1578": {
      "op": "PUSH2",
      "value": "0x632"
    },
    "1581": {
      "op": "JUMPI"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1584": {
      "op": "DUP1"
    },
    "1585": {
      "op": "REVERT"
    },
    "1586": {
      "op": "JUMPDEST"
    },
    "1587": {
      "op": "PUSH2",
      "value": "0x63B"
    },
    "1590": {
      "op": "DUP4"
    },
    "1591": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1594": {
      "jump": "i",
      "op": "JUMP"
    },
    "1595": {
      "op": "JUMPDEST"
    },
    "1596": {
      "op": "SWAP2"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1600": {
      "op": "DUP4"
    },
    "1601": {
      "op": "ADD"
    },
    "1602": {
      "op": "CALLDATALOAD"
    },
    "1603": {
      "op": "DUP1"
    },
    "1604": {
      "op": "ISZERO"
    },
    "1605": {
      "op": "ISZERO"
    },
    "1606": {
      "op": "DUP2"
    },
    "1607": {
      "op": "EQ"
    },
    "1608": {
      "op": "PUSH2",
      "value": "0x650"
    },
    "1611": {
      "op": "JUMPI"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1614": {
      "op": "DUP1"
    },
    "1615": {
      "op": "REVERT"
    },
    "1616": {
      "op": "JUMPDEST"
    },
    "1617": {
      "op": "DUP1"
    },
    "1618": {
      "op": "SWAP2"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "op": "SWAP3"
    },
    "1622": {
      "op": "POP"
    },
    "1623": {
      "op": "SWAP3"
    },
    "1624": {
      "op": "SWAP1"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "jump": "o",
      "op": "JUMP"
    },
    "1627": {
      "op": "JUMPDEST"
    },
    "1628": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1643": {
      "op": "MSTORE"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1648": {
      "op": "REVERT"
    },
    "1649": {
      "op": "JUMPDEST"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1652": {
      "op": "DUP1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1655": {
      "op": "DUP1"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1658": {
      "op": "DUP6"
    },
    "1659": {
      "op": "DUP8"
    },
    "1660": {
      "op": "SUB"
    },
    "1661": {
      "op": "SLT"
    },
    "1662": {
      "op": "ISZERO"
    },
    "1663": {
      "op": "PUSH2",
      "value": "0x687"
    },
    "1666": {
      "op": "JUMPI"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1669": {
      "op": "DUP1"
    },
    "1670": {
      "op": "REVERT"
    },
    "1671": {
      "op": "JUMPDEST"
    },
    "1672": {
      "op": "PUSH2",
      "value": "0x690"
    },
    "1675": {
      "op": "DUP6"
    },
    "1676": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1679": {
      "jump": "i",
      "op": "JUMP"
    },
    "1680": {
      "op": "JUMPDEST"
    },
    "1681": {
      "op": "SWAP4"
    },
    "1682": {
      "op": "POP"
    },
    "1683": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1688": {
      "op": "DUP7"
    },
    "1689": {
      "op": "ADD"
    },
    "1690": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1693": {
      "jump": "i",
      "op": "JUMP"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "SWAP3"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1699": {
      "op": "DUP6"
    },
    "1700": {
      "op": "ADD"
    },
    "1701": {
      "op": "CALLDATALOAD"
    },
    "1702": {
      "op": "SWAP2"
    },
    "1703": {
      "op": "POP"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1706": {
      "op": "DUP6"
    },
    "1707": {
      "op": "ADD"
    },
    "1708": {
      "op": "CALLDATALOAD"
    },
    "1709": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1718": {
      "op": "DUP1"
    },
    "1719": {
      "op": "DUP3"
    },
    "1720": {
      "op": "GT"
    },
    "1721": {
      "op": "ISZERO"
    },
    "1722": {
      "op": "PUSH2",
      "value": "0x6C2"
    },
    "1725": {
      "op": "JUMPI"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1728": {
      "op": "DUP1"
    },
    "1729": {
      "op": "REVERT"
    },
    "1730": {
      "op": "JUMPDEST"
    },
    "1731": {
      "op": "DUP2"
    },
    "1732": {
      "op": "DUP8"
    },
    "1733": {
      "op": "ADD"
    },
    "1734": {
      "op": "SWAP2"
    },
    "1735": {
      "op": "POP"
    },
    "1736": {
      "op": "DUP8"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1739": {
      "op": "DUP4"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "op": "SLT"
    },
    "1742": {
      "op": "PUSH2",
      "value": "0x6D6"
    },
    "1745": {
      "op": "JUMPI"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1748": {
      "op": "DUP1"
    },
    "1749": {
      "op": "REVERT"
    },
    "1750": {
      "op": "JUMPDEST"
    },
    "1751": {
      "op": "DUP2"
    },
    "1752": {
      "op": "CALLDATALOAD"
    },
    "1753": {
      "op": "DUP2"
    },
    "1754": {
      "op": "DUP2"
    },
    "1755": {
      "op": "GT"
    },
    "1756": {
      "op": "ISZERO"
    },
    "1757": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "1760": {
      "op": "JUMPI"
    },
    "1761": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "1764": {
      "op": "PUSH2",
      "value": "0x65B"
    },
    "1767": {
      "jump": "i",
      "op": "JUMP"
    },
    "1768": {
      "op": "JUMPDEST"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1771": {
      "op": "MLOAD"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1774": {
      "op": "DUP3"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1778": {
      "op": "NOT"
    },
    "1779": {
      "op": "SWAP1"
    },
    "1780": {
      "op": "DUP2"
    },
    "1781": {
      "op": "AND"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1784": {
      "op": "ADD"
    },
    "1785": {
      "op": "AND"
    },
    "1786": {
      "op": "DUP2"
    },
    "1787": {
      "op": "ADD"
    },
    "1788": {
      "op": "SWAP1"
    },
    "1789": {
      "op": "DUP4"
    },
    "1790": {
      "op": "DUP3"
    },
    "1791": {
      "op": "GT"
    },
    "1792": {
      "op": "DUP2"
    },
    "1793": {
      "op": "DUP4"
    },
    "1794": {
      "op": "LT"
    },
    "1795": {
      "op": "OR"
    },
    "1796": {
      "op": "ISZERO"
    },
    "1797": {
      "op": "PUSH2",
      "value": "0x710"
    },
    "1800": {
      "op": "JUMPI"
    },
    "1801": {
      "op": "PUSH2",
      "value": "0x710"
    },
    "1804": {
      "op": "PUSH2",
      "value": "0x65B"
    },
    "1807": {
      "jump": "i",
      "op": "JUMP"
    },
    "1808": {
      "op": "JUMPDEST"
    },
    "1809": {
      "op": "DUP2"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1812": {
      "op": "MSTORE"
    },
    "1813": {
      "op": "DUP3"
    },
    "1814": {
      "op": "DUP2"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "op": "DUP11"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1819": {
      "op": "DUP5"
    },
    "1820": {
      "op": "DUP8"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "op": "ADD"
    },
    "1823": {
      "op": "GT"
    },
    "1824": {
      "op": "ISZERO"
    },
    "1825": {
      "op": "PUSH2",
      "value": "0x729"
    },
    "1828": {
      "op": "JUMPI"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1831": {
      "op": "DUP1"
    },
    "1832": {
      "op": "REVERT"
    },
    "1833": {
      "op": "JUMPDEST"
    },
    "1834": {
      "op": "DUP3"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1837": {
      "op": "DUP7"
    },
    "1838": {
      "op": "ADD"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1841": {
      "op": "DUP4"
    },
    "1842": {
      "op": "ADD"
    },
    "1843": {
      "op": "CALLDATACOPY"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1848": {
      "op": "DUP5"
    },
    "1849": {
      "op": "DUP4"
    },
    "1850": {
      "op": "ADD"
    },
    "1851": {
      "op": "ADD"
    },
    "1852": {
      "op": "MSTORE"
    },
    "1853": {
      "op": "DUP1"
    },
    "1854": {
      "op": "SWAP6"
    },
    "1855": {
      "op": "POP"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "op": "POP"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "op": "SWAP3"
    },
    "1862": {
      "op": "SWAP6"
    },
    "1863": {
      "op": "SWAP2"
    },
    "1864": {
      "op": "SWAP5"
    },
    "1865": {
      "op": "POP"
    },
    "1866": {
      "op": "SWAP3"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "jump": "o",
      "op": "JUMP"
    },
    "1869": {
      "op": "JUMPDEST"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1872": {
      "op": "DUP1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1875": {
      "op": "DUP4"
    },
    "1876": {
      "op": "DUP6"
    },
    "1877": {
      "op": "SUB"
    },
    "1878": {
      "op": "SLT"
    },
    "1879": {
      "op": "ISZERO"
    },
    "1880": {
      "op": "PUSH2",
      "value": "0x760"
    },
    "1883": {
      "op": "JUMPI"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1886": {
      "op": "DUP1"
    },
    "1887": {
      "op": "REVERT"
    },
    "1888": {
      "op": "JUMPDEST"
    },
    "1889": {
      "op": "PUSH2",
      "value": "0x769"
    },
    "1892": {
      "op": "DUP4"
    },
    "1893": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1896": {
      "jump": "i",
      "op": "JUMP"
    },
    "1897": {
      "op": "JUMPDEST"
    },
    "1898": {
      "op": "SWAP2"
    },
    "1899": {
      "op": "POP"
    },
    "1900": {
      "op": "PUSH2",
      "value": "0x777"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1905": {
      "op": "DUP5"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1910": {
      "jump": "i",
      "op": "JUMP"
    },
    "1911": {
      "op": "JUMPDEST"
    },
    "1912": {
      "op": "SWAP1"
    },
    "1913": {
      "op": "POP"
    },
    "1914": {
      "op": "SWAP3"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "op": "SWAP3"
    },
    "1917": {
      "op": "SWAP1"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "jump": "o",
      "op": "JUMP"
    },
    "1920": {
      "op": "JUMPDEST"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "DUP2"
    },
    "1924": {
      "op": "DUP2"
    },
    "1925": {
      "op": "SHR"
    },
    "1926": {
      "op": "SWAP1"
    },
    "1927": {
      "op": "DUP3"
    },
    "1928": {
      "op": "AND"
    },
    "1929": {
      "op": "DUP1"
    },
    "1930": {
      "op": "PUSH2",
      "value": "0x794"
    },
    "1933": {
      "op": "JUMPI"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1936": {
      "op": "DUP3"
    },
    "1937": {
      "op": "AND"
    },
    "1938": {
      "op": "SWAP2"
    },
    "1939": {
      "op": "POP"
    },
    "1940": {
      "op": "JUMPDEST"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1943": {
      "op": "DUP3"
    },
    "1944": {
      "op": "LT"
    },
    "1945": {
      "op": "DUP2"
    },
    "1946": {
      "op": "SUB"
    },
    "1947": {
      "op": "PUSH2",
      "value": "0x7B4"
    },
    "1950": {
      "op": "JUMPI"
    },
    "1951": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1958": {
      "op": "SHL"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1961": {
      "op": "MSTORE"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1966": {
      "op": "MSTORE"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1971": {
      "op": "REVERT"
    },
    "1972": {
      "op": "JUMPDEST"
    },
    "1973": {
      "op": "POP"
    },
    "1974": {
      "op": "SWAP2"
    },
    "1975": {
      "op": "SWAP1"
    },
    "1976": {
      "op": "POP"
    },
    "1977": {
      "jump": "o",
      "op": "JUMP"
    },
    "1978": {
      "op": "JUMPDEST"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1981": {
      "op": "DUP4"
    },
    "1982": {
      "op": "MLOAD"
    },
    "1983": {
      "op": "PUSH2",
      "value": "0x7CC"
    },
    "1986": {
      "op": "DUP2"
    },
    "1987": {
      "op": "DUP5"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1990": {
      "op": "DUP9"
    },
    "1991": {
      "op": "ADD"
    },
    "1992": {
      "op": "PUSH2",
      "value": "0x506"
    },
    "1995": {
      "jump": "i",
      "op": "JUMP"
    },
    "1996": {
      "op": "JUMPDEST"
    },
    "1997": {
      "op": "SWAP2"
    },
    "1998": {
      "op": "SWAP1"
    },
    "1999": {
      "op": "SWAP2"
    },
    "2000": {
      "op": "ADD"
    },
    "2001": {
      "op": "SWAP2"
    },
    "2002": {
      "op": "DUP3"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "POP"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2007": {
      "op": "ADD"
    },
    "2008": {
      "op": "SWAP2"
    },
    "2009": {
      "op": "SWAP1"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3dea3d6745ef70747180fb1f29ed58076f819282",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\n\npragma solidity >=0.8.0;\n\nimport \"../interfaces/IERC721.sol\";\nimport \"../interfaces/extensions/IERC721Metadata.sol\";\nimport \"./utils/Context.sol\";\nimport \"./ERC165Storage.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165Storage, IERC721, IERC721Metadata {\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _tokenToOwnerMap;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Errors \n    error OperationNotAllowed();\n    error TempDisabled();\n\n    // No token approvals - This is for soulbound nft\n    // No mapping from owner to operator approvals\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n\n        // Reporting supported interfaces \n        _registerInterface(type(IERC721).interfaceId);\n        _registerInterface(type(IERC721Metadata).interfaceId);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Storage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     * It'll always be between 0 and 1. We'll limit single nft per address\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _tokenToOwnerMap[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     * - Change to reflect on-chain generative ASCII art \n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId)) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     * Implement this in EXPerience - Badge contract\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     * Restricted\n     */\n    function approve(address, uint256) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     * Restricted\n     */\n    function getApproved(uint256) public view virtual override returns (address) {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     * Restricted\n     */\n    function setApprovalForAll(address, bool) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     * Restricted\n     */\n    function isApprovedForAll(address, address) public view virtual override returns (bool) {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     * Restricted\n     */\n    function transferFrom(address, address, uint256) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     * Restricted\n     */\n    function safeTransferFrom(address, address, uint256) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     * Restricted\n     */\n    function safeTransferFrom(address, address, uint256, bytes memory) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev These internal functions are not implemented as we don't need them right now.\n     * When Soul and Soul-Constellation expands, we will revisit these functions to allow certain capaibilties\n     * - Allow transfer only after certain period of time (temporary soulbound)\n     * - Ability to convert into soulbound if held long enough \n     * - much more coming from this paper: Decentralized Society: Finding Web3\u00e2\u20ac\u2122s Soul (By E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin)\n     */\n\n    // function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual;\n    // function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool);\n    // function _transfer(address from, address to, uint256 tokenId ) internal virtual;\n    // function _approve(address to, uint256 tokenId) internal virtual;\n    // function _setApprovalForAll(address owner, address operator, bool approved) internal virtual;\n\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _tokenToOwnerMap[tokenId] != address(0);\n    }\n\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _mint(to, tokenId);\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory\n    ) internal virtual {\n        _mint(to, tokenId);\n        // Could perform require(_checkOnERC721Received()) here,\n        // But it's left for future improvements \n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     * \n     * - We limit minting single NFT to single address here by adding a condition \n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n        require(_balances[to] == 0, \"ERC721: Only one EXPerienceViewer (NFT) per address\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _tokenToOwnerMap[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * \n     * - At the moment, let's not think about any burning mechanism\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256) internal virtual {\n        revert TempDisabled();\n        // address owner = ERC721.ownerOf(tokenId);\n\n        // _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // // Clear approvals\n        // _approve(address(0), tokenId);\n\n        // _balances[owner] -= 1;\n        // delete _owners[tokenId];\n\n        // emit Transfer(owner, address(0), tokenId);\n\n        // _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}",
  "sourceMap": "532:9575:3:-:0;;;1195:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1261:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1284:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;1355:45:3;-1:-1:-1;;;1355:18:3;:45::i;:::-;1410:53;-1:-1:-1;;;1410:18:3;:53::i;:::-;1195:275;;532:9575;;1409:197:1;-1:-1:-1;;;;;;1492:25:1;;;;;1484:65;;;;-1:-1:-1;;;1484:65:1;;1805:2:13;1484:65:1;;;1787:21:13;1844:2;1824:18;;;1817:30;1883:29;1863:18;;;1856:57;1930:18;;1484:65:1;;;;;;;;-1:-1:-1;;;;;;1559:33:1;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1559:40:1;1595:4;1559:40;;;1409:197::o;532:9575:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;532:9575:3;;;-1:-1:-1;532:9575:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:13;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:13;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:13:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:13;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1959:380::-;2038:1;2034:12;;;;2081;;;2102:61;;2156:4;2148:6;2144:17;2134:27;;2102:61;2209:2;2201:6;2198:14;2178:18;2175:38;2172:161;;2255:10;2250:3;2246:20;2243:1;2236:31;2290:4;2287:1;2280:15;2318:4;2315:1;2308:15;2172:161;;1959:380;;;:::o;:::-;532:9575:3;;;;;;",
  "sourcePath": "contracts/ERC721.sol",
  "type": "contract"
}