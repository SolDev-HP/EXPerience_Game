{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OperationNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TempDisabled",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC165.sol",
    "1": "contracts/ERC721.sol",
    "3": "contracts/utils/Context.sol",
    "6": "interfaces/IERC165.sol",
    "7": "interfaces/IERC721.sol",
    "8": "interfaces/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC721.sol",
    "exportedSymbols": {
      "Context": [
        747
      ],
      "ERC165": [
        725
      ],
      "ERC721": [
        589
      ],
      "IERC165": [
        899
      ],
      "IERC721": [
        860
      ],
      "IERC721Metadata": [
        887
      ]
    },
    "id": 590,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 135,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "110:24:1"
      },
      {
        "absolutePath": "interfaces/IERC721.sol",
        "file": "../interfaces/IERC721.sol",
        "id": 136,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 590,
        "sourceUnit": 861,
        "src": "138:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/extensions/IERC721Metadata.sol",
        "file": "../interfaces/extensions/IERC721Metadata.sol",
        "id": 137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 590,
        "sourceUnit": 888,
        "src": "175:54:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/Context.sol",
        "file": "./utils/Context.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 590,
        "sourceUnit": 748,
        "src": "231:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC165.sol",
        "file": "./ERC165.sol",
        "id": 139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 590,
        "sourceUnit": 726,
        "src": "262:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 141,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 747,
              "src": "559:7:1"
            },
            "id": 142,
            "nodeType": "InheritanceSpecifier",
            "src": "559:7:1"
          },
          {
            "baseName": {
              "id": 143,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 725,
              "src": "568:6:1"
            },
            "id": 144,
            "nodeType": "InheritanceSpecifier",
            "src": "568:6:1"
          },
          {
            "baseName": {
              "id": 145,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 860,
              "src": "576:7:1"
            },
            "id": 146,
            "nodeType": "InheritanceSpecifier",
            "src": "576:7:1"
          },
          {
            "baseName": {
              "id": 147,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 887,
              "src": "585:15:1"
            },
            "id": 148,
            "nodeType": "InheritanceSpecifier",
            "src": "585:15:1"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 140,
          "nodeType": "StructuredDocumentation",
          "src": "288:250:1",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 589,
        "linearizedBaseContracts": [
          589,
          887,
          860,
          725,
          899,
          747
        ],
        "name": "ERC721",
        "nameLocation": "549:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 150,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "642:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 589,
            "src": "627:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 149,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "627:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 152,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "692:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 589,
            "src": "677:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 151,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "677:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 156,
            "mutability": "mutable",
            "name": "_tokenToOwnerMap",
            "nameLocation": "791:16:1",
            "nodeType": "VariableDeclaration",
            "scope": 589,
            "src": "755:52:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 155,
              "keyType": {
                "id": 153,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "763:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "755:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 154,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "774:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 160,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "897:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 589,
            "src": "861:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 159,
              "keyType": {
                "id": 157,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "869:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "861:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 158,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "880:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "errorSelector": "f50a3b52",
            "id": 162,
            "name": "OperationNotAllowed",
            "nameLocation": "937:19:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:2:1"
            },
            "src": "931:28:1"
          },
          {
            "errorSelector": "6a88e924",
            "id": 164,
            "name": "TempDisabled",
            "nameLocation": "971:12:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:2:1"
            },
            "src": "965:21:1"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1275:60:1",
              "statements": [
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 172,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "1286:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 173,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "1294:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1286:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:13:1"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "1310:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 177,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "1320:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1310:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:17:1"
                }
              ]
            },
            "documentation": {
              "id": 165,
              "nodeType": "StructuredDocumentation",
              "src": "1103:110:1",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 181,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1245:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1231:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1266:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1252:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1230:44:1"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1275:0:1"
            },
            "scope": 589,
            "src": "1219:116:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              724
            ],
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "1506:197:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 191,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "1537:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 193,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 860,
                                "src": "1557:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$860_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$860_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 192,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1552:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1552:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$860",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1552:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1537:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 197,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "1594:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 199,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 887,
                                "src": "1614:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$887_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$887_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 198,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1609:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1609:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$887",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1609:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1594:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1537:105:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 206,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "1683:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 204,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1659:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$589_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 724,
                        "src": "1659:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1659:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1537:158:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 190,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "1517:178:1"
                }
              ]
            },
            "documentation": {
              "id": 182,
              "nodeType": "StructuredDocumentation",
              "src": "1343:58:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1416:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 187,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 186,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 725,
                  "src": "1483:6:1"
                }
              ],
              "src": "1474:16:1"
            },
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1441:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1434:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1433:20:1"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1500:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1500:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1499:6:1"
            },
            "scope": 589,
            "src": "1407:296:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              785
            ],
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "1924:126:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 221,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "1943:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1960:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1952:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 222,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1952:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1952:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1943:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1964:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        },
                        "value": "ERC721: address zero is not a valid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1935:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:73:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 230,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "2026:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 232,
                    "indexExpression": {
                      "id": 231,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2036:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2026:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 219,
                  "id": 233,
                  "nodeType": "Return",
                  "src": "2019:23:1"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "1711:126:1",
              "text": " @dev See {IERC721-balanceOf}.\n It'll always be between 0 and 1. We'll limit single nft per address"
            },
            "functionSelector": "70a08231",
            "id": 235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1852:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 216,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1897:8:1"
            },
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1870:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "1862:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1861:15:1"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "1915:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1914:9:1"
            },
            "scope": 589,
            "src": "1843:207:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              793
            ],
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "2193:167:1",
              "statements": [
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2212:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 262,
                      "src": "2204:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2204:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 249,
                  "initialValue": {
                    "baseExpression": {
                      "id": 246,
                      "name": "_tokenToOwnerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "2220:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 248,
                    "indexExpression": {
                      "id": 247,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 238,
                      "src": "2237:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2220:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2204:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 251,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "2264:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2281:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2273:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 252,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2273:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2273:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2264:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2285:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2256:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:73:1"
                },
                {
                  "expression": {
                    "id": 260,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 245,
                    "src": "2347:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 243,
                  "id": 261,
                  "nodeType": "Return",
                  "src": "2340:12:1"
                }
              ]
            },
            "documentation": {
              "id": 236,
              "nodeType": "StructuredDocumentation",
              "src": "2058:48:1",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2121:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 240,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2166:8:1"
            },
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2137:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2129:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2128:17:1"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2184:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2183:9:1"
            },
            "scope": 589,
            "src": "2112:248:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              872
            ],
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "2496:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 270,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 150,
                    "src": "2514:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 269,
                  "id": 271,
                  "nodeType": "Return",
                  "src": "2507:12:1"
                }
              ]
            },
            "documentation": {
              "id": 264,
              "nodeType": "StructuredDocumentation",
              "src": "2368:53:1",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2436:4:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 266,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2463:8:1"
            },
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2440:2:1"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2481:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:15:1"
            },
            "scope": 589,
            "src": "2427:100:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              878
            ],
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "2667:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 280,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 152,
                    "src": "2685:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 281,
                  "nodeType": "Return",
                  "src": "2678:14:1"
                }
              ]
            },
            "documentation": {
              "id": 274,
              "nodeType": "StructuredDocumentation",
              "src": "2535:55:1",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2605:6:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2634:8:1"
            },
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2611:2:1"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "2652:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2652:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2651:15:1"
            },
            "scope": 589,
            "src": "2596:104:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              886
            ],
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "2918:235:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 294,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "2945:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 293,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 451,
                          "src": "2937:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2937:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2955:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2929:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "2929:76:1"
                },
                {
                  "assignments": [
                    300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 300,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3032:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 322,
                      "src": "3018:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 299,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3018:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 303,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 301,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "3042:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3042:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3018:34:1"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 306,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "3076:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3070:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 304,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3070:5:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3070:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3070:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3094:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3070:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3143:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3070:75:1",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 315,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "3122:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 316,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "3131:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 313,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3105:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3105:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3105:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3098:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3098:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3098:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 291,
                  "id": 321,
                  "nodeType": "Return",
                  "src": "3063:82:1"
                }
              ]
            },
            "documentation": {
              "id": 284,
              "nodeType": "StructuredDocumentation",
              "src": "2708:116:1",
              "text": " @dev See {IERC721Metadata-tokenURI}.\n - Change to reflect on-chain generative ASCII art "
            },
            "functionSelector": "c87b56dd",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2839:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2885:8:1"
            },
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2856:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "2848:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2847:17:1"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "2903:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2902:15:1"
            },
            "scope": 589,
            "src": "2830:323:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "3522:28:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3540:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 328,
                  "id": 330,
                  "nodeType": "Return",
                  "src": "3533:9:1"
                }
              ]
            },
            "documentation": {
              "id": 324,
              "nodeType": "StructuredDocumentation",
              "src": "3161:289:1",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts.\n Implement this in EXPerience - Badge contract"
            },
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3465:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3473:2:1"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "3507:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3507:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3506:15:1"
            },
            "scope": 589,
            "src": "3456:94:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              833
            ],
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "3690:47:1",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 341,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "3708:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3708:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "RevertStatement",
                  "src": "3701:28:1"
                }
              ]
            },
            "documentation": {
              "id": 333,
              "nodeType": "StructuredDocumentation",
              "src": "3558:67:1",
              "text": " @dev See {IERC721-approve}.\n Restricted"
            },
            "functionSelector": "095ea7b3",
            "id": 345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3640:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 339,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3681:8:1"
            },
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "3648:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "3657:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3657:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3647:18:1"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3690:0:1"
            },
            "scope": 589,
            "src": "3631:106:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              849
            ],
            "body": {
              "id": 357,
              "nodeType": "Block",
              "src": "3899:47:1",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 354,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "3917:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3917:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "RevertStatement",
                  "src": "3910:28:1"
                }
              ]
            },
            "documentation": {
              "id": 346,
              "nodeType": "StructuredDocumentation",
              "src": "3745:71:1",
              "text": " @dev See {IERC721-getApproved}.\n Restricted"
            },
            "functionSelector": "081812fc",
            "id": 358,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3831:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 350,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3872:8:1"
            },
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "3843:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3843:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3842:9:1"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "3890:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3890:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3889:9:1"
            },
            "scope": 589,
            "src": "3822:124:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              841
            ],
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "4103:47:1",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 367,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "4121:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4121:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "RevertStatement",
                  "src": "4114:28:1"
                }
              ]
            },
            "documentation": {
              "id": 359,
              "nodeType": "StructuredDocumentation",
              "src": "3954:77:1",
              "text": " @dev See {IERC721-setApprovalForAll}.\n Restricted"
            },
            "functionSelector": "a22cb465",
            "id": 371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4046:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 365,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4094:8:1"
            },
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "4064:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4064:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "4073:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4073:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4063:15:1"
            },
            "returnParameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4103:0:1"
            },
            "scope": 589,
            "src": "4037:113:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              859
            ],
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "4328:47:1",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 382,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "4346:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4346:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "RevertStatement",
                  "src": "4339:28:1"
                }
              ]
            },
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "4158:76:1",
              "text": " @dev See {IERC721-isApprovedForAll}.\n Restricted"
            },
            "functionSelector": "e985e9c5",
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4249:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 378,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4304:8:1"
            },
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4266:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4266:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4275:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4275:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4265:18:1"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4322:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4322:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4321:6:1"
            },
            "scope": 589,
            "src": "4240:135:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              825
            ],
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "4534:47:1",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 397,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "4552:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4552:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "RevertStatement",
                  "src": "4545:28:1"
                }
              ]
            },
            "documentation": {
              "id": 387,
              "nodeType": "StructuredDocumentation",
              "src": "4383:72:1",
              "text": " @dev See {IERC721-transferFrom}.\n Restricted"
            },
            "functionSelector": "23b872dd",
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4470:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 395,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4525:8:1"
            },
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "4483:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4483:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "4492:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4492:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "4501:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4482:27:1"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4534:0:1"
            },
            "scope": 589,
            "src": "4461:120:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              815
            ],
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "4748:47:1",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 412,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "4766:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4766:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "RevertStatement",
                  "src": "4759:28:1"
                }
              ]
            },
            "documentation": {
              "id": 402,
              "nodeType": "StructuredDocumentation",
              "src": "4589:76:1",
              "text": " @dev See {IERC721-safeTransferFrom}.\n Restricted"
            },
            "functionSelector": "42842e0e",
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4680:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 410,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4739:8:1"
            },
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "4697:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4697:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "4706:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "4715:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4715:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4696:27:1"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4748:0:1"
            },
            "scope": 589,
            "src": "4671:124:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              805
            ],
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "4976:47:1",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 429,
                      "name": "OperationNotAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "4994:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4994:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "RevertStatement",
                  "src": "4987:28:1"
                }
              ]
            },
            "documentation": {
              "id": 417,
              "nodeType": "StructuredDocumentation",
              "src": "4803:76:1",
              "text": " @dev See {IERC721-safeTransferFrom}.\n Restricted"
            },
            "functionSelector": "b88d4fde",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4894:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 427,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4967:8:1"
            },
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4911:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4911:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4920:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4920:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4929:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4929:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4938:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4938:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4910:41:1"
            },
            "returnParameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4976:0:1"
            },
            "scope": 589,
            "src": "4885:138:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "6402:65:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 441,
                        "name": "_tokenToOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "6420:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 443,
                      "indexExpression": {
                        "id": 442,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "6437:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6420:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6457:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6449:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6449:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6449:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6420:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 440,
                  "id": 449,
                  "nodeType": "Return",
                  "src": "6413:46:1"
                }
              ]
            },
            "documentation": {
              "id": 434,
              "nodeType": "StructuredDocumentation",
              "src": "6026:299:1",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "6340:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6356:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "6348:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6348:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6347:17:1"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "6396:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6396:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6395:6:1"
            },
            "scope": 589,
            "src": "6331:136:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "6876:37:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 460,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 454,
                        "src": "6893:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 461,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "6897:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 459,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "6887:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6887:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "6887:18:1"
                }
              ]
            },
            "documentation": {
              "id": 452,
              "nodeType": "StructuredDocumentation",
              "src": "6477:328:1",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "6820:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6838:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "6830:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6830:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6850:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "6842:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6842:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6829:29:1"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6876:0:1"
            },
            "scope": 589,
            "src": "6811:102:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "7253:154:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 476,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "7270:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 477,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "7274:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 475,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "7264:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7264:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "7264:18:1"
                }
              ]
            },
            "documentation": {
              "id": 466,
              "nodeType": "StructuredDocumentation",
              "src": "6921:213:1",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "7149:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7177:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "7169:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7169:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7198:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "7190:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7190:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "7216:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7216:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7158:77:1"
            },
            "returnParameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7253:0:1"
            },
            "scope": 589,
            "src": "7140:267:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "7897:480:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 490,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 484,
                          "src": "7916:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7930:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7922:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 491,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7922:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7922:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7916:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7934:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7908:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7908:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "7908:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7988:17:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 501,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 486,
                              "src": "7997:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 500,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "7989:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7989:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8007:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7980:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7980:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "7980:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 508,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "8057:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 510,
                          "indexExpression": {
                            "id": 509,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "8067:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8057:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8074:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8057:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a204f6e6c79206f6e6520455850657269656e636556696577657220284e465429207065722061646472657373",
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8077:53:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dc797a71e690c6a35d6c1fecba8a348b39e099b3f3c0d58423fda3fcc4bc75c",
                          "typeString": "literal_string \"ERC721: Only one EXPerienceViewer (NFT) per address\""
                        },
                        "value": "ERC721: Only one EXPerienceViewer (NFT) per address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dc797a71e690c6a35d6c1fecba8a348b39e099b3f3c0d58423fda3fcc4bc75c",
                          "typeString": "literal_string \"ERC721: Only one EXPerienceViewer (NFT) per address\""
                        }
                      ],
                      "id": 507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8049:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8049:82:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "8049:82:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8173:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8165:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 517,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8165:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8165:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 521,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "8177:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 522,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "8181:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 516,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "8144:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8144:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "8144:45:1"
                },
                {
                  "expression": {
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 525,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "8202:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 527,
                      "indexExpression": {
                        "id": 526,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "8212:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8202:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8219:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8202:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "8202:18:1"
                },
                {
                  "expression": {
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 531,
                        "name": "_tokenToOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "8231:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 533,
                      "indexExpression": {
                        "id": 532,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "8248:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8231:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 534,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "8259:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8231:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "8231:30:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8296:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8288:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 538,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8288:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8288:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 542,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "8300:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 543,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "8304:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 537,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "8279:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8279:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "EmitStatement",
                  "src": "8274:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8353:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8345:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 547,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8345:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8345:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 551,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "8357:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 552,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "8361:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 546,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "8325:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8325:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "8325:44:1"
                }
              ]
            },
            "documentation": {
              "id": 482,
              "nodeType": "StructuredDocumentation",
              "src": "7415:415:1",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n \n - We limit minting single NFT to single address here by adding a condition \n Emits a {Transfer} event."
            },
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7845:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7859:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7851:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7851:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7871:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7863:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7863:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7850:29:1"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7897:0:1"
            },
            "scope": 589,
            "src": "7836:541:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "8725:427:1",
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 562,
                      "name": "TempDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "8743:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8743:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "RevertStatement",
                  "src": "8736:21:1"
                }
              ]
            },
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "8385:293:1",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n \n - At the moment, let's not think about any burning mechanism\n Emits a {Transfer} event."
            },
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8693:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "8699:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8699:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8698:9:1"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8725:0:1"
            },
            "scope": 589,
            "src": "8684:468:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "9848:2:1",
              "statements": []
            },
            "documentation": {
              "id": 567,
              "nodeType": "StructuredDocumentation",
              "src": "9160:558:1",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9733:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9772:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "9764:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9764:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9795:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "9787:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9787:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9816:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "9808:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9808:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9753:77:1"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9848:0:1"
            },
            "scope": 589,
            "src": "9724:126:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "10358:2:1",
              "statements": []
            },
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "9858:371:1",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "10244:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10282:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "10274:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10274:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10305:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "10297:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10297:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10326:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "10318:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10318:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10263:77:1"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10358:0:1"
            },
            "scope": 589,
            "src": "10235:125:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 590,
        "src": "540:9823:1",
        "usedErrors": [
          162,
          164
        ]
      }
    ],
    "src": "110:10253:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000aa838038062000aa88339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61081780620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461019b578063b88d4fde146101a9578063c87b56dd146101b7578063e985e9c5146101ca57600080fd5b80636352211e1461015f57806370a082311461017257806395d89b411461019357600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610151575b600080fd5b6100e76100e23660046104e1565b6101d8565b60405190151581526020015b60405180910390f35b61010461022a565b6040516100f3919061053b565b61012461011f36600461056e565b6102bc565b6040516001600160a01b0390911681526020016100f3565b61014f61014a3660046105a3565b6102d7565b005b61014f61014a3660046105cd565b61012461016d36600461056e565b6102f0565b610185610180366004610609565b61036c565b6040519081526020016100f3565b6101046103f2565b61014f61014a366004610624565b61014f61014a366004610676565b6101046101c536600461056e565b610401565b6100e761011f366004610752565b60006001600160e01b031982166380ac58cd60e01b148061020957506001600160e01b03198216635b5e139f60e01b145b8061022457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461023990610785565b80601f016020809104026020016040519081016040528092919081815260200182805461026590610785565b80156102b25780601f10610287576101008083540402835291602001916102b2565b820191906000526020600020905b81548152906001019060200180831161029557829003601f168201915b5050505050905090565b6000604051637a851da960e11b815260040160405180910390fd5b604051637a851da960e11b815260040160405180910390fd5b6000818152600260205260408120546001600160a01b0316806102245760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084015b60405180910390fd5b60006001600160a01b0382166103d65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610363565b506001600160a01b031660009081526003602052604090205490565b60606001805461023990610785565b6000818152600260205260409020546060906001600160a01b03166104805760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610363565b600061049760408051602081019091526000815290565b905060008151116104b757604051806020016040528060008152506104da565b80836040516020016104ca9291906107bf565b6040516020818303038152906040525b9392505050565b6000602082840312156104f357600080fd5b81356001600160e01b0319811681146104da57600080fd5b60005b8381101561052657818101518382015260200161050e565b83811115610535576000848401525b50505050565b602081526000825180602084015261055a81604085016020870161050b565b601f01601f19169190910160400192915050565b60006020828403121561058057600080fd5b5035919050565b80356001600160a01b038116811461059e57600080fd5b919050565b600080604083850312156105b657600080fd5b6105bf83610587565b946020939093013593505050565b6000806000606084860312156105e257600080fd5b6105eb84610587565b92506105f960208501610587565b9150604084013590509250925092565b60006020828403121561061b57600080fd5b6104da82610587565b6000806040838503121561063757600080fd5b61064083610587565b91506020830135801515811461065557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561068c57600080fd5b61069585610587565b93506106a360208601610587565b925060408501359150606085013567ffffffffffffffff808211156106c757600080fd5b818701915087601f8301126106db57600080fd5b8135818111156106ed576106ed610660565b604051601f8201601f19908116603f0116810190838211818310171561071557610715610660565b816040528281528a602084870101111561072e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561076557600080fd5b61076e83610587565b915061077c60208401610587565b90509250929050565b600181811c9082168061079957607f821691505b6020821081036107b957634e487b7160e01b600052602260045260246000fd5b50919050565b600083516107d181846020880161050b565b919091019182525060200191905056fea2646970667358221220a189ac96bb6bcfef2c3cd4e1758a3aa2eaa90a94ead31daa2afee97558c218de64736f6c634300080d0033",
  "bytecodeSha1": "7f74f012b94d9170f02ce0052c628047fdcd274b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "ERC721.balanceOf": {
          "11": [
            1943,
            1962,
            true
          ]
        },
        "ERC721.tokenURI": {
          "12": [
            3070,
            3095,
            true
          ]
        }
      },
      "3": {},
      "6": {},
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "ERC165.supportsInterface": {
          "1": [
            627,
            674
          ]
        }
      },
      "1": {
        "ERC721._baseURI": {
          "9": [
            3533,
            3542
          ]
        },
        "ERC721._exists": {
          "7": [
            6413,
            6459
          ]
        },
        "ERC721.balanceOf": {
          "4": [
            1935,
            2008
          ],
          "5": [
            2019,
            2042
          ]
        },
        "ERC721.name": {
          "2": [
            2507,
            2519
          ]
        },
        "ERC721.ownerOf": {
          "3": [
            2256,
            2329
          ]
        },
        "ERC721.supportsInterface": {
          "0": [
            1517,
            1695
          ]
        },
        "ERC721.symbol": {
          "6": [
            2678,
            2692
          ]
        },
        "ERC721.tokenURI": {
          "8": [
            2929,
            3005
          ],
          "10": [
            3063,
            3145
          ]
        }
      },
      "3": {},
      "6": {},
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461019b578063b88d4fde146101a9578063c87b56dd146101b7578063e985e9c5146101ca57600080fd5b80636352211e1461015f57806370a082311461017257806395d89b411461019357600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610151575b600080fd5b6100e76100e23660046104e1565b6101d8565b60405190151581526020015b60405180910390f35b61010461022a565b6040516100f3919061053b565b61012461011f36600461056e565b6102bc565b6040516001600160a01b0390911681526020016100f3565b61014f61014a3660046105a3565b6102d7565b005b61014f61014a3660046105cd565b61012461016d36600461056e565b6102f0565b610185610180366004610609565b61036c565b6040519081526020016100f3565b6101046103f2565b61014f61014a366004610624565b61014f61014a366004610676565b6101046101c536600461056e565b610401565b6100e761011f366004610752565b60006001600160e01b031982166380ac58cd60e01b148061020957506001600160e01b03198216635b5e139f60e01b145b8061022457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461023990610785565b80601f016020809104026020016040519081016040528092919081815260200182805461026590610785565b80156102b25780601f10610287576101008083540402835291602001916102b2565b820191906000526020600020905b81548152906001019060200180831161029557829003601f168201915b5050505050905090565b6000604051637a851da960e11b815260040160405180910390fd5b604051637a851da960e11b815260040160405180910390fd5b6000818152600260205260408120546001600160a01b0316806102245760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084015b60405180910390fd5b60006001600160a01b0382166103d65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610363565b506001600160a01b031660009081526003602052604090205490565b60606001805461023990610785565b6000818152600260205260409020546060906001600160a01b03166104805760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610363565b600061049760408051602081019091526000815290565b905060008151116104b757604051806020016040528060008152506104da565b80836040516020016104ca9291906107bf565b6040516020818303038152906040525b9392505050565b6000602082840312156104f357600080fd5b81356001600160e01b0319811681146104da57600080fd5b60005b8381101561052657818101518382015260200161050e565b83811115610535576000848401525b50505050565b602081526000825180602084015261055a81604085016020870161050b565b601f01601f19169190910160400192915050565b60006020828403121561058057600080fd5b5035919050565b80356001600160a01b038116811461059e57600080fd5b919050565b600080604083850312156105b657600080fd5b6105bf83610587565b946020939093013593505050565b6000806000606084860312156105e257600080fd5b6105eb84610587565b92506105f960208501610587565b9150604084013590509250925092565b60006020828403121561061b57600080fd5b6104da82610587565b6000806040838503121561063757600080fd5b61064083610587565b91506020830135801515811461065557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561068c57600080fd5b61069585610587565b93506106a360208601610587565b925060408501359150606085013567ffffffffffffffff808211156106c757600080fd5b818701915087601f8301126106db57600080fd5b8135818111156106ed576106ed610660565b604051601f8201601f19908116603f0116810190838211818310171561071557610715610660565b816040528281528a602084870101111561072e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561076557600080fd5b61076e83610587565b915061077c60208401610587565b90509250929050565b600181811c9082168061079957607f821691505b6020821081036107b957634e487b7160e01b600052602260045260246000fd5b50919050565b600083516107d181846020880161050b565b919091019182525060200191905056fea2646970667358221220a189ac96bb6bcfef2c3cd4e1758a3aa2eaa90a94ead31daa2afee97558c218de64736f6c634300080d0033",
  "deployedSourceMap": "540:9823:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1407:296;;;;;;:::i;:::-;;:::i;:::-;;;470:14:9;;463:22;445:41;;433:2;418:18;1407:296:1;;;;;;;;2427:100;;;:::i;:::-;;;;;;;:::i;3822:124::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1497:32:9;;;1479:51;;1467:2;1452:18;3822:124:1;1333:203:9;3631:106:1;;;;;;:::i;:::-;;:::i;:::-;;4461:120;;;;;;:::i;2112:248::-;;;;;;:::i;:::-;;:::i;1843:207::-;;;;;;:::i;:::-;;:::i;:::-;;;2648:25:9;;;2636:2;2621:18;1843:207:1;2502:177:9;2596:104:1;;;:::i;4037:113::-;;;;;;:::i;4885:138::-;;;;;;:::i;2830:323::-;;;;;;:::i;:::-;;:::i;4240:135::-;;;;;;:::i;1407:296::-;1500:4;-1:-1:-1;;;;;;1537:40:1;;-1:-1:-1;;;1537:40:1;;:105;;-1:-1:-1;;;;;;;1594:48:1;;-1:-1:-1;;;1594:48:1;1537:105;:158;;;-1:-1:-1;;;;;;;;;;634:40:0;;;1659:36:1;1517:178;1407:296;-1:-1:-1;;1407:296:1:o;2427:100::-;2481:13;2514:5;2507:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2427:100;:::o;3822:124::-;3890:7;3917:21;;-1:-1:-1;;;3917:21:1;;;;;;;;;;;3631:106;3708:21;;-1:-1:-1;;;3708:21:1;;;;;;;;;;;2112:248;2184:7;2220:25;;;:16;:25;;;;;;-1:-1:-1;;;;;2220:25:1;;2256:73;;;;-1:-1:-1;;;2256:73:1;;5163:2:9;2256:73:1;;;5145:21:9;5202:2;5182:18;;;5175:30;5241:34;5221:18;;;5214:62;-1:-1:-1;;;5292:18:9;;;5285:39;5341:19;;2256:73:1;;;;;;;;1843:207;1915:7;-1:-1:-1;;;;;1943:19:1;;1935:73;;;;-1:-1:-1;;;1935:73:1;;5573:2:9;1935:73:1;;;5555:21:9;5612:2;5592:18;;;5585:30;5651:34;5631:18;;;5624:62;-1:-1:-1;;;5702:18:9;;;5695:39;5751:19;;1935:73:1;5371:405:9;1935:73:1;-1:-1:-1;;;;;;2026:16:1;;;;;:9;:16;;;;;;;1843:207::o;2596:104::-;2652:13;2685:7;2678:14;;;;;:::i;2830:323::-;6396:4;6420:25;;;:16;:25;;;;;;2903:13;;-1:-1:-1;;;;;6420:25:1;2929:76;;;;-1:-1:-1;;;2929:76:1;;5983:2:9;2929:76:1;;;5965:21:9;6022:2;6002:18;;;5995:30;6061:34;6041:18;;;6034:62;-1:-1:-1;;;6112:18:9;;;6105:45;6167:19;;2929:76:1;5781:411:9;2929:76:1;3018:21;3042:10;3533:9;;;;;;;;;-1:-1:-1;3533:9:1;;;3456:94;3042:10;3018:34;;3094:1;3076:7;3070:21;:25;:75;;;;;;;;;;;;;;;;;3122:7;3131;3105:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3070:75;3063:82;2830:323;-1:-1:-1;;;2830:323:1:o;14:286:9:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:9;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;745:1;736:6;731:3;727:16;720:27;701:48;;497:258;;;:::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:9;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:9:o;1148:180::-;1207:6;1260:2;1248:9;1239:7;1235:23;1231:32;1228:52;;;1276:1;1273;1266:12;1228:52;-1:-1:-1;1299:23:9;;1148:180;-1:-1:-1;1148:180:9:o;1541:173::-;1609:20;;-1:-1:-1;;;;;1658:31:9;;1648:42;;1638:70;;1704:1;1701;1694:12;1638:70;1541:173;;;:::o;1719:254::-;1787:6;1795;1848:2;1836:9;1827:7;1823:23;1819:32;1816:52;;;1864:1;1861;1854:12;1816:52;1887:29;1906:9;1887:29;:::i;:::-;1877:39;1963:2;1948:18;;;;1935:32;;-1:-1:-1;;;1719:254:9:o;1978:328::-;2055:6;2063;2071;2124:2;2112:9;2103:7;2099:23;2095:32;2092:52;;;2140:1;2137;2130:12;2092:52;2163:29;2182:9;2163:29;:::i;:::-;2153:39;;2211:38;2245:2;2234:9;2230:18;2211:38;:::i;:::-;2201:48;;2296:2;2285:9;2281:18;2268:32;2258:42;;1978:328;;;;;:::o;2311:186::-;2370:6;2423:2;2411:9;2402:7;2398:23;2394:32;2391:52;;;2439:1;2436;2429:12;2391:52;2462:29;2481:9;2462:29;:::i;2684:347::-;2749:6;2757;2810:2;2798:9;2789:7;2785:23;2781:32;2778:52;;;2826:1;2823;2816:12;2778:52;2849:29;2868:9;2849:29;:::i;:::-;2839:39;;2928:2;2917:9;2913:18;2900:32;2975:5;2968:13;2961:21;2954:5;2951:32;2941:60;;2997:1;2994;2987:12;2941:60;3020:5;3010:15;;;2684:347;;;;;:::o;3036:127::-;3097:10;3092:3;3088:20;3085:1;3078:31;3128:4;3125:1;3118:15;3152:4;3149:1;3142:15;3168:1138;3263:6;3271;3279;3287;3340:3;3328:9;3319:7;3315:23;3311:33;3308:53;;;3357:1;3354;3347:12;3308:53;3380:29;3399:9;3380:29;:::i;:::-;3370:39;;3428:38;3462:2;3451:9;3447:18;3428:38;:::i;:::-;3418:48;;3513:2;3502:9;3498:18;3485:32;3475:42;;3568:2;3557:9;3553:18;3540:32;3591:18;3632:2;3624:6;3621:14;3618:34;;;3648:1;3645;3638:12;3618:34;3686:6;3675:9;3671:22;3661:32;;3731:7;3724:4;3720:2;3716:13;3712:27;3702:55;;3753:1;3750;3743:12;3702:55;3789:2;3776:16;3811:2;3807;3804:10;3801:36;;;3817:18;;:::i;:::-;3892:2;3886:9;3860:2;3946:13;;-1:-1:-1;;3942:22:9;;;3966:2;3938:31;3934:40;3922:53;;;3990:18;;;4010:22;;;3987:46;3984:72;;;4036:18;;:::i;:::-;4076:10;4072:2;4065:22;4111:2;4103:6;4096:18;4151:7;4146:2;4141;4137;4133:11;4129:20;4126:33;4123:53;;;4172:1;4169;4162:12;4123:53;4228:2;4223;4219;4215:11;4210:2;4202:6;4198:15;4185:46;4273:1;4268:2;4263;4255:6;4251:15;4247:24;4240:35;4294:6;4284:16;;;;;;;3168:1138;;;;;;;:::o;4311:260::-;4379:6;4387;4440:2;4428:9;4419:7;4415:23;4411:32;4408:52;;;4456:1;4453;4446:12;4408:52;4479:29;4498:9;4479:29;:::i;:::-;4469:39;;4527:38;4561:2;4550:9;4546:18;4527:38;:::i;:::-;4517:48;;4311:260;;;;;:::o;4576:380::-;4655:1;4651:12;;;;4698;;;4719:61;;4773:4;4765:6;4761:17;4751:27;;4719:61;4826:2;4818:6;4815:14;4795:18;4792:38;4789:161;;4872:10;4867:3;4863:20;4860:1;4853:31;4907:4;4904:1;4897:15;4935:4;4932:1;4925:15;4789:161;;4576:380;;;:::o;6197:372::-;6356:3;6394:6;6388:13;6410:53;6456:6;6451:3;6444:4;6436:6;6432:17;6410:53;:::i;:::-;6485:16;;;;6510:21;;;-1:-1:-1;6558:4:9;6547:16;;6197:372;-1:-1:-1;6197:372:9:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}. Restricted"
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}. It'll always be between 0 and 1. We'll limit single nft per address"
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}. Restricted"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}. Restricted"
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}. Restricted"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}. Restricted"
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}. Restricted"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}. - Change to reflect on-chain generative ASCII art "
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}. Restricted"
      }
    },
    "version": 1
  },
  "offset": [
    540,
    10363
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x151 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x124 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x609 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x209 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x224 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x239 SWAP1 PUSH2 0x785 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x265 SWAP1 PUSH2 0x785 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x287 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x295 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x7A851DA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7A851DA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x224 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x239 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x363 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x497 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4DA JUMP JUMPDEST DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4CA SWAP3 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x526 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x50E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x55A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5BF DUP4 PUSH2 0x587 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5EB DUP5 PUSH2 0x587 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F9 PUSH1 0x20 DUP6 ADD PUSH2 0x587 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4DA DUP3 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x640 DUP4 PUSH2 0x587 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x695 DUP6 PUSH2 0x587 JUMP JUMPDEST SWAP4 POP PUSH2 0x6A3 PUSH1 0x20 DUP7 ADD PUSH2 0x587 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x6ED JUMPI PUSH2 0x6ED PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x715 JUMPI PUSH2 0x715 PUSH2 0x660 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76E DUP4 PUSH2 0x587 JUMP JUMPDEST SWAP2 POP PUSH2 0x77C PUSH1 0x20 DUP5 ADD PUSH2 0x587 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x799 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x7D1 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x50B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 DUP10 0xAC SWAP7 0xBB PUSH12 0xCFEF2C3CD4E1758A3AA2EAA9 EXP SWAP5 0xEA 0xD3 SAR 0xAA 0x2A INVALID 0xE9 PUSH22 0x58C218DE64736F6C634300080D003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        540,
        10363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19B"
    },
    "64": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A9"
    },
    "75": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B7"
    },
    "86": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CA"
    },
    "97": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F"
    },
    "113": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x172"
    },
    "124": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x193"
    },
    "135": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "139": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "REVERT",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "206": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "208": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        540,
        10363
      ],
      "op": "REVERT",
      "path": "1"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E1"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1407,
        1703
      ],
      "op": "JUMP",
      "path": "1"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D8"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1407,
        1703
      ],
      "op": "JUMP",
      "path": "1"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "DUP1",
      "path": "1"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "SUB",
      "path": "1"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "RETURN",
      "path": "1"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2427,
        2527
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53B"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2427,
        2527
      ],
      "op": "JUMP",
      "path": "1"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x56E"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3822,
        3946
      ],
      "op": "JUMP",
      "path": "1"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BC"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3822,
        3946
      ],
      "op": "JUMP",
      "path": "1"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A3"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3631,
        3737
      ],
      "op": "JUMP",
      "path": "1"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D7"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3631,
        3737
      ],
      "op": "JUMP",
      "path": "1"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "STOP",
      "path": "1"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4461,
        4581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4461,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4461,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4461,
        4581
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4461,
        4581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4461,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CD"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4461,
        4581
      ],
      "op": "JUMP",
      "path": "1"
    },
    "351": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2112,
        2360
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "352": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2112,
        2360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "355": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2112,
        2360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D"
    },
    "358": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2112,
        2360
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "359": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2112,
        2360
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "361": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2112,
        2360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x56E"
    },
    "364": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2112,
        2360
      ],
      "op": "JUMP",
      "path": "1"
    },
    "365": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2112,
        2360
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "366": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2112,
        2360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F0"
    },
    "369": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2112,
        2360
      ],
      "op": "JUMP",
      "path": "1"
    },
    "370": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "371": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "374": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x180"
    },
    "377": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "378": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "380": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x609"
    },
    "383": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1843,
        2050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "384": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "385": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36C"
    },
    "388": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1843,
        2050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "389": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "390": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "393": {
      "op": "SWAP1"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "ERC721.symbol",
      "offset": [
        2596,
        2700
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "404": {
      "fn": "ERC721.symbol",
      "offset": [
        2596,
        2700
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "407": {
      "fn": "ERC721.symbol",
      "offset": [
        2596,
        2700
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F2"
    },
    "410": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2596,
        2700
      ],
      "op": "JUMP",
      "path": "1"
    },
    "411": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4037,
        4150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "412": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4037,
        4150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "415": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4037,
        4150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "418": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4037,
        4150
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "419": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4037,
        4150
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "421": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4037,
        4150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x624"
    },
    "424": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4037,
        4150
      ],
      "op": "JUMP",
      "path": "1"
    },
    "425": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4885,
        5023
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "426": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4885,
        5023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4885,
        5023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "432": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4885,
        5023
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "433": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4885,
        5023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "435": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4885,
        5023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x676"
    },
    "438": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        4885,
        5023
      ],
      "op": "JUMP",
      "path": "1"
    },
    "439": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "440": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "443": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C5"
    },
    "446": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "447": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "449": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x56E"
    },
    "452": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2830,
        3153
      ],
      "op": "JUMP",
      "path": "1"
    },
    "453": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "454": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x401"
    },
    "457": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2830,
        3153
      ],
      "op": "JUMP",
      "path": "1"
    },
    "458": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4240,
        4375
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "459": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4240,
        4375
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "462": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4240,
        4375
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F"
    },
    "465": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4240,
        4375
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "466": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4240,
        4375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "468": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4240,
        4375
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x752"
    },
    "471": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4240,
        4375
      ],
      "op": "JUMP",
      "path": "1"
    },
    "472": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "473": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1500,
        1504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "op": "SUB"
    },
    "483": {
      "op": "NOT"
    },
    "484": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1577
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 0
    },
    "485": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1577
      ],
      "op": "AND",
      "path": "1"
    },
    "486": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1577
      ],
      "op": "EQ",
      "path": "1"
    },
    "495": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1577
      ],
      "op": "DUP1",
      "path": "1"
    },
    "496": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1642
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x209"
    },
    "499": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1642
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "500": {
      "op": "POP"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "505": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "507": {
      "op": "SHL"
    },
    "508": {
      "op": "SUB"
    },
    "509": {
      "op": "NOT"
    },
    "510": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1594,
        1642
      ],
      "op": "DUP3",
      "path": "1"
    },
    "511": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1594,
        1642
      ],
      "op": "AND",
      "path": "1"
    },
    "512": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "517": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "519": {
      "op": "SHL"
    },
    "520": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1594,
        1642
      ],
      "op": "EQ",
      "path": "1"
    },
    "521": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1642
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "522": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1695
      ],
      "op": "DUP1",
      "path": "1"
    },
    "523": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1695
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x224"
    },
    "526": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1537,
        1695
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "527": {
      "op": "POP"
    },
    "528": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "op": "SUB"
    },
    "544": {
      "op": "NOT"
    },
    "545": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        634,
        674
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 1
    },
    "546": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        634,
        674
      ],
      "op": "AND",
      "path": "0"
    },
    "547": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        634,
        674
      ],
      "op": "EQ",
      "path": "0"
    },
    "548": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1659,
        1695
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "549": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1517,
        1695
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "550": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1407,
        1703
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "551": {
      "op": "POP"
    },
    "552": {
      "op": "POP"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1407,
        1703
      ],
      "op": "JUMP",
      "path": "1"
    },
    "554": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "555": {
      "fn": "ERC721.name",
      "offset": [
        2481,
        2494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "557": {
      "fn": "ERC721.name",
      "offset": [
        2514,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x0"
    },
    "559": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "560": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "561": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x239"
    },
    "564": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "565": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x785"
    },
    "568": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMP",
      "path": "1"
    },
    "569": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "570": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "571": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "573": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ADD",
      "path": "1"
    },
    "574": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "576": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "577": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "578": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DIV",
      "path": "1"
    },
    "579": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "MUL",
      "path": "1"
    },
    "580": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "582": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ADD",
      "path": "1"
    },
    "583": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "585": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "586": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "587": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "588": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ADD",
      "path": "1"
    },
    "589": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "591": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "592": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "593": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "595": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "596": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "597": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "599": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "601": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ADD",
      "path": "1"
    },
    "602": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP3",
      "path": "1"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "605": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x265"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x785"
    },
    "612": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMP",
      "path": "1"
    },
    "613": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "614": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "615": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B2"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "620": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "623": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "LT",
      "path": "1"
    },
    "624": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x287"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "632": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP4",
      "path": "1"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DIV",
      "path": "1"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "MUL",
      "path": "1"
    },
    "636": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP4",
      "path": "1"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ADD",
      "path": "1"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B2"
    },
    "646": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMP",
      "path": "1"
    },
    "647": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "648": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP3",
      "path": "1"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ADD",
      "path": "1"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "652": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "661": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "664": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ADD",
      "path": "1"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ADD",
      "path": "1"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP4",
      "path": "1"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "GT",
      "path": "1"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP3",
      "path": "1"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SUB",
      "path": "1"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "AND",
      "path": "1"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "DUP3",
      "path": "1"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "ADD",
      "path": "1"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "POP",
      "path": "1"
    },
    "692": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "POP",
      "path": "1"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "POP",
      "path": "1"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "POP",
      "path": "1"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "POP",
      "path": "1"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "697": {
      "fn": "ERC721.name",
      "offset": [
        2507,
        2519
      ],
      "op": "POP",
      "path": "1"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2427,
        2527
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "699": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2427,
        2527
      ],
      "op": "JUMP",
      "path": "1"
    },
    "700": {
      "fn": "ERC721.getApproved",
      "offset": [
        3822,
        3946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "701": {
      "fn": "ERC721.getApproved",
      "offset": [
        3890,
        3897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "703": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "705": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "706": {
      "op": "PUSH4",
      "value": "0x7A851DA9"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "DUP2",
      "path": "1"
    },
    "715": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "716": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "718": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "ADD",
      "path": "1"
    },
    "719": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "721": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "722": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "DUP1",
      "path": "1"
    },
    "723": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "724": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "SUB",
      "path": "1"
    },
    "725": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "726": {
      "fn": "ERC721.getApproved",
      "offset": [
        3917,
        3938
      ],
      "op": "REVERT",
      "path": "1"
    },
    "727": {
      "fn": "ERC721.approve",
      "offset": [
        3631,
        3737
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "728": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "730": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "731": {
      "op": "PUSH4",
      "value": "0x7A851DA9"
    },
    "736": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "738": {
      "op": "SHL"
    },
    "739": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "DUP2",
      "path": "1"
    },
    "740": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "741": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "743": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "ADD",
      "path": "1"
    },
    "744": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "746": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "747": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "DUP1",
      "path": "1"
    },
    "748": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "749": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "SUB",
      "path": "1"
    },
    "750": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "751": {
      "fn": "ERC721.approve",
      "offset": [
        3708,
        3729
      ],
      "op": "REVERT",
      "path": "1"
    },
    "752": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2112,
        2360
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "753": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2184,
        2191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "755": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "756": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "757": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "758": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2236
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "760": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "762": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "763": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "765": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "766": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "767": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "774": {
      "op": "SHL"
    },
    "775": {
      "op": "SUB"
    },
    "776": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "AND",
      "path": "1"
    },
    "777": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2220,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "778": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 3,
      "value": "0x224"
    },
    "781": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "782": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "785": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "789": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "791": {
      "op": "SHL"
    },
    "792": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "DUP2",
      "path": "1"
    },
    "793": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "796": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "798": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "DUP3",
      "path": "1"
    },
    "799": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "ADD",
      "path": "1"
    },
    "800": {
      "op": "MSTORE"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "805": {
      "op": "DUP3"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "op": "MSTORE"
    },
    "808": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "843": {
      "op": "DUP3"
    },
    "844": {
      "op": "ADD"
    },
    "845": {
      "op": "MSTORE"
    },
    "846": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "861": {
      "op": "DUP3"
    },
    "862": {
      "op": "ADD"
    },
    "863": {
      "op": "MSTORE"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "866": {
      "op": "ADD"
    },
    "867": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "868": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "870": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "871": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "872": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "873": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "SUB",
      "path": "1"
    },
    "874": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "875": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2329
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "876": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1843,
        2050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "877": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1915,
        1922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "op": "SUB"
    },
    "887": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1943,
        1962
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 4
    },
    "888": {
      "branch": 11,
      "fn": "ERC721.balanceOf",
      "offset": [
        1943,
        1962
      ],
      "op": "AND",
      "path": "1"
    },
    "889": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D6"
    },
    "892": {
      "branch": 11,
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "893": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "895": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "902": {
      "op": "SHL"
    },
    "903": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "DUP2",
      "path": "1"
    },
    "904": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "907": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "909": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "DUP3",
      "path": "1"
    },
    "910": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "ADD",
      "path": "1"
    },
    "911": {
      "op": "MSTORE"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "916": {
      "op": "DUP3"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "MSTORE"
    },
    "919": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "954": {
      "op": "DUP3"
    },
    "955": {
      "op": "ADD"
    },
    "956": {
      "op": "MSTORE"
    },
    "957": {
      "op": "PUSH9",
      "value": "0x3634B21037BBB732B9"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "972": {
      "op": "DUP3"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x363"
    },
    "981": {
      "op": "JUMP"
    },
    "982": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1935,
        2008
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "983": {
      "op": "POP"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "op": "SUB"
    },
    "992": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "AND",
      "path": "1",
      "statement": 5
    },
    "993": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "995": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "996": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "DUP2",
      "path": "1"
    },
    "997": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "998": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1000": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1002": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1003": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1005": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1006": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1007": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1008": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2026,
        2042
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1009": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1843,
        2050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1010": {
      "fn": "ERC721.symbol",
      "offset": [
        2596,
        2700
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1011": {
      "fn": "ERC721.symbol",
      "offset": [
        2652,
        2665
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1013": {
      "fn": "ERC721.symbol",
      "offset": [
        2685,
        2692
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x1"
    },
    "1015": {
      "fn": "ERC721.symbol",
      "offset": [
        2678,
        2692
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1016": {
      "fn": "ERC721.symbol",
      "offset": [
        2678,
        2692
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1017": {
      "fn": "ERC721.symbol",
      "offset": [
        2678,
        2692
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x239"
    },
    "1020": {
      "fn": "ERC721.symbol",
      "offset": [
        2678,
        2692
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1021": {
      "fn": "ERC721.symbol",
      "offset": [
        2678,
        2692
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x785"
    },
    "1024": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2678,
        2692
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1025": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1026": {
      "fn": "ERC721._exists",
      "offset": [
        6396,
        6400
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1028": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 7
    },
    "1029": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1030": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1031": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6436
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1033": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1035": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1036": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1038": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1039": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1040": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1041": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2903,
        2916
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1043": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2903,
        2916
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "op": "SUB"
    },
    "1052": {
      "fn": "ERC721._exists",
      "offset": [
        6420,
        6445
      ],
      "op": "AND",
      "path": "1"
    },
    "1053": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 8,
      "value": "0x480"
    },
    "1056": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1057": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1059": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1068": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1071": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1073": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1074": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "ADD",
      "path": "1"
    },
    "1075": {
      "op": "MSTORE"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1080": {
      "op": "DUP3"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1118": {
      "op": "DUP3"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "op": "MSTORE"
    },
    "1121": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1142": {
      "op": "DUP3"
    },
    "1143": {
      "op": "ADD"
    },
    "1144": {
      "op": "MSTORE"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x363"
    },
    "1151": {
      "op": "JUMP"
    },
    "1152": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        3005
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1153": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1155": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3042,
        3052
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x497"
    },
    "1158": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x40"
    },
    "1160": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1161": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1162": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1164": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1165": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "ADD",
      "path": "1"
    },
    "1166": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1167": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1168": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1171": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1172": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1173": {
      "fn": "ERC721._baseURI",
      "offset": [
        3533,
        3542
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1174": {
      "fn": "ERC721._baseURI",
      "offset": [
        3456,
        3550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1175": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3042,
        3052
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1176": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3052
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1177": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3052
      ],
      "op": "POP",
      "path": "1"
    },
    "1178": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3094,
        3095
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x0"
    },
    "1180": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3083
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1181": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3091
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1182": {
      "branch": 12,
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3095
      ],
      "op": "GT",
      "path": "1"
    },
    "1183": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B7"
    },
    "1186": {
      "branch": 12,
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1187": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1189": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1190": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1191": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1193": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "ADD",
      "path": "1"
    },
    "1194": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1196": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1197": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1198": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1200": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1201": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1202": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "POP",
      "path": "1"
    },
    "1203": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DA"
    },
    "1206": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1207": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1208": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3122,
        3129
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1209": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3131,
        3138
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1210": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1212": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1213": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1215": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "ADD",
      "path": "1"
    },
    "1216": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CA"
    },
    "1219": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1220": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1221": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1222": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7BF"
    },
    "1225": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3105,
        3139
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1226": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1227": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1229": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1230": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1232": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1233": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1234": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "SUB",
      "path": "1"
    },
    "1235": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "SUB",
      "path": "1"
    },
    "1236": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1237": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1238": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1239": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1241": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3105,
        3139
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1242": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3070,
        3145
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1243": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3145
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1244": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2830,
        3153
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1245": {
      "op": "POP"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "op": "POP"
    },
    "1248": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2830,
        3153
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1249": {
      "op": "JUMPDEST"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1254": {
      "op": "DUP3"
    },
    "1255": {
      "op": "DUP5"
    },
    "1256": {
      "op": "SUB"
    },
    "1257": {
      "op": "SLT"
    },
    "1258": {
      "op": "ISZERO"
    },
    "1259": {
      "op": "PUSH2",
      "value": "0x4F3"
    },
    "1262": {
      "op": "JUMPI"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1265": {
      "op": "DUP1"
    },
    "1266": {
      "op": "REVERT"
    },
    "1267": {
      "op": "JUMPDEST"
    },
    "1268": {
      "op": "DUP2"
    },
    "1269": {
      "op": "CALLDATALOAD"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "op": "SUB"
    },
    "1278": {
      "op": "NOT"
    },
    "1279": {
      "op": "DUP2"
    },
    "1280": {
      "op": "AND"
    },
    "1281": {
      "op": "DUP2"
    },
    "1282": {
      "op": "EQ"
    },
    "1283": {
      "op": "PUSH2",
      "value": "0x4DA"
    },
    "1286": {
      "op": "JUMPI"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1289": {
      "op": "DUP1"
    },
    "1290": {
      "op": "REVERT"
    },
    "1291": {
      "op": "JUMPDEST"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1294": {
      "op": "JUMPDEST"
    },
    "1295": {
      "op": "DUP4"
    },
    "1296": {
      "op": "DUP2"
    },
    "1297": {
      "op": "LT"
    },
    "1298": {
      "op": "ISZERO"
    },
    "1299": {
      "op": "PUSH2",
      "value": "0x526"
    },
    "1302": {
      "op": "JUMPI"
    },
    "1303": {
      "op": "DUP2"
    },
    "1304": {
      "op": "DUP2"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "MLOAD"
    },
    "1307": {
      "op": "DUP4"
    },
    "1308": {
      "op": "DUP3"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1313": {
      "op": "ADD"
    },
    "1314": {
      "op": "PUSH2",
      "value": "0x50E"
    },
    "1317": {
      "op": "JUMP"
    },
    "1318": {
      "op": "JUMPDEST"
    },
    "1319": {
      "op": "DUP4"
    },
    "1320": {
      "op": "DUP2"
    },
    "1321": {
      "op": "GT"
    },
    "1322": {
      "op": "ISZERO"
    },
    "1323": {
      "op": "PUSH2",
      "value": "0x535"
    },
    "1326": {
      "op": "JUMPI"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1329": {
      "op": "DUP5"
    },
    "1330": {
      "op": "DUP5"
    },
    "1331": {
      "op": "ADD"
    },
    "1332": {
      "op": "MSTORE"
    },
    "1333": {
      "op": "JUMPDEST"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "jump": "o",
      "op": "JUMP"
    },
    "1339": {
      "op": "JUMPDEST"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1342": {
      "op": "DUP2"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1346": {
      "op": "DUP3"
    },
    "1347": {
      "op": "MLOAD"
    },
    "1348": {
      "op": "DUP1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1351": {
      "op": "DUP5"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "PUSH2",
      "value": "0x55A"
    },
    "1357": {
      "op": "DUP2"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1360": {
      "op": "DUP6"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1364": {
      "op": "DUP8"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "op": "PUSH2",
      "value": "0x50B"
    },
    "1369": {
      "jump": "i",
      "op": "JUMP"
    },
    "1370": {
      "op": "JUMPDEST"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1373": {
      "op": "ADD"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1376": {
      "op": "NOT"
    },
    "1377": {
      "op": "AND"
    },
    "1378": {
      "op": "SWAP2"
    },
    "1379": {
      "op": "SWAP1"
    },
    "1380": {
      "op": "SWAP2"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1384": {
      "op": "ADD"
    },
    "1385": {
      "op": "SWAP3"
    },
    "1386": {
      "op": "SWAP2"
    },
    "1387": {
      "op": "POP"
    },
    "1388": {
      "op": "POP"
    },
    "1389": {
      "jump": "o",
      "op": "JUMP"
    },
    "1390": {
      "op": "JUMPDEST"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1395": {
      "op": "DUP3"
    },
    "1396": {
      "op": "DUP5"
    },
    "1397": {
      "op": "SUB"
    },
    "1398": {
      "op": "SLT"
    },
    "1399": {
      "op": "ISZERO"
    },
    "1400": {
      "op": "PUSH2",
      "value": "0x580"
    },
    "1403": {
      "op": "JUMPI"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1406": {
      "op": "DUP1"
    },
    "1407": {
      "op": "REVERT"
    },
    "1408": {
      "op": "JUMPDEST"
    },
    "1409": {
      "op": "POP"
    },
    "1410": {
      "op": "CALLDATALOAD"
    },
    "1411": {
      "op": "SWAP2"
    },
    "1412": {
      "op": "SWAP1"
    },
    "1413": {
      "op": "POP"
    },
    "1414": {
      "jump": "o",
      "op": "JUMP"
    },
    "1415": {
      "op": "JUMPDEST"
    },
    "1416": {
      "op": "DUP1"
    },
    "1417": {
      "op": "CALLDATALOAD"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1424": {
      "op": "SHL"
    },
    "1425": {
      "op": "SUB"
    },
    "1426": {
      "op": "DUP2"
    },
    "1427": {
      "op": "AND"
    },
    "1428": {
      "op": "DUP2"
    },
    "1429": {
      "op": "EQ"
    },
    "1430": {
      "op": "PUSH2",
      "value": "0x59E"
    },
    "1433": {
      "op": "JUMPI"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1436": {
      "op": "DUP1"
    },
    "1437": {
      "op": "REVERT"
    },
    "1438": {
      "op": "JUMPDEST"
    },
    "1439": {
      "op": "SWAP2"
    },
    "1440": {
      "op": "SWAP1"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "jump": "o",
      "op": "JUMP"
    },
    "1443": {
      "op": "JUMPDEST"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1446": {
      "op": "DUP1"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1449": {
      "op": "DUP4"
    },
    "1450": {
      "op": "DUP6"
    },
    "1451": {
      "op": "SUB"
    },
    "1452": {
      "op": "SLT"
    },
    "1453": {
      "op": "ISZERO"
    },
    "1454": {
      "op": "PUSH2",
      "value": "0x5B6"
    },
    "1457": {
      "op": "JUMPI"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1460": {
      "op": "DUP1"
    },
    "1461": {
      "op": "REVERT"
    },
    "1462": {
      "op": "JUMPDEST"
    },
    "1463": {
      "op": "PUSH2",
      "value": "0x5BF"
    },
    "1466": {
      "op": "DUP4"
    },
    "1467": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1470": {
      "jump": "i",
      "op": "JUMP"
    },
    "1471": {
      "op": "JUMPDEST"
    },
    "1472": {
      "op": "SWAP5"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1475": {
      "op": "SWAP4"
    },
    "1476": {
      "op": "SWAP1"
    },
    "1477": {
      "op": "SWAP4"
    },
    "1478": {
      "op": "ADD"
    },
    "1479": {
      "op": "CALLDATALOAD"
    },
    "1480": {
      "op": "SWAP4"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "jump": "o",
      "op": "JUMP"
    },
    "1485": {
      "op": "JUMPDEST"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1488": {
      "op": "DUP1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1493": {
      "op": "DUP5"
    },
    "1494": {
      "op": "DUP7"
    },
    "1495": {
      "op": "SUB"
    },
    "1496": {
      "op": "SLT"
    },
    "1497": {
      "op": "ISZERO"
    },
    "1498": {
      "op": "PUSH2",
      "value": "0x5E2"
    },
    "1501": {
      "op": "JUMPI"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1504": {
      "op": "DUP1"
    },
    "1505": {
      "op": "REVERT"
    },
    "1506": {
      "op": "JUMPDEST"
    },
    "1507": {
      "op": "PUSH2",
      "value": "0x5EB"
    },
    "1510": {
      "op": "DUP5"
    },
    "1511": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1514": {
      "jump": "i",
      "op": "JUMP"
    },
    "1515": {
      "op": "JUMPDEST"
    },
    "1516": {
      "op": "SWAP3"
    },
    "1517": {
      "op": "POP"
    },
    "1518": {
      "op": "PUSH2",
      "value": "0x5F9"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1523": {
      "op": "DUP6"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1528": {
      "jump": "i",
      "op": "JUMP"
    },
    "1529": {
      "op": "JUMPDEST"
    },
    "1530": {
      "op": "SWAP2"
    },
    "1531": {
      "op": "POP"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1534": {
      "op": "DUP5"
    },
    "1535": {
      "op": "ADD"
    },
    "1536": {
      "op": "CALLDATALOAD"
    },
    "1537": {
      "op": "SWAP1"
    },
    "1538": {
      "op": "POP"
    },
    "1539": {
      "op": "SWAP3"
    },
    "1540": {
      "op": "POP"
    },
    "1541": {
      "op": "SWAP3"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "op": "SWAP3"
    },
    "1544": {
      "jump": "o",
      "op": "JUMP"
    },
    "1545": {
      "op": "JUMPDEST"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1550": {
      "op": "DUP3"
    },
    "1551": {
      "op": "DUP5"
    },
    "1552": {
      "op": "SUB"
    },
    "1553": {
      "op": "SLT"
    },
    "1554": {
      "op": "ISZERO"
    },
    "1555": {
      "op": "PUSH2",
      "value": "0x61B"
    },
    "1558": {
      "op": "JUMPI"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1561": {
      "op": "DUP1"
    },
    "1562": {
      "op": "REVERT"
    },
    "1563": {
      "op": "JUMPDEST"
    },
    "1564": {
      "op": "PUSH2",
      "value": "0x4DA"
    },
    "1567": {
      "op": "DUP3"
    },
    "1568": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1571": {
      "jump": "i",
      "op": "JUMP"
    },
    "1572": {
      "op": "JUMPDEST"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1575": {
      "op": "DUP1"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1578": {
      "op": "DUP4"
    },
    "1579": {
      "op": "DUP6"
    },
    "1580": {
      "op": "SUB"
    },
    "1581": {
      "op": "SLT"
    },
    "1582": {
      "op": "ISZERO"
    },
    "1583": {
      "op": "PUSH2",
      "value": "0x637"
    },
    "1586": {
      "op": "JUMPI"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1589": {
      "op": "DUP1"
    },
    "1590": {
      "op": "REVERT"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "PUSH2",
      "value": "0x640"
    },
    "1595": {
      "op": "DUP4"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1599": {
      "jump": "i",
      "op": "JUMP"
    },
    "1600": {
      "op": "JUMPDEST"
    },
    "1601": {
      "op": "SWAP2"
    },
    "1602": {
      "op": "POP"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1605": {
      "op": "DUP4"
    },
    "1606": {
      "op": "ADD"
    },
    "1607": {
      "op": "CALLDATALOAD"
    },
    "1608": {
      "op": "DUP1"
    },
    "1609": {
      "op": "ISZERO"
    },
    "1610": {
      "op": "ISZERO"
    },
    "1611": {
      "op": "DUP2"
    },
    "1612": {
      "op": "EQ"
    },
    "1613": {
      "op": "PUSH2",
      "value": "0x655"
    },
    "1616": {
      "op": "JUMPI"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1619": {
      "op": "DUP1"
    },
    "1620": {
      "op": "REVERT"
    },
    "1621": {
      "op": "JUMPDEST"
    },
    "1622": {
      "op": "DUP1"
    },
    "1623": {
      "op": "SWAP2"
    },
    "1624": {
      "op": "POP"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "op": "SWAP3"
    },
    "1627": {
      "op": "POP"
    },
    "1628": {
      "op": "SWAP3"
    },
    "1629": {
      "op": "SWAP1"
    },
    "1630": {
      "op": "POP"
    },
    "1631": {
      "jump": "o",
      "op": "JUMP"
    },
    "1632": {
      "op": "JUMPDEST"
    },
    "1633": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1640": {
      "op": "SHL"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1643": {
      "op": "MSTORE"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1648": {
      "op": "MSTORE"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1653": {
      "op": "REVERT"
    },
    "1654": {
      "op": "JUMPDEST"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1657": {
      "op": "DUP1"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1660": {
      "op": "DUP1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1663": {
      "op": "DUP6"
    },
    "1664": {
      "op": "DUP8"
    },
    "1665": {
      "op": "SUB"
    },
    "1666": {
      "op": "SLT"
    },
    "1667": {
      "op": "ISZERO"
    },
    "1668": {
      "op": "PUSH2",
      "value": "0x68C"
    },
    "1671": {
      "op": "JUMPI"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1674": {
      "op": "DUP1"
    },
    "1675": {
      "op": "REVERT"
    },
    "1676": {
      "op": "JUMPDEST"
    },
    "1677": {
      "op": "PUSH2",
      "value": "0x695"
    },
    "1680": {
      "op": "DUP6"
    },
    "1681": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1684": {
      "jump": "i",
      "op": "JUMP"
    },
    "1685": {
      "op": "JUMPDEST"
    },
    "1686": {
      "op": "SWAP4"
    },
    "1687": {
      "op": "POP"
    },
    "1688": {
      "op": "PUSH2",
      "value": "0x6A3"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1693": {
      "op": "DUP7"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1698": {
      "jump": "i",
      "op": "JUMP"
    },
    "1699": {
      "op": "JUMPDEST"
    },
    "1700": {
      "op": "SWAP3"
    },
    "1701": {
      "op": "POP"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1704": {
      "op": "DUP6"
    },
    "1705": {
      "op": "ADD"
    },
    "1706": {
      "op": "CALLDATALOAD"
    },
    "1707": {
      "op": "SWAP2"
    },
    "1708": {
      "op": "POP"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1711": {
      "op": "DUP6"
    },
    "1712": {
      "op": "ADD"
    },
    "1713": {
      "op": "CALLDATALOAD"
    },
    "1714": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1723": {
      "op": "DUP1"
    },
    "1724": {
      "op": "DUP3"
    },
    "1725": {
      "op": "GT"
    },
    "1726": {
      "op": "ISZERO"
    },
    "1727": {
      "op": "PUSH2",
      "value": "0x6C7"
    },
    "1730": {
      "op": "JUMPI"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1733": {
      "op": "DUP1"
    },
    "1734": {
      "op": "REVERT"
    },
    "1735": {
      "op": "JUMPDEST"
    },
    "1736": {
      "op": "DUP2"
    },
    "1737": {
      "op": "DUP8"
    },
    "1738": {
      "op": "ADD"
    },
    "1739": {
      "op": "SWAP2"
    },
    "1740": {
      "op": "POP"
    },
    "1741": {
      "op": "DUP8"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1744": {
      "op": "DUP4"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "SLT"
    },
    "1747": {
      "op": "PUSH2",
      "value": "0x6DB"
    },
    "1750": {
      "op": "JUMPI"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1753": {
      "op": "DUP1"
    },
    "1754": {
      "op": "REVERT"
    },
    "1755": {
      "op": "JUMPDEST"
    },
    "1756": {
      "op": "DUP2"
    },
    "1757": {
      "op": "CALLDATALOAD"
    },
    "1758": {
      "op": "DUP2"
    },
    "1759": {
      "op": "DUP2"
    },
    "1760": {
      "op": "GT"
    },
    "1761": {
      "op": "ISZERO"
    },
    "1762": {
      "op": "PUSH2",
      "value": "0x6ED"
    },
    "1765": {
      "op": "JUMPI"
    },
    "1766": {
      "op": "PUSH2",
      "value": "0x6ED"
    },
    "1769": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "1772": {
      "jump": "i",
      "op": "JUMP"
    },
    "1773": {
      "op": "JUMPDEST"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1776": {
      "op": "MLOAD"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1779": {
      "op": "DUP3"
    },
    "1780": {
      "op": "ADD"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1783": {
      "op": "NOT"
    },
    "1784": {
      "op": "SWAP1"
    },
    "1785": {
      "op": "DUP2"
    },
    "1786": {
      "op": "AND"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1789": {
      "op": "ADD"
    },
    "1790": {
      "op": "AND"
    },
    "1791": {
      "op": "DUP2"
    },
    "1792": {
      "op": "ADD"
    },
    "1793": {
      "op": "SWAP1"
    },
    "1794": {
      "op": "DUP4"
    },
    "1795": {
      "op": "DUP3"
    },
    "1796": {
      "op": "GT"
    },
    "1797": {
      "op": "DUP2"
    },
    "1798": {
      "op": "DUP4"
    },
    "1799": {
      "op": "LT"
    },
    "1800": {
      "op": "OR"
    },
    "1801": {
      "op": "ISZERO"
    },
    "1802": {
      "op": "PUSH2",
      "value": "0x715"
    },
    "1805": {
      "op": "JUMPI"
    },
    "1806": {
      "op": "PUSH2",
      "value": "0x715"
    },
    "1809": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "1812": {
      "jump": "i",
      "op": "JUMP"
    },
    "1813": {
      "op": "JUMPDEST"
    },
    "1814": {
      "op": "DUP2"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1817": {
      "op": "MSTORE"
    },
    "1818": {
      "op": "DUP3"
    },
    "1819": {
      "op": "DUP2"
    },
    "1820": {
      "op": "MSTORE"
    },
    "1821": {
      "op": "DUP11"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1824": {
      "op": "DUP5"
    },
    "1825": {
      "op": "DUP8"
    },
    "1826": {
      "op": "ADD"
    },
    "1827": {
      "op": "ADD"
    },
    "1828": {
      "op": "GT"
    },
    "1829": {
      "op": "ISZERO"
    },
    "1830": {
      "op": "PUSH2",
      "value": "0x72E"
    },
    "1833": {
      "op": "JUMPI"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1836": {
      "op": "DUP1"
    },
    "1837": {
      "op": "REVERT"
    },
    "1838": {
      "op": "JUMPDEST"
    },
    "1839": {
      "op": "DUP3"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1842": {
      "op": "DUP7"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1846": {
      "op": "DUP4"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "op": "CALLDATACOPY"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1853": {
      "op": "DUP5"
    },
    "1854": {
      "op": "DUP4"
    },
    "1855": {
      "op": "ADD"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "MSTORE"
    },
    "1858": {
      "op": "DUP1"
    },
    "1859": {
      "op": "SWAP6"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "op": "POP"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "op": "POP"
    },
    "1866": {
      "op": "SWAP3"
    },
    "1867": {
      "op": "SWAP6"
    },
    "1868": {
      "op": "SWAP2"
    },
    "1869": {
      "op": "SWAP5"
    },
    "1870": {
      "op": "POP"
    },
    "1871": {
      "op": "SWAP3"
    },
    "1872": {
      "op": "POP"
    },
    "1873": {
      "jump": "o",
      "op": "JUMP"
    },
    "1874": {
      "op": "JUMPDEST"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1877": {
      "op": "DUP1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1880": {
      "op": "DUP4"
    },
    "1881": {
      "op": "DUP6"
    },
    "1882": {
      "op": "SUB"
    },
    "1883": {
      "op": "SLT"
    },
    "1884": {
      "op": "ISZERO"
    },
    "1885": {
      "op": "PUSH2",
      "value": "0x765"
    },
    "1888": {
      "op": "JUMPI"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1891": {
      "op": "DUP1"
    },
    "1892": {
      "op": "REVERT"
    },
    "1893": {
      "op": "JUMPDEST"
    },
    "1894": {
      "op": "PUSH2",
      "value": "0x76E"
    },
    "1897": {
      "op": "DUP4"
    },
    "1898": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1901": {
      "jump": "i",
      "op": "JUMP"
    },
    "1902": {
      "op": "JUMPDEST"
    },
    "1903": {
      "op": "SWAP2"
    },
    "1904": {
      "op": "POP"
    },
    "1905": {
      "op": "PUSH2",
      "value": "0x77C"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1910": {
      "op": "DUP5"
    },
    "1911": {
      "op": "ADD"
    },
    "1912": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1915": {
      "jump": "i",
      "op": "JUMP"
    },
    "1916": {
      "op": "JUMPDEST"
    },
    "1917": {
      "op": "SWAP1"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "op": "SWAP3"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "op": "SWAP3"
    },
    "1922": {
      "op": "SWAP1"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "jump": "o",
      "op": "JUMP"
    },
    "1925": {
      "op": "JUMPDEST"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "DUP2"
    },
    "1929": {
      "op": "DUP2"
    },
    "1930": {
      "op": "SHR"
    },
    "1931": {
      "op": "SWAP1"
    },
    "1932": {
      "op": "DUP3"
    },
    "1933": {
      "op": "AND"
    },
    "1934": {
      "op": "DUP1"
    },
    "1935": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "1938": {
      "op": "JUMPI"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1941": {
      "op": "DUP3"
    },
    "1942": {
      "op": "AND"
    },
    "1943": {
      "op": "SWAP2"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "JUMPDEST"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1948": {
      "op": "DUP3"
    },
    "1949": {
      "op": "LT"
    },
    "1950": {
      "op": "DUP2"
    },
    "1951": {
      "op": "SUB"
    },
    "1952": {
      "op": "PUSH2",
      "value": "0x7B9"
    },
    "1955": {
      "op": "JUMPI"
    },
    "1956": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1963": {
      "op": "SHL"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1966": {
      "op": "MSTORE"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1971": {
      "op": "MSTORE"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1976": {
      "op": "REVERT"
    },
    "1977": {
      "op": "JUMPDEST"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "op": "SWAP2"
    },
    "1980": {
      "op": "SWAP1"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "jump": "o",
      "op": "JUMP"
    },
    "1983": {
      "op": "JUMPDEST"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1986": {
      "op": "DUP4"
    },
    "1987": {
      "op": "MLOAD"
    },
    "1988": {
      "op": "PUSH2",
      "value": "0x7D1"
    },
    "1991": {
      "op": "DUP2"
    },
    "1992": {
      "op": "DUP5"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1995": {
      "op": "DUP9"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "op": "PUSH2",
      "value": "0x50B"
    },
    "2000": {
      "jump": "i",
      "op": "JUMP"
    },
    "2001": {
      "op": "JUMPDEST"
    },
    "2002": {
      "op": "SWAP2"
    },
    "2003": {
      "op": "SWAP1"
    },
    "2004": {
      "op": "SWAP2"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "op": "SWAP2"
    },
    "2007": {
      "op": "DUP3"
    },
    "2008": {
      "op": "MSTORE"
    },
    "2009": {
      "op": "POP"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "SWAP2"
    },
    "2014": {
      "op": "SWAP1"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e9bb2c5171331dcd4271de41ec93a279b70e0d04",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\n\npragma solidity >=0.8.0;\n\nimport \"../interfaces/IERC721.sol\";\nimport \"../interfaces/extensions/IERC721Metadata.sol\";\nimport \"./utils/Context.sol\";\nimport \"./ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _tokenToOwnerMap;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Errors \n    error OperationNotAllowed();\n    error TempDisabled();\n\n    // No token approvals - This is for soulbound nft\n    // No mapping from owner to operator approvals\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     * It'll always be between 0 and 1. We'll limit single nft per address\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _tokenToOwnerMap[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     * - Change to reflect on-chain generative ASCII art \n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId)) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     * Implement this in EXPerience - Badge contract\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     * Restricted\n     */\n    function approve(address, uint256) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     * Restricted\n     */\n    function getApproved(uint256) public view virtual override returns (address) {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     * Restricted\n     */\n    function setApprovalForAll(address, bool) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     * Restricted\n     */\n    function isApprovedForAll(address, address) public view virtual override returns (bool) {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     * Restricted\n     */\n    function transferFrom(address, address, uint256) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     * Restricted\n     */\n    function safeTransferFrom(address, address, uint256) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     * Restricted\n     */\n    function safeTransferFrom(address, address, uint256, bytes memory) public virtual override {\n        revert OperationNotAllowed();\n    }\n\n    /**\n     * @dev These internal functions are not implemented as we don't need them right now.\n     * When Soul and Soul-Constellation expands, we will revisit these functions to allow certain capaibilties\n     * - Allow transfer only after certain period of time (temporary soulbound)\n     * - Ability to convert into soulbound if held long enough \n     * - much more coming from this paper: Decentralized Society: Finding Web3\u00e2\u20ac\u2122s Soul (By E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin)\n     */\n\n    // function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual;\n    // function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool);\n    // function _transfer(address from, address to, uint256 tokenId ) internal virtual;\n    // function _approve(address to, uint256 tokenId) internal virtual;\n    // function _setApprovalForAll(address owner, address operator, bool approved) internal virtual;\n\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _tokenToOwnerMap[tokenId] != address(0);\n    }\n\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _mint(to, tokenId);\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory\n    ) internal virtual {\n        _mint(to, tokenId);\n        // Could perform require(_checkOnERC721Received()) here,\n        // But it's left for future improvements \n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     * \n     * - We limit minting single NFT to single address here by adding a condition \n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n        require(_balances[to] == 0, \"ERC721: Only one EXPerienceViewer (NFT) per address\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _tokenToOwnerMap[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * \n     * - At the moment, let's not think about any burning mechanism\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256) internal virtual {\n        revert TempDisabled();\n        // address owner = ERC721.ownerOf(tokenId);\n\n        // _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // // Clear approvals\n        // _approve(address(0), tokenId);\n\n        // _balances[owner] -= 1;\n        // delete _owners[tokenId];\n\n        // emit Transfer(owner, address(0), tokenId);\n\n        // _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}",
  "sourceMap": "540:9823:1:-:0;;;1219:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1286:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1310:17:1;;;;:7;;:17;;;;;:::i;:::-;;1219:116;;540:9823;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;540:9823:1;;;-1:-1:-1;540:9823:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:9;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:9;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:9:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:9;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;540:9823:1;;;;;;",
  "sourcePath": "contracts/ERC721.sol",
  "type": "contract"
}