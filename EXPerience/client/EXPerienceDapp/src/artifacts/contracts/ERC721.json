{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/introspection/local/ERC165.sol",
    "10": "interfaces/IERC721.sol",
    "11": "interfaces/extensions/IERC721Metadata.sol",
    "12": "interfaces/introspection/local/IERC165.sol",
    "2": "contracts/introspection/local/ERC165Storage.sol",
    "4": "contracts/tokens/ERC721.sol",
    "6": "contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/tokens/ERC721.sol",
    "exportedSymbols": {
      "Context": [
        1771
      ],
      "ERC165": [
        1946
      ],
      "ERC165Storage": [
        1749
      ],
      "ERC721": [
        1287
      ],
      "IERC165": [
        1923
      ],
      "IERC721": [
        1884
      ],
      "IERC721Metadata": [
        1911
      ]
    },
    "id": 1288,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 511,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:24:4"
      },
      {
        "absolutePath": "interfaces/IERC721.sol",
        "file": "../../interfaces/IERC721.sol",
        "id": 512,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1288,
        "sourceUnit": 1885,
        "src": "133:38:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/extensions/IERC721Metadata.sol",
        "file": "../../interfaces/extensions/IERC721Metadata.sol",
        "id": 513,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1288,
        "sourceUnit": 1912,
        "src": "172:57:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 514,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1288,
        "sourceUnit": 1772,
        "src": "230:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/introspection/local/ERC165Storage.sol",
        "file": "../introspection/local/ERC165Storage.sol",
        "id": 515,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1288,
        "sourceUnit": 1750,
        "src": "261:50:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 517,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1771,
              "src": "579:7:4"
            },
            "id": 518,
            "nodeType": "InheritanceSpecifier",
            "src": "579:7:4"
          },
          {
            "baseName": {
              "id": 519,
              "name": "ERC165Storage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1749,
              "src": "588:13:4"
            },
            "id": 520,
            "nodeType": "InheritanceSpecifier",
            "src": "588:13:4"
          },
          {
            "baseName": {
              "id": 521,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1884,
              "src": "603:7:4"
            },
            "id": 522,
            "nodeType": "InheritanceSpecifier",
            "src": "603:7:4"
          },
          {
            "baseName": {
              "id": 523,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1911,
              "src": "612:15:4"
            },
            "id": 524,
            "nodeType": "InheritanceSpecifier",
            "src": "612:15:4"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 516,
          "nodeType": "StructuredDocumentation",
          "src": "313:246:4",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 1287,
        "linearizedBaseContracts": [
          1287,
          1911,
          1884,
          1749,
          1946,
          1923,
          1771
        ],
        "name": "ERC721",
        "nameLocation": "569:6:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 526,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "667:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 1287,
            "src": "652:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 525,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "652:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 528,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "714:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 1287,
            "src": "699:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 527,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "699:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 532,
            "mutability": "mutable",
            "name": "_tokenToOwnerMap",
            "nameLocation": "810:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 1287,
            "src": "774:52:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 531,
              "keyType": {
                "id": 529,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "782:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "774:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 530,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "793:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 536,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "913:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 1287,
            "src": "877:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 535,
              "keyType": {
                "id": 533,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "885:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "877:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 534,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 540,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1014:15:4",
            "nodeType": "VariableDeclaration",
            "scope": 1287,
            "src": "978:51:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 539,
              "keyType": {
                "id": 537,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "986:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "978:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 538,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "997:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 546,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1137:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 1287,
            "src": "1084:71:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 545,
              "keyType": {
                "id": 541,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1092:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1084:44:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 544,
                "keyType": {
                  "id": 542,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1111:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1103:24:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 543,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1122:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "1437:219:4",
              "statements": [
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 554,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "1447:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "1455:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1447:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:13:4"
                },
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 558,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "1470:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 559,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "1480:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1470:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:17:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 564,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "1565:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$1884_$",
                                "typeString": "type(contract IERC721)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$1884_$",
                                "typeString": "type(contract IERC721)"
                              }
                            ],
                            "id": 563,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1560:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1560:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1884",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1560:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 562,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1728,
                      "src": "1541:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:45:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:45:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 571,
                              "name": "IERC721Metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1911,
                              "src": "1620:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1911_$",
                                "typeString": "type(contract IERC721Metadata)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1911_$",
                                "typeString": "type(contract IERC721Metadata)"
                              }
                            ],
                            "id": 570,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1615:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1615:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1911",
                            "typeString": "type(contract IERC721Metadata)"
                          }
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1615:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 569,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1728,
                      "src": "1596:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:53:4"
                }
              ]
            },
            "documentation": {
              "id": 547,
              "nodeType": "StructuredDocumentation",
              "src": "1268:108:4",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 577,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1407:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "1393:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1428:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "1414:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1392:44:4"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1437:0:4"
            },
            "scope": 1287,
            "src": "1381:275:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1708
            ],
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "1829:60:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 589,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "1870:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 587,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1846:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721_$1287_$",
                          "typeString": "type(contract super ERC721)"
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1708,
                      "src": "1846:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 586,
                  "id": 591,
                  "nodeType": "Return",
                  "src": "1839:43:4"
                }
              ]
            },
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "1662:56:4",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1732:17:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 583,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 582,
                  "name": "ERC165Storage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1749,
                  "src": "1799:13:4"
                }
              ],
              "src": "1790:23:4"
            },
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1757:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "1750:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1749:20:4"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "1823:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1823:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1822:6:4"
            },
            "scope": 1287,
            "src": "1723:166:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1809
            ],
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "2104:123:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 603,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "2122:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2139:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2131:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 604,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2131:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2131:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2122:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2143:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        },
                        "value": "ERC721: address zero is not a valid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        }
                      ],
                      "id": 602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2114:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2114:73:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:73:4"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 612,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "2204:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 614,
                    "indexExpression": {
                      "id": 613,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "2214:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2204:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 601,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "2197:23:4"
                }
              ]
            },
            "documentation": {
              "id": 594,
              "nodeType": "StructuredDocumentation",
              "src": "1895:123:4",
              "text": " @dev See {IERC721-balanceOf}.\n It'll always be between 0 and 1. We'll limit single nft per address"
            },
            "functionSelector": "70a08231",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2032:9:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 598,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2077:8:4"
            },
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2050:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "2042:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2041:15:4"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "2095:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2095:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:9:4"
            },
            "scope": 1287,
            "src": "2023:204:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1817
            ],
            "body": {
              "id": 644,
              "nodeType": "Block",
              "src": "2365:163:4",
              "statements": [
                {
                  "assignments": [
                    627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2383:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 644,
                      "src": "2375:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 626,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2375:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 631,
                  "initialValue": {
                    "baseExpression": {
                      "id": 628,
                      "name": "_tokenToOwnerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "2391:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 630,
                    "indexExpression": {
                      "id": 629,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "2408:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2391:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2375:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 633,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 627,
                          "src": "2434:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2451:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2443:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 634,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2443:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2443:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2434:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2455:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2426:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2426:73:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "2426:73:4"
                },
                {
                  "expression": {
                    "id": 642,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 627,
                    "src": "2516:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 625,
                  "id": 643,
                  "nodeType": "Return",
                  "src": "2509:12:4"
                }
              ]
            },
            "documentation": {
              "id": 618,
              "nodeType": "StructuredDocumentation",
              "src": "2233:46:4",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2293:7:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 622,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2338:8:4"
            },
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2309:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "2301:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2300:17:4"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "2356:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2356:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2355:9:4"
            },
            "scope": 1287,
            "src": "2284:244:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1896
            ],
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "2659:29:4",
              "statements": [
                {
                  "expression": {
                    "id": 652,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 526,
                    "src": "2676:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 651,
                  "id": 653,
                  "nodeType": "Return",
                  "src": "2669:12:4"
                }
              ]
            },
            "documentation": {
              "id": 646,
              "nodeType": "StructuredDocumentation",
              "src": "2534:51:4",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2599:4:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 648,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2626:8:4"
            },
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:2:4"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "2644:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2644:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2643:15:4"
            },
            "scope": 1287,
            "src": "2590:98:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1902
            ],
            "body": {
              "id": 664,
              "nodeType": "Block",
              "src": "2823:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 662,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 528,
                    "src": "2840:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 661,
                  "id": 663,
                  "nodeType": "Return",
                  "src": "2833:14:4"
                }
              ]
            },
            "documentation": {
              "id": 656,
              "nodeType": "StructuredDocumentation",
              "src": "2694:53:4",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2761:6:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 658,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2790:8:4"
            },
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2767:2:4"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "2808:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2808:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2807:15:4"
            },
            "scope": 1287,
            "src": "2752:102:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1910
            ],
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "3066:230:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 676,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "3092:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 675,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1098,
                          "src": "3084:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3084:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3102:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 674,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3076:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:76:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "3076:76:4"
                },
                {
                  "assignments": [
                    682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 682,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3177:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 704,
                      "src": "3163:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 681,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3163:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 685,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 683,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "3187:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3187:10:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3163:34:4"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 688,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "3220:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3214:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 686,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3214:5:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3214:14:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3214:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3238:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3214:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3287:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3214:75:4",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 697,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "3266:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 698,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "3275:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 695,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3249:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3249:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3249:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3242:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3242:6:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3242:42:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 673,
                  "id": 703,
                  "nodeType": "Return",
                  "src": "3207:82:4"
                }
              ]
            },
            "documentation": {
              "id": 666,
              "nodeType": "StructuredDocumentation",
              "src": "2860:113:4",
              "text": " @dev See {IERC721Metadata-tokenURI}.\n - Change to reflect on-chain generative ASCII art "
            },
            "functionSelector": "c87b56dd",
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2987:8:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 670,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3033:8:4"
            },
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3004:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "2996:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2996:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2995:17:4"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "3051:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3051:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3050:15:4"
            },
            "scope": 1287,
            "src": "2978:318:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 713,
              "nodeType": "Block",
              "src": "3657:26:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3674:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 710,
                  "id": 712,
                  "nodeType": "Return",
                  "src": "3667:9:4"
                }
              ]
            },
            "documentation": {
              "id": 706,
              "nodeType": "StructuredDocumentation",
              "src": "3302:284:4",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts.\n Implement this in EXPerience - Badge contract"
            },
            "id": 714,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3600:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:2:4"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "3642:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3641:15:4"
            },
            "scope": 1287,
            "src": "3591:92:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1857
            ],
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "3913:331:4",
              "statements": [
                {
                  "assignments": [
                    724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3931:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 756,
                      "src": "3923:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 723,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3923:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 729,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 727,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "3954:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 725,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1287,
                        "src": "3939:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1287_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 645,
                      "src": "3939:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3939:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3923:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 731,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 717,
                          "src": "3980:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 732,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "3986:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3980:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3993:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3972:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3972:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "3972:57:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 738,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "4061:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4061:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 740,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "4077:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4061:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 743,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "4103:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 744,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1761,
                                "src": "4110:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4110:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 742,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "4086:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4086:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4061:62:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4137:58:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4040:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4040:165:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "4040:165:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 752,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "4225:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 753,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "4229:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 751,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "4216:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4216:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "4216:21:4"
                }
              ]
            },
            "documentation": {
              "id": 715,
              "nodeType": "StructuredDocumentation",
              "src": "3689:149:4",
              "text": " @dev See {IERC721-approve}.\n Should be overriden and restricted if what to implement soulbound properties \n of the NFT"
            },
            "functionSelector": "095ea7b3",
            "id": 757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3852:7:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 721,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3904:8:4"
            },
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3868:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3860:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3860:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3880:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3872:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3859:29:4"
            },
            "returnParameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3913:0:4"
            },
            "scope": 1287,
            "src": "3843:401:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1873
            ],
            "body": {
              "id": 777,
              "nodeType": "Block",
              "src": "4398:132:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 768,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "4424:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 767,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1098,
                          "src": "4416:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4416:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4434:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4408:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4408:73:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "4408:73:4"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 773,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "4499:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 775,
                    "indexExpression": {
                      "id": 774,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "4515:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4499:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 765,
                  "id": 776,
                  "nodeType": "Return",
                  "src": "4492:31:4"
                }
              ]
            },
            "documentation": {
              "id": 758,
              "nodeType": "StructuredDocumentation",
              "src": "4250:58:4",
              "text": " @dev See {IERC721-getApproved}.\n "
            },
            "functionSelector": "081812fc",
            "id": 778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4322:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 762,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4371:8:4"
            },
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4342:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "4334:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4333:17:4"
            },
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "4389:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4388:9:4"
            },
            "scope": 1287,
            "src": "4313:217:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1865
            ],
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "4681:69:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 788,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1761,
                          "src": "4710:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4710:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 790,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "4724:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 791,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "4734:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 787,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "4691:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4691:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "4691:52:4"
                }
              ]
            },
            "documentation": {
              "id": 779,
              "nodeType": "StructuredDocumentation",
              "src": "4536:56:4",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4606:17:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 785,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4672:8:4"
            },
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4632:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "4624:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4624:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4647:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "4642:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4642:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4623:33:4"
            },
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4681:0:4"
            },
            "scope": 1287,
            "src": "4597:153:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1883
            ],
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "4919:59:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 806,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "4936:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 808,
                      "indexExpression": {
                        "id": 807,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "4955:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4936:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 810,
                    "indexExpression": {
                      "id": 809,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "4962:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4936:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 805,
                  "id": 811,
                  "nodeType": "Return",
                  "src": "4929:42:4"
                }
              ]
            },
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "4756:55:4",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4825:16:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 802,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4895:8:4"
            },
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4850:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "4842:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4842:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4865:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "4857:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4857:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4841:33:4"
            },
            "returnParameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "4913:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4913:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4912:6:4"
            },
            "scope": 1287,
            "src": "4816:162:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1849
            ],
            "body": {
              "id": 839,
              "nodeType": "Block",
              "src": "5129:159:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 826,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "5166:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5166:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 828,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "5180:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 825,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 949,
                          "src": "5147:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5147:41:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5190:51:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5139:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5139:103:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 832,
                  "nodeType": "ExpressionStatement",
                  "src": "5139:103:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 834,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "5263:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 835,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "5269:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 836,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "5273:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 833,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1024,
                      "src": "5253:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5253:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 838,
                  "nodeType": "ExpressionStatement",
                  "src": "5253:28:4"
                }
              ]
            },
            "documentation": {
              "id": 814,
              "nodeType": "StructuredDocumentation",
              "src": "4984:51:4",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5049:12:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 822,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5120:8:4"
            },
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5070:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "5062:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5062:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5084:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "5076:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5076:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5096:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "5088:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5088:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5061:43:4"
            },
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5129:0:4"
            },
            "scope": 1287,
            "src": "5040:248:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1839
            ],
            "body": {
              "id": 858,
              "nodeType": "Block",
              "src": "5447:56:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 852,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "5474:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 853,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "5480:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 854,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "5484:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5493:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 851,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        859,
                        889
                      ],
                      "referencedDeclaration": 889,
                      "src": "5457:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5457:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "5457:39:4"
                }
              ]
            },
            "documentation": {
              "id": 841,
              "nodeType": "StructuredDocumentation",
              "src": "5294:55:4",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5363:16:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 849,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5438:8:4"
            },
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5388:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "5380:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5380:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5402:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "5394:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5414:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "5406:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5406:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5379:43:4"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5447:0:4"
            },
            "scope": 1287,
            "src": "5354:149:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1829
            ],
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "5681:169:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 874,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "5719:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5719:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 876,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "5733:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 873,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 949,
                          "src": "5700:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5700:41:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5743:51:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5692:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5692:103:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "5692:103:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 882,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "5819:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 883,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "5825:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 884,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "5829:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 885,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 868,
                        "src": "5838:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 881,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "5805:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5805:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 887,
                  "nodeType": "ExpressionStatement",
                  "src": "5805:38:4"
                }
              ]
            },
            "documentation": {
              "id": 860,
              "nodeType": "StructuredDocumentation",
              "src": "5509:55:4",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5578:16:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 870,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5672:8:4"
            },
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5603:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "5595:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5617:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "5609:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5609:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5629:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "5621:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5621:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5651:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "5638:17:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5638:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5594:62:4"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5681:0:4"
            },
            "scope": 1287,
            "src": "5569:281:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "8188:167:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 902,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "8208:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 903,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "8214:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 904,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "8218:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 901,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1024,
                      "src": "8198:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8198:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "8198:28:4"
                }
              ]
            },
            "documentation": {
              "id": 890,
              "nodeType": "StructuredDocumentation",
              "src": "7193:850:4",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "8057:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8088:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "8080:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8080:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8110:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "8102:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8102:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8130:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "8122:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8122:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8160:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "8147:17:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8147:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8070:100:4"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8188:0:4"
            },
            "scope": 1287,
            "src": "8048:307:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 948,
              "nodeType": "Block",
              "src": "8612:245:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 920,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 913,
                            "src": "8638:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 919,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1098,
                          "src": "8630:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8630:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8648:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8622:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8622:73:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "8622:73:4"
                },
                {
                  "assignments": [
                    926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 926,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8713:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 948,
                      "src": "8705:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 925,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8705:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 931,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 929,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "8736:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 927,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1287,
                        "src": "8721:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1287_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 645,
                      "src": "8721:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8721:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8705:39:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 932,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 911,
                              "src": "8762:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 933,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "8773:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8762:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 936,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 926,
                                "src": "8799:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 937,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 911,
                                "src": "8806:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 935,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "8782:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8782:32:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8762:52:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 941,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 913,
                                "src": "8830:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 940,
                              "name": "getApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "8818:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8818:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 943,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "8842:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8818:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8762:87:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 946,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8761:89:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 917,
                  "id": 947,
                  "nodeType": "Return",
                  "src": "8754:96:4"
                }
              ]
            },
            "documentation": {
              "id": 909,
              "nodeType": "StructuredDocumentation",
              "src": "8361:147:4",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "8522:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8549:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "8541:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8541:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8566:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "8558:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8558:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8540:34:4"
            },
            "returnParameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "8606:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8606:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8605:6:4"
            },
            "scope": 1287,
            "src": "8513:344:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1023,
              "nodeType": "Block",
              "src": "9290:505:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 962,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "9323:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 960,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1287,
                              "src": "9308:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1287_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 645,
                            "src": "9308:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9308:23:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 964,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 952,
                          "src": "9335:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9308:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9341:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9300:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9300:81:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 968,
                  "nodeType": "ExpressionStatement",
                  "src": "9300:81:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 970,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 954,
                          "src": "9399:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9413:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9405:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 971,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9405:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9405:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9399:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9417:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9391:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9391:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "9391:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 980,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "9488:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 981,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "9494:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 982,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "9498:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 979,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "9467:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9467:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "9467:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9585:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9577:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 986,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9577:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9577:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 990,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "9589:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 985,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "9568:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9568:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "9568:29:4"
                },
                {
                  "expression": {
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 993,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "9608:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 995,
                      "indexExpression": {
                        "id": 994,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "9618:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9608:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9627:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9608:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 998,
                  "nodeType": "ExpressionStatement",
                  "src": "9608:20:4"
                },
                {
                  "expression": {
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 999,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "9638:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1001,
                      "indexExpression": {
                        "id": 1000,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "9648:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9638:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9655:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9638:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "9638:18:4"
                },
                {
                  "expression": {
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1005,
                        "name": "_tokenToOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "9666:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1007,
                      "indexExpression": {
                        "id": 1006,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "9683:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9666:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1008,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "9694:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9666:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "9666:30:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1012,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "9721:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1013,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "9727:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1014,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "9731:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1011,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1783,
                      "src": "9712:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9712:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1016,
                  "nodeType": "EmitStatement",
                  "src": "9707:32:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1018,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "9770:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1019,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "9776:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1020,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "9780:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1017,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "9750:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9750:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "9750:38:4"
                }
              ]
            },
            "documentation": {
              "id": 950,
              "nodeType": "StructuredDocumentation",
              "src": "8863:313:4",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "9190:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 952,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9217:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1024,
                  "src": "9209:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9209:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9239:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1024,
                  "src": "9231:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9231:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9259:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1024,
                  "src": "9251:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9251:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9199:73:4"
            },
            "returnParameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9290:0:4"
            },
            "scope": 1287,
            "src": "9181:614:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1047,
              "nodeType": "Block",
              "src": "9971:107:4",
              "statements": [
                {
                  "expression": {
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1032,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "9981:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1034,
                      "indexExpression": {
                        "id": 1033,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "9997:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9981:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1035,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "10008:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9981:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "9981:29:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1041,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "10049:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1039,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1287,
                            "src": "10034:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1287_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 645,
                          "src": "10034:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10034:23:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1043,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "10059:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1044,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "10063:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1038,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1792,
                      "src": "10025:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10025:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1046,
                  "nodeType": "EmitStatement",
                  "src": "10020:51:4"
                }
              ]
            },
            "documentation": {
              "id": 1025,
              "nodeType": "StructuredDocumentation",
              "src": "9801:101:4",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
            },
            "id": 1048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "9916:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9933:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "9925:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9925:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9945:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "9937:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9937:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9924:29:4"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9971:0:4"
            },
            "scope": 1287,
            "src": "9907:171:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1079,
              "nodeType": "Block",
              "src": "10337:184:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1059,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1051,
                          "src": "10355:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1060,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1053,
                          "src": "10364:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10355:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10374:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 1058,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10347:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10347:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1064,
                  "nodeType": "ExpressionStatement",
                  "src": "10347:55:4"
                },
                {
                  "expression": {
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1065,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "10412:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1068,
                        "indexExpression": {
                          "id": 1066,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1051,
                          "src": "10431:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10412:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1069,
                      "indexExpression": {
                        "id": 1067,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "10438:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10412:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1070,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1055,
                      "src": "10450:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10412:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "10412:46:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1074,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "10488:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1075,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "10495:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1076,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "10505:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1073,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1801,
                      "src": "10473:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10473:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "EmitStatement",
                  "src": "10468:46:4"
                }
              ]
            },
            "documentation": {
              "id": 1049,
              "nodeType": "StructuredDocumentation",
              "src": "10084:125:4",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
            },
            "id": 1080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "10223:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1051,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10259:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "10251:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10251:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10282:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "10274:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10274:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1055,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "10305:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "10300:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10300:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10241:78:4"
            },
            "returnParameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10337:0:4"
            },
            "scope": 1287,
            "src": "10214:307:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1097,
              "nodeType": "Block",
              "src": "11011:63:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1088,
                        "name": "_tokenToOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "11028:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1090,
                      "indexExpression": {
                        "id": 1089,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "11045:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11028:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11065:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11057:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11057:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11057:10:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11028:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1087,
                  "id": 1096,
                  "nodeType": "Return",
                  "src": "11021:46:4"
                }
              ]
            },
            "documentation": {
              "id": 1081,
              "nodeType": "StructuredDocumentation",
              "src": "10643:292:4",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 1098,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "10949:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10965:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "10957:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10957:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10956:17:4"
            },
            "returnParameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "11005:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11005:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11004:6:4"
            },
            "scope": 1287,
            "src": "10940:134:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1112,
              "nodeType": "Block",
              "src": "11470:43:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1107,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "11490:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1108,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1103,
                        "src": "11494:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11503:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1106,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1113,
                        1129
                      ],
                      "referencedDeclaration": 1129,
                      "src": "11480:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11480:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "11480:26:4"
                }
              ]
            },
            "documentation": {
              "id": 1099,
              "nodeType": "StructuredDocumentation",
              "src": "11081:319:4",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "11414:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1101,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11432:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "11424:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11424:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1103,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11444:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "11436:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11436:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11423:29:4"
            },
            "returnParameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11470:0:4"
            },
            "scope": 1287,
            "src": "11405:108:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1128,
              "nodeType": "Block",
              "src": "11843:150:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1124,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "11859:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1125,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "11863:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1123,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1204,
                      "src": "11853:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11853:18:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "11853:18:4"
                }
              ]
            },
            "documentation": {
              "id": 1114,
              "nodeType": "StructuredDocumentation",
              "src": "11519:210:4",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 1129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "11743:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1116,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11770:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "11762:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11762:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11790:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "11782:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11782:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "11807:12:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11807:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11752:73:4"
            },
            "returnParameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11843:0:4"
            },
            "scope": 1287,
            "src": "11734:259:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1203,
              "nodeType": "Block",
              "src": "12467:467:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1138,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "12485:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12499:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12491:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1139,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12491:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12491:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12485:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12503:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 1137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12477:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12477:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "12477:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12556:17:4",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1149,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "12565:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1148,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "12557:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12557:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12575:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 1147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12548:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12548:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1154,
                  "nodeType": "ExpressionStatement",
                  "src": "12548:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1156,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "12624:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1158,
                          "indexExpression": {
                            "id": 1157,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "12634:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12624:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12641:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12624:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a204f6e6c79206f6e6520455850657269656e636556696577657220284e465429207065722061646472657373",
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12644:53:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dc797a71e690c6a35d6c1fecba8a348b39e099b3f3c0d58423fda3fcc4bc75c",
                          "typeString": "literal_string \"ERC721: Only one EXPerienceViewer (NFT) per address\""
                        },
                        "value": "ERC721: Only one EXPerienceViewer (NFT) per address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dc797a71e690c6a35d6c1fecba8a348b39e099b3f3c0d58423fda3fcc4bc75c",
                          "typeString": "literal_string \"ERC721: Only one EXPerienceViewer (NFT) per address\""
                        }
                      ],
                      "id": 1155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12616:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12616:82:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "12616:82:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12738:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12730:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1165,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12730:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12730:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1169,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "12742:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1170,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "12746:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1164,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "12709:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12709:45:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "12709:45:4"
                },
                {
                  "expression": {
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1173,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "12765:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1175,
                      "indexExpression": {
                        "id": 1174,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "12775:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12765:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12782:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12765:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1178,
                  "nodeType": "ExpressionStatement",
                  "src": "12765:18:4"
                },
                {
                  "expression": {
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1179,
                        "name": "_tokenToOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "12793:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1181,
                      "indexExpression": {
                        "id": 1180,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "12810:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12793:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1182,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "12821:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12793:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "12793:30:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12856:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12848:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12848:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12848:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1190,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "12860:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1191,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "12864:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1185,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1783,
                      "src": "12839:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12839:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "EmitStatement",
                  "src": "12834:38:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12911:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12903:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12903:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12903:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1199,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "12915:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1200,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "12919:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1194,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "12883:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12883:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1202,
                  "nodeType": "ExpressionStatement",
                  "src": "12883:44:4"
                }
              ]
            },
            "documentation": {
              "id": 1130,
              "nodeType": "StructuredDocumentation",
              "src": "11999:402:4",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n \n - We limit minting single NFT to single address here by adding a condition \n Emits a {Transfer} event."
            },
            "id": 1204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "12415:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12429:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1204,
                  "src": "12421:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12421:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12441:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1204,
                  "src": "12433:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12433:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12420:29:4"
            },
            "returnParameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12467:0:4"
            },
            "scope": 1287,
            "src": "12406:528:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1263,
              "nodeType": "Block",
              "src": "13276:366:4",
              "statements": [
                {
                  "assignments": [
                    1211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1211,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "13294:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1263,
                      "src": "13286:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1210,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13286:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1216,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1214,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "13317:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1212,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1287,
                        "src": "13302:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1287_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 645,
                      "src": "13302:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13302:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13286:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1218,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1211,
                        "src": "13357:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13372:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13364:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13364:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13364:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1223,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "13376:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1217,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "13336:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13336:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "13336:48:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13439:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13431:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1227,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13431:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13431:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1231,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "13443:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1226,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "13422:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13422:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "13422:29:4"
                },
                {
                  "expression": {
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1234,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "13462:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1236,
                      "indexExpression": {
                        "id": 1235,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1211,
                        "src": "13472:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13462:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13482:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13462:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "13462:21:4"
                },
                {
                  "expression": {
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "13493:32:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1240,
                        "name": "_tokenToOwnerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "13500:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1242,
                      "indexExpression": {
                        "id": 1241,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "13517:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13500:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1244,
                  "nodeType": "ExpressionStatement",
                  "src": "13493:32:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1246,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1211,
                        "src": "13550:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13565:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13557:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1247,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13557:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13557:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1251,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "13569:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1245,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1783,
                      "src": "13541:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13541:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "EmitStatement",
                  "src": "13536:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1255,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1211,
                        "src": "13608:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13623:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13615:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13615:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13615:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1260,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "13627:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1254,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "13588:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13588:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "13588:47:4"
                }
              ]
            },
            "documentation": {
              "id": 1205,
              "nodeType": "StructuredDocumentation",
              "src": "12940:282:4",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n \n - At the moment, let's not think about any burning mechanism\n Emits a {Transfer} event."
            },
            "id": 1264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "13236:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13250:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "13242:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13242:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13241:17:4"
            },
            "returnParameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13276:0:4"
            },
            "scope": 1287,
            "src": "13227:415:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1274,
              "nodeType": "Block",
              "src": "14318:2:4",
              "statements": []
            },
            "documentation": {
              "id": 1265,
              "nodeType": "StructuredDocumentation",
              "src": "13648:545:4",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "14207:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14245:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "14237:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14237:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1269,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14267:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "14259:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14259:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14287:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "14279:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14279:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14227:73:4"
            },
            "returnParameters": {
              "id": 1273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14318:0:4"
            },
            "scope": 1287,
            "src": "14198:122:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1285,
              "nodeType": "Block",
              "src": "14811:2:4",
              "statements": []
            },
            "documentation": {
              "id": 1276,
              "nodeType": "StructuredDocumentation",
              "src": "14326:361:4",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "14701:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14738:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1286,
                  "src": "14730:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14730:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14760:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1286,
                  "src": "14752:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14752:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14780:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1286,
                  "src": "14772:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14772:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14720:73:4"
            },
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14811:0:4"
            },
            "scope": 1287,
            "src": "14692:121:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1288,
        "src": "560:14255:4",
        "usedErrors": []
      }
    ],
    "src": "107:14708:4"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200121038038062001210833981016040819052620000349162000283565b81516200004990600190602085019062000110565b5080516200005f90600290602084019062000110565b50620000726380ac58cd60e01b6200008c565b62000084635b5e139f60e01b6200008c565b505062000329565b6001600160e01b03198082169003620000eb5760405162461bcd60e51b815260206004820152601b60248201527f4552433136353a20496e76616c696420496e7465726661636549440000000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b8280546200011e90620002ed565b90600052602060002090601f0160209004810192826200014257600085556200018d565b82601f106200015d57805160ff19168380011785556200018d565b828001600101855582156200018d579182015b828111156200018d57825182559160200191906001019062000170565b506200019b9291506200019f565b5090565b5b808211156200019b5760008155600101620001a0565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001de57600080fd5b81516001600160401b0380821115620001fb57620001fb620001b6565b604051601f8301601f19908116603f01168101908282118183101715620002265762000226620001b6565b816040528381526020925086838588010111156200024357600080fd5b600091505b8382101562000267578582018301518183018401529082019062000248565b83821115620002795760008385830101525b9695505050505050565b600080604083850312156200029757600080fd5b82516001600160401b0380821115620002af57600080fd5b620002bd86838701620001cc565b93506020850151915080821115620002d457600080fd5b50620002e385828601620001cc565b9150509250929050565b600181811c908216806200030257607f821691505b6020821081036200032357634e487b7160e01b600052602260045260246000fd5b50919050565b610ed780620003396000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610b0f565b610228565b60405190151581526020015b60405180910390f35b610104610239565b6040516100f39190610b65565b61012461011f366004610b98565b6102cb565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610bcd565b610365565b005b61014f61015f366004610bf7565b61047a565b61014f610172366004610bf7565b6104ab565b610124610185366004610b98565b6104c6565b61019d610198366004610c33565b61053d565b6040519081526020016100f3565b6101046105c3565b61014f6101c1366004610c4e565b6105d2565b61014f6101d4366004610ca0565b6105e1565b6101046101e7366004610b98565b610619565b6100e76101fa366004610d7c565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6000610233826106f9565b92915050565b60606001805461024890610daf565b80601f016020809104026020016040519081016040528092919081815260200182805461027490610daf565b80156102c15780601f10610296576101008083540402835291602001916102c1565b820191906000526020600020905b8154815290600101906020018083116102a457829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b03166103495760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b6000610370826104c6565b9050806001600160a01b0316836001600160a01b0316036103dd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610340565b336001600160a01b03821614806103f957506103f981336101fa565b61046b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610340565b6104758383610735565b505050565b61048433826107a3565b6104a05760405162461bcd60e51b815260040161034090610de9565b61047583838361089a565b610475838383604051806020016040528060008152506105e1565b6000818152600360205260408120546001600160a01b0316806102335760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610340565b60006001600160a01b0382166105a75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610340565b506001600160a01b031660009081526004602052604090205490565b60606002805461024890610daf565b6105dd338383610a36565b5050565b6105eb33836107a3565b6106075760405162461bcd60e51b815260040161034090610de9565b61061384848484610b04565b50505050565b6000818152600360205260409020546060906001600160a01b03166106985760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610340565b60006106af60408051602081019091526000815290565b905060008151116106cf57604051806020016040528060008152506106f2565b80836040516020016106e2929190610e3a565b6040516020818303038152906040525b9392505050565b60006301ffc9a760e01b6001600160e01b0319831614806102335750506001600160e01b03191660009081526020819052604090205460ff1690565b600081815260056020526040902080546001600160a01b0319166001600160a01b038416908117909155819061076a826104c6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600360205260408120546001600160a01b031661081c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610340565b6000610827836104c6565b9050806001600160a01b0316846001600160a01b0316148061086e57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b806108925750836001600160a01b0316610887846102cb565b6001600160a01b0316145b949350505050565b826001600160a01b03166108ad826104c6565b6001600160a01b0316146109115760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610340565b6001600160a01b0382166109735760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610340565b61097e600082610735565b6001600160a01b03831660009081526004602052604081208054600192906109a7908490610e72565b90915550506001600160a01b03821660009081526004602052604081208054600192906109d5908490610e89565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610a975760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610340565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61061384848461089a565b600060208284031215610b2157600080fd5b81356001600160e01b0319811681146106f257600080fd5b60005b83811015610b54578181015183820152602001610b3c565b838111156106135750506000910152565b6020815260008251806020840152610b84816040850160208701610b39565b601f01601f19169190910160400192915050565b600060208284031215610baa57600080fd5b5035919050565b80356001600160a01b0381168114610bc857600080fd5b919050565b60008060408385031215610be057600080fd5b610be983610bb1565b946020939093013593505050565b600080600060608486031215610c0c57600080fd5b610c1584610bb1565b9250610c2360208501610bb1565b9150604084013590509250925092565b600060208284031215610c4557600080fd5b6106f282610bb1565b60008060408385031215610c6157600080fd5b610c6a83610bb1565b915060208301358015158114610c7f57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610cb657600080fd5b610cbf85610bb1565b9350610ccd60208601610bb1565b925060408501359150606085013567ffffffffffffffff80821115610cf157600080fd5b818701915087601f830112610d0557600080fd5b813581811115610d1757610d17610c8a565b604051601f8201601f19908116603f01168101908382118183101715610d3f57610d3f610c8a565b816040528281528a6020848701011115610d5857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610d8f57600080fd5b610d9883610bb1565b9150610da660208401610bb1565b90509250929050565b600181811c90821680610dc357607f821691505b602082108103610de357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351610e4c818460208801610b39565b9190910191825250602001919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610e8457610e84610e5c565b500390565b60008219821115610e9c57610e9c610e5c565b50019056fea26469706673582212205ef6f078dcf111b0490d9c307f620b2e496d81343aa91947a309c7e9bb4ec1b664736f6c634300080d0033",
  "bytecodeSha1": "ec3c25bdcc0c3dfc66a759c77cc9751b86cbf79c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "2": {},
      "4": {
        "ERC721._setApprovalForAll": {
          "49": [
            10355,
            10372,
            true
          ]
        },
        "ERC721._transfer": {
          "47": [
            9308,
            9339,
            true
          ],
          "48": [
            9399,
            9415,
            true
          ]
        },
        "ERC721.approve": {
          "40": [
            3980,
            3991,
            true
          ],
          "41": [
            4061,
            4082,
            true
          ],
          "42": [
            4086,
            4123,
            true
          ]
        },
        "ERC721.balanceOf": {
          "44": [
            2122,
            2141,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "45": [
            5700,
            5741,
            true
          ]
        },
        "ERC721.tokenURI": {
          "46": [
            3214,
            3239,
            true
          ]
        },
        "ERC721.transferFrom": {
          "43": [
            5147,
            5188,
            true
          ]
        }
      },
      "6": {}
    },
    "statements": {
      "1": {
        "ERC165.supportsInterface": {
          "23": [
            654,
            701
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "2": {
        "ERC165Storage.supportsInterface": {
          "24": [
            1192,
            1272
          ]
        }
      },
      "4": {
        "ERC721._approve": {
          "25": [
            9981,
            10010
          ],
          "26": [
            10020,
            10071
          ]
        },
        "ERC721._baseURI": {
          "21": [
            3667,
            3676
          ]
        },
        "ERC721._exists": {
          "3": [
            11021,
            11067
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "27": [
            8622,
            8695
          ],
          "28": [
            8754,
            8850
          ]
        },
        "ERC721._safeTransfer": {
          "39": [
            8198,
            8226
          ]
        },
        "ERC721._setApprovalForAll": {
          "36": [
            10347,
            10402
          ],
          "37": [
            10412,
            10458
          ],
          "38": [
            10468,
            10514
          ]
        },
        "ERC721._transfer": {
          "29": [
            9300,
            9381
          ],
          "30": [
            9391,
            9456
          ],
          "31": [
            9568,
            9597
          ],
          "32": [
            9608,
            9628
          ],
          "33": [
            9638,
            9656
          ],
          "34": [
            9666,
            9696
          ],
          "35": [
            9707,
            9739
          ]
        },
        "ERC721.approve": {
          "6": [
            3972,
            4029
          ],
          "8": [
            4040,
            4205
          ],
          "9": [
            4216,
            4237
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            2114,
            2187
          ],
          "15": [
            2197,
            2220
          ]
        },
        "ERC721.getApproved": {
          "4": [
            4408,
            4481
          ],
          "5": [
            4492,
            4523
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4929,
            4971
          ]
        },
        "ERC721.name": {
          "2": [
            2669,
            2681
          ]
        },
        "ERC721.ownerOf": {
          "13": [
            2426,
            2499
          ]
        },
        "ERC721.safeTransferFrom": {
          "12": [
            5457,
            5496
          ],
          "18": [
            5692,
            5795
          ],
          "19": [
            5805,
            5843
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            4691,
            4743
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1839,
            1882
          ]
        },
        "ERC721.symbol": {
          "16": [
            2833,
            2847
          ]
        },
        "ERC721.tokenURI": {
          "20": [
            3076,
            3152
          ],
          "22": [
            3207,
            3289
          ]
        },
        "ERC721.transferFrom": {
          "10": [
            5139,
            5242
          ],
          "11": [
            5253,
            5281
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "7": [
            730,
            747
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC165Storage",
    "IERC165",
    "IERC721",
    "IERC721Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610b0f565b610228565b60405190151581526020015b60405180910390f35b610104610239565b6040516100f39190610b65565b61012461011f366004610b98565b6102cb565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610bcd565b610365565b005b61014f61015f366004610bf7565b61047a565b61014f610172366004610bf7565b6104ab565b610124610185366004610b98565b6104c6565b61019d610198366004610c33565b61053d565b6040519081526020016100f3565b6101046105c3565b61014f6101c1366004610c4e565b6105d2565b61014f6101d4366004610ca0565b6105e1565b6101046101e7366004610b98565b610619565b6100e76101fa366004610d7c565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6000610233826106f9565b92915050565b60606001805461024890610daf565b80601f016020809104026020016040519081016040528092919081815260200182805461027490610daf565b80156102c15780601f10610296576101008083540402835291602001916102c1565b820191906000526020600020905b8154815290600101906020018083116102a457829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b03166103495760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b6000610370826104c6565b9050806001600160a01b0316836001600160a01b0316036103dd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610340565b336001600160a01b03821614806103f957506103f981336101fa565b61046b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610340565b6104758383610735565b505050565b61048433826107a3565b6104a05760405162461bcd60e51b815260040161034090610de9565b61047583838361089a565b610475838383604051806020016040528060008152506105e1565b6000818152600360205260408120546001600160a01b0316806102335760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610340565b60006001600160a01b0382166105a75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610340565b506001600160a01b031660009081526004602052604090205490565b60606002805461024890610daf565b6105dd338383610a36565b5050565b6105eb33836107a3565b6106075760405162461bcd60e51b815260040161034090610de9565b61061384848484610b04565b50505050565b6000818152600360205260409020546060906001600160a01b03166106985760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610340565b60006106af60408051602081019091526000815290565b905060008151116106cf57604051806020016040528060008152506106f2565b80836040516020016106e2929190610e3a565b6040516020818303038152906040525b9392505050565b60006301ffc9a760e01b6001600160e01b0319831614806102335750506001600160e01b03191660009081526020819052604090205460ff1690565b600081815260056020526040902080546001600160a01b0319166001600160a01b038416908117909155819061076a826104c6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600360205260408120546001600160a01b031661081c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610340565b6000610827836104c6565b9050806001600160a01b0316846001600160a01b0316148061086e57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b806108925750836001600160a01b0316610887846102cb565b6001600160a01b0316145b949350505050565b826001600160a01b03166108ad826104c6565b6001600160a01b0316146109115760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610340565b6001600160a01b0382166109735760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610340565b61097e600082610735565b6001600160a01b03831660009081526004602052604081208054600192906109a7908490610e72565b90915550506001600160a01b03821660009081526004602052604081208054600192906109d5908490610e89565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610a975760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610340565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61061384848461089a565b600060208284031215610b2157600080fd5b81356001600160e01b0319811681146106f257600080fd5b60005b83811015610b54578181015183820152602001610b3c565b838111156106135750506000910152565b6020815260008251806020840152610b84816040850160208701610b39565b601f01601f19169190910160400192915050565b600060208284031215610baa57600080fd5b5035919050565b80356001600160a01b0381168114610bc857600080fd5b919050565b60008060408385031215610be057600080fd5b610be983610bb1565b946020939093013593505050565b600080600060608486031215610c0c57600080fd5b610c1584610bb1565b9250610c2360208501610bb1565b9150604084013590509250925092565b600060208284031215610c4557600080fd5b6106f282610bb1565b60008060408385031215610c6157600080fd5b610c6a83610bb1565b915060208301358015158114610c7f57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610cb657600080fd5b610cbf85610bb1565b9350610ccd60208601610bb1565b925060408501359150606085013567ffffffffffffffff80821115610cf157600080fd5b818701915087601f830112610d0557600080fd5b813581811115610d1757610d17610c8a565b604051601f8201601f19908116603f01168101908382118183101715610d3f57610d3f610c8a565b816040528281528a6020848701011115610d5857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610d8f57600080fd5b610d9883610bb1565b9150610da660208401610bb1565b90509250929050565b600181811c90821680610dc357607f821691505b602082108103610de357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351610e4c818460208801610b39565b9190910191825250602001919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610e8457610e84610e5c565b500390565b60008219821115610e9c57610e9c610e5c565b50019056fea26469706673582212205ef6f078dcf111b0490d9c307f620b2e496d81343aa91947a309c7e9bb4ec1b664736f6c634300080d0033",
  "deployedSourceMap": "560:14255:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1723:166;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;1723:166:4;;;;;;;;2590:98;;;:::i;:::-;;;;;;;:::i;4313:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1497:32:13;;;1479:51;;1467:2;1452:18;4313:217:4;1333:203:13;3843:401:4;;;;;;:::i;:::-;;:::i;:::-;;5040:248;;;;;;:::i;:::-;;:::i;5354:149::-;;;;;;:::i;:::-;;:::i;2284:244::-;;;;;;:::i;:::-;;:::i;2023:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2648:25:13;;;2636:2;2621:18;2023:204:4;2502:177:13;2752:102:4;;;:::i;4597:153::-;;;;;;:::i;:::-;;:::i;5569:281::-;;;;;;:::i;:::-;;:::i;2978:318::-;;;;;;:::i;:::-;;:::i;4816:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4936:25:4;;;4913:4;4936:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4816:162;1723:166;1823:4;1846:36;1870:11;1846:23;:36::i;:::-;1839:43;1723:166;-1:-1:-1;;1723:166:4:o;2590:98::-;2644:13;2676:5;2669:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2590:98;:::o;4313:217::-;4389:7;11028:25;;;:16;:25;;;;;;-1:-1:-1;;;;;11028:25:4;4408:73;;;;-1:-1:-1;;;4408:73:4;;5163:2:13;4408:73:4;;;5145:21:13;5202:2;5182:18;;;5175:30;5241:34;5221:18;;;5214:62;-1:-1:-1;;;5292:18:13;;;5285:42;5344:19;;4408:73:4;;;;;;;;;-1:-1:-1;4499:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4499:24:4;;4313:217::o;3843:401::-;3923:13;3939:23;3954:7;3939:14;:23::i;:::-;3923:39;;3986:5;-1:-1:-1;;;;;3980:11:4;:2;-1:-1:-1;;;;;3980:11:4;;3972:57;;;;-1:-1:-1;;;3972:57:4;;5576:2:13;3972:57:4;;;5558:21:13;5615:2;5595:18;;;5588:30;5654:34;5634:18;;;5627:62;-1:-1:-1;;;5705:18:13;;;5698:31;5746:19;;3972:57:4;5374:397:13;3972:57:4;737:10:6;-1:-1:-1;;;;;4061:21:4;;;;:62;;-1:-1:-1;4086:37:4;4103:5;737:10:6;4816:162:4;:::i;4086:37::-;4040:165;;;;-1:-1:-1;;;4040:165:4;;5978:2:13;4040:165:4;;;5960:21:13;6017:2;5997:18;;;5990:30;6056:34;6036:18;;;6029:62;6127:26;6107:18;;;6100:54;6171:19;;4040:165:4;5776:420:13;4040:165:4;4216:21;4225:2;4229:7;4216:8;:21::i;:::-;3913:331;3843:401;;:::o;5040:248::-;5147:41;737:10:6;5180:7:4;5147:18;:41::i;:::-;5139:103;;;;-1:-1:-1;;;5139:103:4;;;;;;;:::i;:::-;5253:28;5263:4;5269:2;5273:7;5253:9;:28::i;5354:149::-;5457:39;5474:4;5480:2;5484:7;5457:39;;;;;;;;;;;;:16;:39::i;2284:244::-;2356:7;2391:25;;;:16;:25;;;;;;-1:-1:-1;;;;;2391:25:4;;2426:73;;;;-1:-1:-1;;;2426:73:4;;6821:2:13;2426:73:4;;;6803:21:13;6860:2;6840:18;;;6833:30;6899:34;6879:18;;;6872:62;-1:-1:-1;;;6950:18:13;;;6943:39;6999:19;;2426:73:4;6619:405:13;2023:204:4;2095:7;-1:-1:-1;;;;;2122:19:4;;2114:73;;;;-1:-1:-1;;;2114:73:4;;7231:2:13;2114:73:4;;;7213:21:13;7270:2;7250:18;;;7243:30;7309:34;7289:18;;;7282:62;-1:-1:-1;;;7360:18:13;;;7353:39;7409:19;;2114:73:4;7029:405:13;2114:73:4;-1:-1:-1;;;;;;2204:16:4;;;;;:9;:16;;;;;;;2023:204::o;2752:102::-;2808:13;2840:7;2833:14;;;;;:::i;4597:153::-;4691:52;737:10:6;4724:8:4;4734;4691:18;:52::i;:::-;4597:153;;:::o;5569:281::-;5700:41;737:10:6;5733:7:4;5700:18;:41::i;:::-;5692:103;;;;-1:-1:-1;;;5692:103:4;;;;;;;:::i;:::-;5805:38;5819:4;5825:2;5829:7;5838:4;5805:13;:38::i;:::-;5569:281;;;;:::o;2978:318::-;11005:4;11028:25;;;:16;:25;;;;;;3051:13;;-1:-1:-1;;;;;11028:25:4;3076:76;;;;-1:-1:-1;;;3076:76:4;;7641:2:13;3076:76:4;;;7623:21:13;7680:2;7660:18;;;7653:30;7719:34;7699:18;;;7692:62;-1:-1:-1;;;7770:18:13;;;7763:45;7825:19;;3076:76:4;7439:411:13;3076:76:4;3163:21;3187:10;3667:9;;;;;;;;;-1:-1:-1;3667:9:4;;;3591:92;3187:10;3163:34;;3238:1;3220:7;3214:21;:25;:75;;;;;;;;;;;;;;;;;3266:7;3275;3249:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3214:75;3207:82;2978:318;-1:-1:-1;;;2978:318:4:o;1090:190:2:-;1175:4;-1:-1:-1;;;;;;;;;661:40:1;;;1199:73:2;;;-1:-1:-1;;;;;;;;1239:33:2;:20;:33;;;;;;;;;;;;;;1090:190::o;9907:171:4:-;9981:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;9981:29:4;-1:-1:-1;;;;;9981:29:4;;;;;;;;:24;;10034:23;9981:24;10034:14;:23::i;:::-;-1:-1:-1;;;;;10025:46:4;;;;;;;;;;;9907:171;;:::o;8513:344::-;8606:4;11028:25;;;:16;:25;;;;;;-1:-1:-1;;;;;11028:25:4;8622:73;;;;-1:-1:-1;;;8622:73:4;;8434:2:13;8622:73:4;;;8416:21:13;8473:2;8453:18;;;8446:30;8512:34;8492:18;;;8485:62;-1:-1:-1;;;8563:18:13;;;8556:42;8615:19;;8622:73:4;8232:408:13;8622:73:4;8705:13;8721:23;8736:7;8721:14;:23::i;:::-;8705:39;;8773:5;-1:-1:-1;;;;;8762:16:4;:7;-1:-1:-1;;;;;8762:16:4;;:52;;;-1:-1:-1;;;;;;4936:25:4;;;4913:4;4936:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8782:32;8762:87;;;;8842:7;-1:-1:-1;;;;;8818:31:4;:20;8830:7;8818:11;:20::i;:::-;-1:-1:-1;;;;;8818:31:4;;8762:87;8754:96;8513:344;-1:-1:-1;;;;8513:344:4:o;9181:614::-;9335:4;-1:-1:-1;;;;;9308:31:4;:23;9323:7;9308:14;:23::i;:::-;-1:-1:-1;;;;;9308:31:4;;9300:81;;;;-1:-1:-1;;;9300:81:4;;8847:2:13;9300:81:4;;;8829:21:13;8886:2;8866:18;;;8859:30;8925:34;8905:18;;;8898:62;-1:-1:-1;;;8976:18:13;;;8969:35;9021:19;;9300:81:4;8645:401:13;9300:81:4;-1:-1:-1;;;;;9399:16:4;;9391:65;;;;-1:-1:-1;;;9391:65:4;;9253:2:13;9391:65:4;;;9235:21:13;9292:2;9272:18;;;9265:30;9331:34;9311:18;;;9304:62;-1:-1:-1;;;9382:18:13;;;9375:34;9426:19;;9391:65:4;9051:400:13;9391:65:4;9568:29;9585:1;9589:7;9568:8;:29::i;:::-;-1:-1:-1;;;;;9608:15:4;;;;;;:9;:15;;;;;:20;;9627:1;;9608:15;:20;;9627:1;;9608:20;:::i;:::-;;;;-1:-1:-1;;;;;;;9638:13:4;;;;;;:9;:13;;;;;:18;;9655:1;;9638:13;:18;;9655:1;;9638:18;:::i;:::-;;;;-1:-1:-1;;9666:25:4;;;;:16;:25;;;;;;:30;;-1:-1:-1;;;;;;9666:30:4;-1:-1:-1;;;;;9666:30:4;;;;;;;;;9712:27;;9666:25;;9712:27;;;;;;;3913:331;3843:401;;:::o;10214:307::-;10364:8;-1:-1:-1;;;;;10355:17:4;:5;-1:-1:-1;;;;;10355:17:4;;10347:55;;;;-1:-1:-1;;;10347:55:4;;10053:2:13;10347:55:4;;;10035:21:13;10092:2;10072:18;;;10065:30;10131:27;10111:18;;;10104:55;10176:18;;10347:55:4;9851:349:13;10347:55:4;-1:-1:-1;;;;;10412:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;10412:46:4;;;;;;;;;;10473:41;;445::13;;;10473::4;;418:18:13;10473:41:4;;;;;;;10214:307;;;:::o;8048:::-;8198:28;8208:4;8214:2;8218:7;8198:9;:28::i;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;-1:-1:-1;;745:1:13;727:16;;720:27;497:258::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:13;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:13:o;1148:180::-;1207:6;1260:2;1248:9;1239:7;1235:23;1231:32;1228:52;;;1276:1;1273;1266:12;1228:52;-1:-1:-1;1299:23:13;;1148:180;-1:-1:-1;1148:180:13:o;1541:173::-;1609:20;;-1:-1:-1;;;;;1658:31:13;;1648:42;;1638:70;;1704:1;1701;1694:12;1638:70;1541:173;;;:::o;1719:254::-;1787:6;1795;1848:2;1836:9;1827:7;1823:23;1819:32;1816:52;;;1864:1;1861;1854:12;1816:52;1887:29;1906:9;1887:29;:::i;:::-;1877:39;1963:2;1948:18;;;;1935:32;;-1:-1:-1;;;1719:254:13:o;1978:328::-;2055:6;2063;2071;2124:2;2112:9;2103:7;2099:23;2095:32;2092:52;;;2140:1;2137;2130:12;2092:52;2163:29;2182:9;2163:29;:::i;:::-;2153:39;;2211:38;2245:2;2234:9;2230:18;2211:38;:::i;:::-;2201:48;;2296:2;2285:9;2281:18;2268:32;2258:42;;1978:328;;;;;:::o;2311:186::-;2370:6;2423:2;2411:9;2402:7;2398:23;2394:32;2391:52;;;2439:1;2436;2429:12;2391:52;2462:29;2481:9;2462:29;:::i;2684:347::-;2749:6;2757;2810:2;2798:9;2789:7;2785:23;2781:32;2778:52;;;2826:1;2823;2816:12;2778:52;2849:29;2868:9;2849:29;:::i;:::-;2839:39;;2928:2;2917:9;2913:18;2900:32;2975:5;2968:13;2961:21;2954:5;2951:32;2941:60;;2997:1;2994;2987:12;2941:60;3020:5;3010:15;;;2684:347;;;;;:::o;3036:127::-;3097:10;3092:3;3088:20;3085:1;3078:31;3128:4;3125:1;3118:15;3152:4;3149:1;3142:15;3168:1138;3263:6;3271;3279;3287;3340:3;3328:9;3319:7;3315:23;3311:33;3308:53;;;3357:1;3354;3347:12;3308:53;3380:29;3399:9;3380:29;:::i;:::-;3370:39;;3428:38;3462:2;3451:9;3447:18;3428:38;:::i;:::-;3418:48;;3513:2;3502:9;3498:18;3485:32;3475:42;;3568:2;3557:9;3553:18;3540:32;3591:18;3632:2;3624:6;3621:14;3618:34;;;3648:1;3645;3638:12;3618:34;3686:6;3675:9;3671:22;3661:32;;3731:7;3724:4;3720:2;3716:13;3712:27;3702:55;;3753:1;3750;3743:12;3702:55;3789:2;3776:16;3811:2;3807;3804:10;3801:36;;;3817:18;;:::i;:::-;3892:2;3886:9;3860:2;3946:13;;-1:-1:-1;;3942:22:13;;;3966:2;3938:31;3934:40;3922:53;;;3990:18;;;4010:22;;;3987:46;3984:72;;;4036:18;;:::i;:::-;4076:10;4072:2;4065:22;4111:2;4103:6;4096:18;4151:7;4146:2;4141;4137;4133:11;4129:20;4126:33;4123:53;;;4172:1;4169;4162:12;4123:53;4228:2;4223;4219;4215:11;4210:2;4202:6;4198:15;4185:46;4273:1;4268:2;4263;4255:6;4251:15;4247:24;4240:35;4294:6;4284:16;;;;;;;3168:1138;;;;;;;:::o;4311:260::-;4379:6;4387;4440:2;4428:9;4419:7;4415:23;4411:32;4408:52;;;4456:1;4453;4446:12;4408:52;4479:29;4498:9;4479:29;:::i;:::-;4469:39;;4527:38;4561:2;4550:9;4546:18;4527:38;:::i;:::-;4517:48;;4311:260;;;;;:::o;4576:380::-;4655:1;4651:12;;;;4698;;;4719:61;;4773:4;4765:6;4761:17;4751:27;;4719:61;4826:2;4818:6;4815:14;4795:18;4792:38;4789:161;;4872:10;4867:3;4863:20;4860:1;4853:31;4907:4;4904:1;4897:15;4935:4;4932:1;4925:15;4789:161;;4576:380;;;:::o;6201:413::-;6403:2;6385:21;;;6442:2;6422:18;;;6415:30;6481:34;6476:2;6461:18;;6454:62;-1:-1:-1;;;6547:2:13;6532:18;;6525:47;6604:3;6589:19;;6201:413::o;7855:372::-;8014:3;8052:6;8046:13;8068:53;8114:6;8109:3;8102:4;8094:6;8090:17;8068:53;:::i;:::-;8143:16;;;;8168:21;;;-1:-1:-1;8216:4:13;8205:16;;7855:372;-1:-1:-1;7855:372:13:o;9456:127::-;9517:10;9512:3;9508:20;9505:1;9498:31;9548:4;9545:1;9538:15;9572:4;9569:1;9562:15;9588:125;9628:4;9656:1;9653;9650:8;9647:34;;;9661:18;;:::i;:::-;-1:-1:-1;9698:9:13;;9588:125::o;9718:128::-;9758:3;9789:1;9785:6;9782:1;9779:13;9776:39;;;9795:18;;:::i;:::-;-1:-1:-1;9831:9:13;;9718:128::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}. Should be overriden and restricted if what to implement soulbound properties  of the NFT"
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}. It'll always be between 0 and 1. We'll limit single nft per address"
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}. "
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}. - Change to reflect on-chain generative ASCII art "
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    560,
    14815
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x248 SWAP1 PUSH2 0xDAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x274 SWAP1 PUSH2 0xDAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x296 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x349 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370 DUP3 PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x340 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3F9 JUMPI POP PUSH2 0x3F9 DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x340 JUMP JUMPDEST PUSH2 0x475 DUP4 DUP4 PUSH2 0x735 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x484 CALLER DUP3 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x475 DUP4 DUP4 DUP4 PUSH2 0x89A JUMP JUMPDEST PUSH2 0x475 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x233 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x340 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x248 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x5DD CALLER DUP4 DUP4 PUSH2 0xA36 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5EB CALLER DUP4 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x340 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x613 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB04 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AF PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6F2 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E2 SWAP3 SWAP2 SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x233 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x76A DUP3 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x81C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x827 DUP4 PUSH2 0x4C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x86E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x892 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x887 DUP5 PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8AD DUP3 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x973 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x340 JUMP JUMPDEST PUSH2 0x97E PUSH1 0x0 DUP3 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9A7 SWAP1 DUP5 SWAP1 PUSH2 0xE72 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9D5 SWAP1 DUP5 SWAP1 PUSH2 0xE89 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x613 DUP5 DUP5 DUP5 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB54 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB3C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x613 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xB84 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE9 DUP4 PUSH2 0xBB1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC15 DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 POP PUSH2 0xC23 PUSH1 0x20 DUP6 ADD PUSH2 0xBB1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F2 DUP3 PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6A DUP4 PUSH2 0xBB1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCBF DUP6 PUSH2 0xBB1 JUMP JUMPDEST SWAP4 POP PUSH2 0xCCD PUSH1 0x20 DUP7 ADD PUSH2 0xBB1 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD17 JUMPI PUSH2 0xD17 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xD3F JUMPI PUSH2 0xD3F PUSH2 0xC8A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD98 DUP4 PUSH2 0xBB1 JUMP JUMPDEST SWAP2 POP PUSH2 0xDA6 PUSH1 0x20 DUP5 ADD PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDC3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDE3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xE4C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xB39 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE84 JUMPI PUSH2 0xE84 PUSH2 0xE5C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE9C JUMPI PUSH2 0xE9C PUSH2 0xE5C JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xF6 CREATE PUSH25 0xDCF111B0490D9C307F620B2E496D81343AA91947A309C7E9BB 0x4E 0xC1 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        560,
        14815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "101": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "REVERT",
      "path": "4"
    },
    "102": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "103": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "104": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "139": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "REVERT",
      "path": "4"
    },
    "140": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "141": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "142": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "152": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "153": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "163": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "164": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        560,
        14815
      ],
      "op": "REVERT",
      "path": "4"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB0F"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1723,
        1889
      ],
      "op": "JUMP",
      "path": "4"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1723,
        1889
      ],
      "op": "JUMP",
      "path": "4"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "DUP1",
      "path": "4"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "SUB",
      "path": "4"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "RETURN",
      "path": "4"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x239"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2590,
        2688
      ],
      "op": "JUMP",
      "path": "4"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB65"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2590,
        2688
      ],
      "op": "JUMP",
      "path": "4"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB98"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4313,
        4530
      ],
      "op": "JUMP",
      "path": "4"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2CB"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4313,
        4530
      ],
      "op": "JUMP",
      "path": "4"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBCD"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3843,
        4244
      ],
      "op": "JUMP",
      "path": "4"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x365"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3843,
        4244
      ],
      "op": "JUMP",
      "path": "4"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "STOP",
      "path": "4"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5040,
        5288
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5040,
        5288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5040,
        5288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5040,
        5288
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5040,
        5288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5040,
        5288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBF7"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5040,
        5288
      ],
      "op": "JUMP",
      "path": "4"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5040,
        5288
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5040,
        5288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x47A"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5040,
        5288
      ],
      "op": "JUMP",
      "path": "4"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5354,
        5503
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5354,
        5503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5354,
        5503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5354,
        5503
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5354,
        5503
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5354,
        5503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBF7"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5354,
        5503
      ],
      "op": "JUMP",
      "path": "4"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5354,
        5503
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5354,
        5503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4AB"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5354,
        5503
      ],
      "op": "JUMP",
      "path": "4"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2284,
        2528
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2284,
        2528
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2284,
        2528
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2284,
        2528
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2284,
        2528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2284,
        2528
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB98"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2284,
        2528
      ],
      "op": "JUMP",
      "path": "4"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2284,
        2528
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2284,
        2528
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C6"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2284,
        2528
      ],
      "op": "JUMP",
      "path": "4"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC33"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        2023,
        2227
      ],
      "op": "JUMP",
      "path": "4"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x53D"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        2023,
        2227
      ],
      "op": "JUMP",
      "path": "4"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2752,
        2854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2752,
        2854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2752,
        2854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C3"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2752,
        2854
      ],
      "op": "JUMP",
      "path": "4"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC4E"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4597,
        4750
      ],
      "op": "JUMP",
      "path": "4"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5D2"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4597,
        4750
      ],
      "op": "JUMP",
      "path": "4"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA0"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5569,
        5850
      ],
      "op": "JUMP",
      "path": "4"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5E1"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5569,
        5850
      ],
      "op": "JUMP",
      "path": "4"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB98"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2978,
        3296
      ],
      "op": "JUMP",
      "path": "4"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x619"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2978,
        3296
      ],
      "op": "JUMP",
      "path": "4"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4816,
        4978
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4816,
        4978
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4816,
        4978
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4816,
        4978
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4816,
        4978
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4816,
        4978
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD7C"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4816,
        4978
      ],
      "op": "JUMP",
      "path": "4"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4816,
        4978
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP3",
      "path": "4"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "AND",
      "path": "4"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4913,
        4917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP2",
      "path": "4"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4954
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP2",
      "path": "4"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP1",
      "path": "4"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP4",
      "path": "4"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "AND",
      "path": "4"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "DUP3",
      "path": "4"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "AND",
      "path": "4"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4816,
        4978
      ],
      "op": "JUMP",
      "path": "4"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1823,
        1827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "555": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1846,
        1882
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 1,
      "value": "0x233"
    },
    "558": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1870,
        1881
      ],
      "op": "DUP3",
      "path": "4"
    },
    "559": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1846,
        1869
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F9"
    },
    "562": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1846,
        1882
      ],
      "op": "JUMP",
      "path": "4"
    },
    "563": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1846,
        1882
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1839,
        1882
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1723,
        1889
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "op": "POP"
    },
    "568": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1723,
        1889
      ],
      "op": "JUMP",
      "path": "4"
    },
    "569": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "570": {
      "fn": "ERC721.name",
      "offset": [
        2644,
        2657
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "572": {
      "fn": "ERC721.name",
      "offset": [
        2676,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x1"
    },
    "574": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "575": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "576": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x248"
    },
    "579": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "580": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDAF"
    },
    "583": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMP",
      "path": "4"
    },
    "584": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "585": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "586": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "588": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ADD",
      "path": "4"
    },
    "589": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "591": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "592": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "593": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DIV",
      "path": "4"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "MUL",
      "path": "4"
    },
    "595": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "597": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ADD",
      "path": "4"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "600": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "601": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "602": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP2",
      "path": "4"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ADD",
      "path": "4"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "606": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "607": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "611": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP2",
      "path": "4"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP2",
      "path": "4"
    },
    "613": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "614": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ADD",
      "path": "4"
    },
    "617": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP3",
      "path": "4"
    },
    "618": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "620": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x274"
    },
    "623": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "624": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDAF"
    },
    "627": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMP",
      "path": "4"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "629": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C1"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "636": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "LT",
      "path": "4"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x296"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "646": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "647": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP4",
      "path": "4"
    },
    "648": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DIV",
      "path": "4"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "MUL",
      "path": "4"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP4",
      "path": "4"
    },
    "652": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ADD",
      "path": "4"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C1"
    },
    "661": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMP",
      "path": "4"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP3",
      "path": "4"
    },
    "664": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ADD",
      "path": "4"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP2",
      "path": "4"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP2",
      "path": "4"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ADD",
      "path": "4"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ADD",
      "path": "4"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP4",
      "path": "4"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "GT",
      "path": "4"
    },
    "692": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A4"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP3",
      "path": "4"
    },
    "697": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SUB",
      "path": "4"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "AND",
      "path": "4"
    },
    "702": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "DUP3",
      "path": "4"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "ADD",
      "path": "4"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "706": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "POP",
      "path": "4"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "POP",
      "path": "4"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "POP",
      "path": "4"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "POP",
      "path": "4"
    },
    "710": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "POP",
      "path": "4"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2669,
        2681
      ],
      "op": "POP",
      "path": "4"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2590,
        2688
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "714": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2590,
        2688
      ],
      "op": "JUMP",
      "path": "4"
    },
    "715": {
      "fn": "ERC721.getApproved",
      "offset": [
        4313,
        4530
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "716": {
      "fn": "ERC721.getApproved",
      "offset": [
        4389,
        4396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "718": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 3
    },
    "719": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "DUP2",
      "path": "4"
    },
    "720": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "721": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "723": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "725": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "726": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "728": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "DUP2",
      "path": "4"
    },
    "729": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "730": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "op": "SUB"
    },
    "739": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "AND",
      "path": "4"
    },
    "740": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x349"
    },
    "743": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "744": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "746": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "753": {
      "op": "SHL"
    },
    "754": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "DUP2",
      "path": "4"
    },
    "755": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "758": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "760": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "DUP3",
      "path": "4"
    },
    "761": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "ADD",
      "path": "4"
    },
    "762": {
      "op": "MSTORE"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "767": {
      "op": "DUP3"
    },
    "768": {
      "op": "ADD"
    },
    "769": {
      "op": "MSTORE"
    },
    "770": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "805": {
      "op": "DUP3"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "op": "MSTORE"
    },
    "808": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "821": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "826": {
      "op": "DUP3"
    },
    "827": {
      "op": "ADD"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "833": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "835": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "836": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "DUP1",
      "path": "4"
    },
    "837": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "838": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "SUB",
      "path": "4"
    },
    "839": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "840": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "841": {
      "fn": "ERC721.getApproved",
      "offset": [
        4408,
        4481
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0x0"
    },
    "845": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "846": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "DUP2",
      "path": "4"
    },
    "847": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "848": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "850": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "852": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "853": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "855": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "856": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "857": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "AND",
      "path": "4"
    },
    "867": {
      "fn": "ERC721.getApproved",
      "offset": [
        4499,
        4523
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "868": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4313,
        4530
      ],
      "op": "JUMP",
      "path": "4"
    },
    "869": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "870": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3936
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "872": {
      "fn": "ERC721.approve",
      "offset": [
        3939,
        3962
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x370"
    },
    "875": {
      "fn": "ERC721.approve",
      "offset": [
        3954,
        3961
      ],
      "op": "DUP3",
      "path": "4"
    },
    "876": {
      "fn": "ERC721.approve",
      "offset": [
        3939,
        3953
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C6"
    },
    "879": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3939,
        3962
      ],
      "op": "JUMP",
      "path": "4"
    },
    "880": {
      "fn": "ERC721.approve",
      "offset": [
        3939,
        3962
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "881": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3962
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "882": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3962
      ],
      "op": "POP",
      "path": "4"
    },
    "883": {
      "fn": "ERC721.approve",
      "offset": [
        3986,
        3991
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 6
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "890": {
      "op": "SHL"
    },
    "891": {
      "op": "SUB"
    },
    "892": {
      "fn": "ERC721.approve",
      "offset": [
        3980,
        3991
      ],
      "op": "AND",
      "path": "4"
    },
    "893": {
      "fn": "ERC721.approve",
      "offset": [
        3980,
        3982
      ],
      "op": "DUP4",
      "path": "4"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "fn": "ERC721.approve",
      "offset": [
        3980,
        3991
      ],
      "op": "AND",
      "path": "4"
    },
    "903": {
      "branch": 40,
      "fn": "ERC721.approve",
      "offset": [
        3980,
        3991
      ],
      "op": "SUB",
      "path": "4"
    },
    "904": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3DD"
    },
    "907": {
      "branch": 40,
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "908": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "910": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "911": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "917": {
      "op": "SHL"
    },
    "918": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "DUP2",
      "path": "4"
    },
    "919": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "922": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "924": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "DUP3",
      "path": "4"
    },
    "925": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "ADD",
      "path": "4"
    },
    "926": {
      "op": "MSTORE"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "931": {
      "op": "DUP3"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "969": {
      "op": "DUP3"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "op": "MSTORE"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "976": {
      "op": "SHL"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "979": {
      "op": "DUP3"
    },
    "980": {
      "op": "ADD"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "984": {
      "op": "ADD"
    },
    "985": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "988": {
      "op": "JUMP"
    },
    "989": {
      "fn": "ERC721.approve",
      "offset": [
        3972,
        4029
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "990": {
      "fn": "Context._msgSender",
      "offset": [
        737,
        747
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "997": {
      "op": "SHL"
    },
    "998": {
      "op": "SUB"
    },
    "999": {
      "fn": "ERC721.approve",
      "offset": [
        4061,
        4082
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 8
    },
    "1000": {
      "fn": "ERC721.approve",
      "offset": [
        4061,
        4082
      ],
      "op": "AND",
      "path": "4"
    },
    "1001": {
      "fn": "ERC721.approve",
      "offset": [
        4061,
        4082
      ],
      "op": "EQ",
      "path": "4"
    },
    "1002": {
      "branch": 41,
      "fn": "ERC721.approve",
      "offset": [
        4061,
        4082
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1003": {
      "fn": "ERC721.approve",
      "offset": [
        4061,
        4123
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F9"
    },
    "1006": {
      "branch": 41,
      "fn": "ERC721.approve",
      "offset": [
        4061,
        4123
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "ERC721.approve",
      "offset": [
        4086,
        4123
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F9"
    },
    "1011": {
      "fn": "ERC721.approve",
      "offset": [
        4103,
        4108
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1012": {
      "fn": "Context._msgSender",
      "offset": [
        737,
        747
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1013": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4816,
        4978
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "1016": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4816,
        4978
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1017": {
      "branch": 42,
      "fn": "ERC721.approve",
      "offset": [
        4086,
        4123
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1018": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46B"
    },
    "1021": {
      "branch": 42,
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1022": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1024": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1025": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1033": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1036": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1038": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1039": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "ADD",
      "path": "4"
    },
    "1040": {
      "op": "MSTORE"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1083": {
      "op": "DUP3"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "op": "MSTORE"
    },
    "1086": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1121": {
      "op": "DUP3"
    },
    "1122": {
      "op": "ADD"
    },
    "1123": {
      "op": "MSTORE"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1126": {
      "op": "ADD"
    },
    "1127": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "1130": {
      "op": "JUMP"
    },
    "1131": {
      "fn": "ERC721.approve",
      "offset": [
        4040,
        4205
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1132": {
      "fn": "ERC721.approve",
      "offset": [
        4216,
        4237
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 9,
      "value": "0x475"
    },
    "1135": {
      "fn": "ERC721.approve",
      "offset": [
        4225,
        4227
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1136": {
      "fn": "ERC721.approve",
      "offset": [
        4229,
        4236
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1137": {
      "fn": "ERC721.approve",
      "offset": [
        4216,
        4224
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x735"
    },
    "1140": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4216,
        4237
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1141": {
      "fn": "ERC721.approve",
      "offset": [
        4216,
        4237
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1142": {
      "fn": "ERC721.approve",
      "offset": [
        3913,
        4244
      ],
      "op": "POP",
      "path": "4"
    },
    "1143": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "POP",
      "path": "4"
    },
    "1144": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "POP",
      "path": "4"
    },
    "1145": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3843,
        4244
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1146": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5040,
        5288
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1147": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5147,
        5188
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x484"
    },
    "1150": {
      "fn": "Context._msgSender",
      "offset": [
        737,
        747
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1151": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5180,
        5187
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1152": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5147,
        5165
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A3"
    },
    "1155": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5147,
        5188
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1156": {
      "branch": 43,
      "fn": "ERC721.transferFrom",
      "offset": [
        5147,
        5188
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1157": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4A0"
    },
    "1160": {
      "branch": 43,
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1161": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1163": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1164": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1170": {
      "op": "SHL"
    },
    "1171": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1172": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1173": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1175": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "ADD",
      "path": "4"
    },
    "1176": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "1179": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1180": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE9"
    },
    "1183": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5139,
        5242
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1184": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5139,
        5242
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1185": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5253,
        5281
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x475"
    },
    "1188": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5263,
        5267
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1189": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5269,
        5271
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1190": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5273,
        5280
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1191": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5253,
        5262
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x89A"
    },
    "1194": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5253,
        5281
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1195": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5354,
        5503
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1196": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 12,
      "value": "0x475"
    },
    "1199": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5474,
        5478
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1200": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5480,
        5482
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1201": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5484,
        5491
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1202": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1204": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1205": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1206": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1208": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "ADD",
      "path": "4"
    },
    "1209": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1211": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1212": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1213": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1215": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1216": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1217": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5496
      ],
      "op": "POP",
      "path": "4"
    },
    "1218": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5457,
        5473
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5E1"
    },
    "1221": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5457,
        5496
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1222": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2284,
        2528
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2356,
        2363
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1225": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1226": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1227": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1228": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2407
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1230": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1232": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1233": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1235": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1236": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1237": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "AND",
      "path": "4"
    },
    "1247": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2391,
        2416
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1248": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 13,
      "value": "0x233"
    },
    "1251": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1252": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1254": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1261": {
      "op": "SHL"
    },
    "1262": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1263": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1266": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1268": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1269": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "ADD",
      "path": "4"
    },
    "1270": {
      "op": "MSTORE"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1275": {
      "op": "DUP3"
    },
    "1276": {
      "op": "ADD"
    },
    "1277": {
      "op": "MSTORE"
    },
    "1278": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1313": {
      "op": "DUP3"
    },
    "1314": {
      "op": "ADD"
    },
    "1315": {
      "op": "MSTORE"
    },
    "1316": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1331": {
      "op": "DUP3"
    },
    "1332": {
      "op": "ADD"
    },
    "1333": {
      "op": "MSTORE"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1336": {
      "op": "ADD"
    },
    "1337": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2426,
        2499
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "1340": {
      "op": "JUMP"
    },
    "1341": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2023,
        2227
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1342": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2095,
        2102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "SUB"
    },
    "1352": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2122,
        2141
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 14
    },
    "1353": {
      "branch": 44,
      "fn": "ERC721.balanceOf",
      "offset": [
        2122,
        2141
      ],
      "op": "AND",
      "path": "4"
    },
    "1354": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A7"
    },
    "1357": {
      "branch": 44,
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1358": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1360": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1367": {
      "op": "SHL"
    },
    "1368": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1369": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1372": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1374": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1375": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "ADD",
      "path": "4"
    },
    "1376": {
      "op": "MSTORE"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1381": {
      "op": "DUP3"
    },
    "1382": {
      "op": "ADD"
    },
    "1383": {
      "op": "MSTORE"
    },
    "1384": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH9",
      "value": "0x3634B21037BBB732B9"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1437": {
      "op": "DUP3"
    },
    "1438": {
      "op": "ADD"
    },
    "1439": {
      "op": "MSTORE"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1442": {
      "op": "ADD"
    },
    "1443": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "1446": {
      "op": "JUMP"
    },
    "1447": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2114,
        2187
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "SUB"
    },
    "1457": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "AND",
      "path": "4",
      "statement": 15
    },
    "1458": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1460": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1461": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1462": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1463": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2213
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1465": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1467": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1468": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1470": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1471": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1472": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1473": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2204,
        2220
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1474": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        2023,
        2227
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1475": {
      "fn": "ERC721.symbol",
      "offset": [
        2752,
        2854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1476": {
      "fn": "ERC721.symbol",
      "offset": [
        2808,
        2821
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1478": {
      "fn": "ERC721.symbol",
      "offset": [
        2840,
        2847
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x2"
    },
    "1480": {
      "fn": "ERC721.symbol",
      "offset": [
        2833,
        2847
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1481": {
      "fn": "ERC721.symbol",
      "offset": [
        2833,
        2847
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1482": {
      "fn": "ERC721.symbol",
      "offset": [
        2833,
        2847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x248"
    },
    "1485": {
      "fn": "ERC721.symbol",
      "offset": [
        2833,
        2847
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1486": {
      "fn": "ERC721.symbol",
      "offset": [
        2833,
        2847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDAF"
    },
    "1489": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2833,
        2847
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1490": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1491": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4691,
        4743
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 17,
      "value": "0x5DD"
    },
    "1494": {
      "fn": "Context._msgSender",
      "offset": [
        737,
        747
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1495": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4724,
        4732
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1496": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4734,
        4742
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1497": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4691,
        4709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA36"
    },
    "1500": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4691,
        4743
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1501": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4691,
        4743
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1502": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "POP",
      "path": "4"
    },
    "1503": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4597,
        4750
      ],
      "op": "POP",
      "path": "4"
    },
    "1504": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4597,
        4750
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1505": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1506": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5700,
        5741
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 18,
      "value": "0x5EB"
    },
    "1509": {
      "fn": "Context._msgSender",
      "offset": [
        737,
        747
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1510": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5733,
        5740
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1511": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5700,
        5718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A3"
    },
    "1514": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5700,
        5741
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1515": {
      "branch": 45,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5700,
        5741
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1516": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x607"
    },
    "1519": {
      "branch": 45,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1520": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1522": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1529": {
      "op": "SHL"
    },
    "1530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1532": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1534": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "ADD",
      "path": "4"
    },
    "1535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "1538": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1539": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE9"
    },
    "1542": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5692,
        5795
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1543": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5692,
        5795
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1544": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5805,
        5843
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 19,
      "value": "0x613"
    },
    "1547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5819,
        5823
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1548": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5825,
        5827
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1549": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5829,
        5836
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1550": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5838,
        5842
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1551": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5805,
        5818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB04"
    },
    "1554": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5805,
        5843
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5805,
        5843
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "POP",
      "path": "4"
    },
    "1557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "POP",
      "path": "4"
    },
    "1558": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "POP",
      "path": "4"
    },
    "1559": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5850
      ],
      "op": "POP",
      "path": "4"
    },
    "1560": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5569,
        5850
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1561": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1562": {
      "fn": "ERC721._exists",
      "offset": [
        11005,
        11009
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1564": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1565": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1566": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1567": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1569": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1571": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1572": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1574": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1575": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1576": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1577": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3051,
        3064
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1579": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3051,
        3064
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1586": {
      "op": "SHL"
    },
    "1587": {
      "op": "SUB"
    },
    "1588": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "AND",
      "path": "4"
    },
    "1589": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 20,
      "value": "0x698"
    },
    "1592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1593": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1595": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1602": {
      "op": "SHL"
    },
    "1603": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1607": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1609": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1610": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "ADD",
      "path": "4"
    },
    "1611": {
      "op": "MSTORE"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1616": {
      "op": "DUP3"
    },
    "1617": {
      "op": "ADD"
    },
    "1618": {
      "op": "MSTORE"
    },
    "1619": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1654": {
      "op": "DUP3"
    },
    "1655": {
      "op": "ADD"
    },
    "1656": {
      "op": "MSTORE"
    },
    "1657": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1678": {
      "op": "DUP3"
    },
    "1679": {
      "op": "ADD"
    },
    "1680": {
      "op": "MSTORE"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "1687": {
      "op": "JUMP"
    },
    "1688": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3076,
        3152
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1689": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3163,
        3184
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1691": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3187,
        3197
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6AF"
    },
    "1694": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 21,
      "value": "0x40"
    },
    "1696": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1697": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1698": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1700": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1701": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "ADD",
      "path": "4"
    },
    "1702": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1703": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1704": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1707": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1708": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1709": {
      "fn": "ERC721._baseURI",
      "offset": [
        3667,
        3676
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1710": {
      "fn": "ERC721._baseURI",
      "offset": [
        3591,
        3683
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1711": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3187,
        3197
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1712": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3163,
        3197
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1713": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3163,
        3197
      ],
      "op": "POP",
      "path": "4"
    },
    "1714": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3238,
        3239
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 22,
      "value": "0x0"
    },
    "1716": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3220,
        3227
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1717": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3235
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1718": {
      "branch": 46,
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3239
      ],
      "op": "GT",
      "path": "4"
    },
    "1719": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6CF"
    },
    "1722": {
      "branch": 46,
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1723": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1725": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1726": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1727": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1729": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "ADD",
      "path": "4"
    },
    "1730": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1732": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1733": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1734": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1736": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1737": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1738": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "POP",
      "path": "4"
    },
    "1739": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F2"
    },
    "1742": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1743": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1744": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3266,
        3273
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1745": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3275,
        3282
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1746": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1748": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1749": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "ADD",
      "path": "4"
    },
    "1752": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E2"
    },
    "1755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1756": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3A"
    },
    "1761": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3249,
        3283
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1762": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1763": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1765": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1766": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1768": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1769": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1770": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "SUB",
      "path": "4"
    },
    "1771": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "SUB",
      "path": "4"
    },
    "1772": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1773": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1774": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1775": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1777": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3249,
        3283
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3214,
        3289
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3207,
        3289
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1780": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2978,
        3296
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "op": "POP"
    },
    "1783": {
      "op": "POP"
    },
    "1784": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2978,
        3296
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1785": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1090,
        1280
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1786": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1175,
        1179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1788": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1802": {
      "op": "SHL"
    },
    "1803": {
      "op": "SUB"
    },
    "1804": {
      "op": "NOT"
    },
    "1805": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        661,
        701
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 23
    },
    "1806": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        661,
        701
      ],
      "op": "AND",
      "path": "1"
    },
    "1807": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        661,
        701
      ],
      "op": "EQ",
      "path": "1"
    },
    "1808": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1199,
        1272
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 24
    },
    "1809": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1199,
        1272
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x233"
    },
    "1812": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1199,
        1272
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "op": "SUB"
    },
    "1823": {
      "op": "NOT"
    },
    "1824": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "AND",
      "path": "2"
    },
    "1825": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1259
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1827": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1828": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1829": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1830": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1832": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1833": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1834": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1835": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1837": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1838": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1839": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1840": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1842": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "AND",
      "path": "2"
    },
    "1843": {
      "fn": "ERC165Storage.supportsInterface",
      "offset": [
        1239,
        1272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1844": {
      "fn": "ERC165Storage.supportsInterface",
      "jump": "o",
      "offset": [
        1090,
        1280
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1845": {
      "fn": "ERC721._approve",
      "offset": [
        9907,
        10078
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1846": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0x0"
    },
    "1848": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1849": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1850": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1851": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        9996
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1853": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1855": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1856": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1858": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1859": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1860": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1861": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "op": "SUB"
    },
    "1870": {
      "op": "NOT"
    },
    "1871": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "AND",
      "path": "4"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1878": {
      "op": "SHL"
    },
    "1879": {
      "op": "SUB"
    },
    "1880": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1881": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "AND",
      "path": "4"
    },
    "1882": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1883": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1884": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "OR",
      "path": "4"
    },
    "1885": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1886": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1887": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10010
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1888": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1889": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1890": {
      "fn": "ERC721._approve",
      "offset": [
        10034,
        10057
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 26,
      "value": "0x76A"
    },
    "1893": {
      "fn": "ERC721._approve",
      "offset": [
        9981,
        10005
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1894": {
      "fn": "ERC721._approve",
      "offset": [
        10034,
        10048
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C6"
    },
    "1897": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        10034,
        10057
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1898": {
      "fn": "ERC721._approve",
      "offset": [
        10034,
        10057
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1905": {
      "op": "SHL"
    },
    "1906": {
      "op": "SUB"
    },
    "1907": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "AND",
      "path": "4"
    },
    "1908": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1941": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1943": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1944": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1946": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1947": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1948": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1949": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "SUB",
      "path": "4"
    },
    "1950": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1951": {
      "fn": "ERC721._approve",
      "offset": [
        10025,
        10071
      ],
      "op": "LOG4",
      "path": "4"
    },
    "1952": {
      "fn": "ERC721._approve",
      "offset": [
        9907,
        10078
      ],
      "op": "POP",
      "path": "4"
    },
    "1953": {
      "fn": "ERC721._approve",
      "offset": [
        9907,
        10078
      ],
      "op": "POP",
      "path": "4"
    },
    "1954": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        9907,
        10078
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1955": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8513,
        8857
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1956": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8606,
        8610
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1958": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1959": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1960": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1961": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1963": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1965": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1966": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1968": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1969": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1970": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "op": "SUB"
    },
    "1979": {
      "fn": "ERC721._exists",
      "offset": [
        11028,
        11053
      ],
      "op": "AND",
      "path": "4"
    },
    "1980": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 27,
      "value": "0x81C"
    },
    "1983": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1984": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1986": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1993": {
      "op": "SHL"
    },
    "1994": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1995": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1998": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2000": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2001": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "ADD",
      "path": "4"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2007": {
      "op": "DUP3"
    },
    "2008": {
      "op": "ADD"
    },
    "2009": {
      "op": "MSTORE"
    },
    "2010": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2045": {
      "op": "DUP3"
    },
    "2046": {
      "op": "ADD"
    },
    "2047": {
      "op": "MSTORE"
    },
    "2048": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2066": {
      "op": "DUP3"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "MSTORE"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "2075": {
      "op": "JUMP"
    },
    "2076": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8622,
        8695
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2077": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8705,
        8718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2079": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8721,
        8744
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x827"
    },
    "2082": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8736,
        8743
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2083": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8721,
        8735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C6"
    },
    "2086": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8721,
        8744
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2087": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8721,
        8744
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2088": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8705,
        8744
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2089": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8705,
        8744
      ],
      "op": "POP",
      "path": "4"
    },
    "2090": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8773,
        8778
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 28
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2097": {
      "op": "SHL"
    },
    "2098": {
      "op": "SUB"
    },
    "2099": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8778
      ],
      "op": "AND",
      "path": "4"
    },
    "2100": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8769
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2107": {
      "op": "SHL"
    },
    "2108": {
      "op": "SUB"
    },
    "2109": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8778
      ],
      "op": "AND",
      "path": "4"
    },
    "2110": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8778
      ],
      "op": "EQ",
      "path": "4"
    },
    "2111": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8814
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2112": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8814
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x86E"
    },
    "2115": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8814
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2116": {
      "op": "POP"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2123": {
      "op": "SHL"
    },
    "2124": {
      "op": "SUB"
    },
    "2125": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2126": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2127": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "AND",
      "path": "4"
    },
    "2128": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4913,
        4917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2130": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2131": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2132": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2133": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4954
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "2135": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2137": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2138": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2139": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2140": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2142": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2143": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2144": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4961
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2145": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2146": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2147": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "AND",
      "path": "4"
    },
    "2148": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2149": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2150": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2151": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2152": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2153": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2154": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2155": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2157": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4936,
        4971
      ],
      "op": "AND",
      "path": "4"
    },
    "2158": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8782,
        8814
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2159": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8849
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2160": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8849
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x892"
    },
    "2163": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8849
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2164": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8849
      ],
      "op": "POP",
      "path": "4"
    },
    "2165": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8842,
        8849
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "op": "SUB"
    },
    "2174": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8818,
        8849
      ],
      "op": "AND",
      "path": "4"
    },
    "2175": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8818,
        8838
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x887"
    },
    "2178": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8830,
        8837
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2179": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8818,
        8829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2CB"
    },
    "2182": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8818,
        8838
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2183": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8818,
        8838
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "op": "SUB"
    },
    "2192": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8818,
        8849
      ],
      "op": "AND",
      "path": "4"
    },
    "2193": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8818,
        8849
      ],
      "op": "EQ",
      "path": "4"
    },
    "2194": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8762,
        8849
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8754,
        8850
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2196": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8513,
        8857
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2197": {
      "op": "POP"
    },
    "2198": {
      "op": "POP"
    },
    "2199": {
      "op": "POP"
    },
    "2200": {
      "op": "POP"
    },
    "2201": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        8513,
        8857
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2202": {
      "fn": "ERC721._transfer",
      "offset": [
        9181,
        9795
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2203": {
      "fn": "ERC721._transfer",
      "offset": [
        9335,
        9339
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 29
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2210": {
      "op": "SHL"
    },
    "2211": {
      "op": "SUB"
    },
    "2212": {
      "fn": "ERC721._transfer",
      "offset": [
        9308,
        9339
      ],
      "op": "AND",
      "path": "4"
    },
    "2213": {
      "fn": "ERC721._transfer",
      "offset": [
        9308,
        9331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8AD"
    },
    "2216": {
      "fn": "ERC721._transfer",
      "offset": [
        9323,
        9330
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        9308,
        9322
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C6"
    },
    "2220": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        9308,
        9331
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2221": {
      "fn": "ERC721._transfer",
      "offset": [
        9308,
        9331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "op": "SUB"
    },
    "2230": {
      "fn": "ERC721._transfer",
      "offset": [
        9308,
        9339
      ],
      "op": "AND",
      "path": "4"
    },
    "2231": {
      "branch": 47,
      "fn": "ERC721._transfer",
      "offset": [
        9308,
        9339
      ],
      "op": "EQ",
      "path": "4"
    },
    "2232": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x911"
    },
    "2235": {
      "branch": 47,
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2236": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2238": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2239": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2245": {
      "op": "SHL"
    },
    "2246": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2247": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2250": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2252": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2253": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "ADD",
      "path": "4"
    },
    "2254": {
      "op": "MSTORE"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2259": {
      "op": "DUP3"
    },
    "2260": {
      "op": "ADD"
    },
    "2261": {
      "op": "MSTORE"
    },
    "2262": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2297": {
      "op": "DUP3"
    },
    "2298": {
      "op": "ADD"
    },
    "2299": {
      "op": "MSTORE"
    },
    "2300": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2308": {
      "op": "SHL"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2311": {
      "op": "DUP3"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "op": "MSTORE"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "2320": {
      "op": "JUMP"
    },
    "2321": {
      "fn": "ERC721._transfer",
      "offset": [
        9300,
        9381
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2328": {
      "op": "SHL"
    },
    "2329": {
      "op": "SUB"
    },
    "2330": {
      "fn": "ERC721._transfer",
      "offset": [
        9399,
        9415
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 30
    },
    "2331": {
      "branch": 48,
      "fn": "ERC721._transfer",
      "offset": [
        9399,
        9415
      ],
      "op": "AND",
      "path": "4"
    },
    "2332": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x973"
    },
    "2335": {
      "branch": 48,
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2336": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2338": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2339": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2345": {
      "op": "SHL"
    },
    "2346": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2347": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2350": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2352": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2353": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "ADD",
      "path": "4"
    },
    "2354": {
      "op": "MSTORE"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2357": {
      "op": "DUP1"
    },
    "2358": {
      "op": "DUP3"
    },
    "2359": {
      "op": "ADD"
    },
    "2360": {
      "op": "MSTORE"
    },
    "2361": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2396": {
      "op": "DUP3"
    },
    "2397": {
      "op": "ADD"
    },
    "2398": {
      "op": "MSTORE"
    },
    "2399": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2406": {
      "op": "SHL"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2409": {
      "op": "DUP3"
    },
    "2410": {
      "op": "ADD"
    },
    "2411": {
      "op": "MSTORE"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2414": {
      "op": "ADD"
    },
    "2415": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "2418": {
      "op": "JUMP"
    },
    "2419": {
      "fn": "ERC721._transfer",
      "offset": [
        9391,
        9456
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2420": {
      "fn": "ERC721._transfer",
      "offset": [
        9568,
        9597
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 31,
      "value": "0x97E"
    },
    "2423": {
      "fn": "ERC721._transfer",
      "offset": [
        9585,
        9586
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2425": {
      "fn": "ERC721._transfer",
      "offset": [
        9589,
        9596
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2426": {
      "fn": "ERC721._transfer",
      "offset": [
        9568,
        9576
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x735"
    },
    "2429": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        9568,
        9597
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2430": {
      "fn": "ERC721._transfer",
      "offset": [
        9568,
        9597
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2437": {
      "op": "SHL"
    },
    "2438": {
      "op": "SUB"
    },
    "2439": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 32
    },
    "2440": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "AND",
      "path": "4"
    },
    "2441": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2443": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2445": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2446": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2450": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2451": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2453": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2454": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2455": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9628
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2456": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9628
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2457": {
      "fn": "ERC721._transfer",
      "offset": [
        9627,
        9628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        9627,
        9628
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2460": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9623
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2461": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9628
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A7"
    },
    "2464": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9628
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2465": {
      "fn": "ERC721._transfer",
      "offset": [
        9627,
        9628
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2466": {
      "fn": "ERC721._transfer",
      "offset": [
        9627,
        9628
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2467": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9628
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE72"
    },
    "2470": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        9608,
        9628
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2471": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9628
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9628
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2473": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9628
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        9608,
        9628
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2475": {
      "op": "POP"
    },
    "2476": {
      "op": "POP"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2483": {
      "op": "SHL"
    },
    "2484": {
      "op": "SUB"
    },
    "2485": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 33
    },
    "2486": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "AND",
      "path": "4"
    },
    "2487": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2490": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2491": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2492": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2494": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2496": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2497": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2499": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2500": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2501": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9656
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2502": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9656
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2503": {
      "fn": "ERC721._transfer",
      "offset": [
        9655,
        9656
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2505": {
      "fn": "ERC721._transfer",
      "offset": [
        9655,
        9656
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2506": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9651
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2507": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9656
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D5"
    },
    "2510": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9656
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2511": {
      "fn": "ERC721._transfer",
      "offset": [
        9655,
        9656
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2512": {
      "fn": "ERC721._transfer",
      "offset": [
        9655,
        9656
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2513": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9656
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE89"
    },
    "2516": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        9638,
        9656
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2517": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9656
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2518": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9656
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2519": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9656
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        9638,
        9656
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2521": {
      "op": "POP"
    },
    "2522": {
      "op": "POP"
    },
    "2523": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 34,
      "value": "0x0"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2526": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2527": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2528": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9682
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2530": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2532": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2533": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2535": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2536": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2538": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2539": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2546": {
      "op": "SHL"
    },
    "2547": {
      "op": "SUB"
    },
    "2548": {
      "op": "NOT"
    },
    "2549": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "AND",
      "path": "4"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2556": {
      "op": "SHL"
    },
    "2557": {
      "op": "SUB"
    },
    "2558": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2559": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2560": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "AND",
      "path": "4"
    },
    "2561": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2562": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2563": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "OR",
      "path": "4"
    },
    "2564": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2565": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2566": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9696
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2567": {
      "fn": "ERC721._transfer",
      "offset": [
        9712,
        9739
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 35
    },
    "2568": {
      "fn": "ERC721._transfer",
      "offset": [
        9712,
        9739
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2569": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2570": {
      "fn": "ERC721._transfer",
      "offset": [
        9666,
        9691
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2571": {
      "fn": "ERC721._transfer",
      "offset": [
        9712,
        9739
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2572": {
      "fn": "ERC721._transfer",
      "offset": [
        9712,
        9739
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2573": {
      "fn": "ERC721._transfer",
      "offset": [
        9712,
        9739
      ],
      "op": "AND",
      "path": "4"
    },
    "2574": {
      "fn": "ERC721._transfer",
      "offset": [
        9712,
        9739
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2575": {
      "fn": "ERC721._transfer",
      "offset": [
        9712,
        9739
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2608": {
      "fn": "ERC721._transfer",
      "offset": [
        9712,
        9739
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2609": {
      "fn": "ERC721._transfer",
      "offset": [
        9712,
        9739
      ],
      "op": "LOG4",
      "path": "4"
    },
    "2610": {
      "fn": "ERC721.approve",
      "offset": [
        3913,
        4244
      ],
      "op": "POP",
      "path": "4"
    },
    "2611": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "POP",
      "path": "4"
    },
    "2612": {
      "fn": "ERC721.approve",
      "offset": [
        3843,
        4244
      ],
      "op": "POP",
      "path": "4"
    },
    "2613": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3843,
        4244
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2614": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10214,
        10521
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2615": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10364,
        10372
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 36
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2622": {
      "op": "SHL"
    },
    "2623": {
      "op": "SUB"
    },
    "2624": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10355,
        10372
      ],
      "op": "AND",
      "path": "4"
    },
    "2625": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10355,
        10360
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2632": {
      "op": "SHL"
    },
    "2633": {
      "op": "SUB"
    },
    "2634": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10355,
        10372
      ],
      "op": "AND",
      "path": "4"
    },
    "2635": {
      "branch": 49,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10355,
        10372
      ],
      "op": "SUB",
      "path": "4"
    },
    "2636": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA97"
    },
    "2639": {
      "branch": 49,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2640": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2642": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2649": {
      "op": "SHL"
    },
    "2650": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2651": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2654": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2656": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2657": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "ADD",
      "path": "4"
    },
    "2658": {
      "op": "MSTORE"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2663": {
      "op": "DUP3"
    },
    "2664": {
      "op": "ADD"
    },
    "2665": {
      "op": "MSTORE"
    },
    "2666": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2701": {
      "op": "DUP3"
    },
    "2702": {
      "op": "ADD"
    },
    "2703": {
      "op": "MSTORE"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2706": {
      "op": "ADD"
    },
    "2707": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "2710": {
      "op": "JUMP"
    },
    "2711": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10347,
        10402
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2718": {
      "op": "SHL"
    },
    "2719": {
      "op": "SUB"
    },
    "2720": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 37
    },
    "2721": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2722": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "AND",
      "path": "4"
    },
    "2723": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2725": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2726": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2727": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2728": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10430
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "2730": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2732": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2733": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2734": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2735": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2737": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2738": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2739": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10437
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2742": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "AND",
      "path": "4"
    },
    "2743": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2744": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2745": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2747": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2749": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2751": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2752": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10447
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2754": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2757": {
      "op": "NOT"
    },
    "2758": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "AND",
      "path": "4"
    },
    "2759": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2761": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2762": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2763": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2764": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "OR",
      "path": "4"
    },
    "2765": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2766": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2767": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10412,
        10458
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2768": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 38
    },
    "2769": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2770": {
      "op": "SWAP2"
    },
    "2771": {
      "op": "DUP3"
    },
    "2772": {
      "op": "MSTORE"
    },
    "2773": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2806": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2807": {
      "op": "ADD"
    },
    "2808": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2810": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2811": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2812": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2813": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "SUB",
      "path": "4"
    },
    "2814": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2815": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10473,
        10514
      ],
      "op": "LOG3",
      "path": "4"
    },
    "2816": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10214,
        10521
      ],
      "op": "POP",
      "path": "4"
    },
    "2817": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10214,
        10521
      ],
      "op": "POP",
      "path": "4"
    },
    "2818": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        10214,
        10521
      ],
      "op": "POP",
      "path": "4"
    },
    "2819": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        10214,
        10521
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2820": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        8048,
        8355
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2821": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        8198,
        8226
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 39,
      "value": "0x613"
    },
    "2824": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        8208,
        8212
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2825": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        8214,
        8216
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2826": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        8218,
        8225
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2827": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        8198,
        8207
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x89A"
    },
    "2830": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        8198,
        8226
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2831": {
      "op": "JUMPDEST"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2836": {
      "op": "DUP3"
    },
    "2837": {
      "op": "DUP5"
    },
    "2838": {
      "op": "SUB"
    },
    "2839": {
      "op": "SLT"
    },
    "2840": {
      "op": "ISZERO"
    },
    "2841": {
      "op": "PUSH2",
      "value": "0xB21"
    },
    "2844": {
      "op": "JUMPI"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2847": {
      "op": "DUP1"
    },
    "2848": {
      "op": "REVERT"
    },
    "2849": {
      "op": "JUMPDEST"
    },
    "2850": {
      "op": "DUP2"
    },
    "2851": {
      "op": "CALLDATALOAD"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2858": {
      "op": "SHL"
    },
    "2859": {
      "op": "SUB"
    },
    "2860": {
      "op": "NOT"
    },
    "2861": {
      "op": "DUP2"
    },
    "2862": {
      "op": "AND"
    },
    "2863": {
      "op": "DUP2"
    },
    "2864": {
      "op": "EQ"
    },
    "2865": {
      "op": "PUSH2",
      "value": "0x6F2"
    },
    "2868": {
      "op": "JUMPI"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2871": {
      "op": "DUP1"
    },
    "2872": {
      "op": "REVERT"
    },
    "2873": {
      "op": "JUMPDEST"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2876": {
      "op": "JUMPDEST"
    },
    "2877": {
      "op": "DUP4"
    },
    "2878": {
      "op": "DUP2"
    },
    "2879": {
      "op": "LT"
    },
    "2880": {
      "op": "ISZERO"
    },
    "2881": {
      "op": "PUSH2",
      "value": "0xB54"
    },
    "2884": {
      "op": "JUMPI"
    },
    "2885": {
      "op": "DUP2"
    },
    "2886": {
      "op": "DUP2"
    },
    "2887": {
      "op": "ADD"
    },
    "2888": {
      "op": "MLOAD"
    },
    "2889": {
      "op": "DUP4"
    },
    "2890": {
      "op": "DUP3"
    },
    "2891": {
      "op": "ADD"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2895": {
      "op": "ADD"
    },
    "2896": {
      "op": "PUSH2",
      "value": "0xB3C"
    },
    "2899": {
      "op": "JUMP"
    },
    "2900": {
      "op": "JUMPDEST"
    },
    "2901": {
      "op": "DUP4"
    },
    "2902": {
      "op": "DUP2"
    },
    "2903": {
      "op": "GT"
    },
    "2904": {
      "op": "ISZERO"
    },
    "2905": {
      "op": "PUSH2",
      "value": "0x613"
    },
    "2908": {
      "op": "JUMPI"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2913": {
      "op": "SWAP2"
    },
    "2914": {
      "op": "ADD"
    },
    "2915": {
      "op": "MSTORE"
    },
    "2916": {
      "jump": "o",
      "op": "JUMP"
    },
    "2917": {
      "op": "JUMPDEST"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2920": {
      "op": "DUP2"
    },
    "2921": {
      "op": "MSTORE"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2924": {
      "op": "DUP3"
    },
    "2925": {
      "op": "MLOAD"
    },
    "2926": {
      "op": "DUP1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2929": {
      "op": "DUP5"
    },
    "2930": {
      "op": "ADD"
    },
    "2931": {
      "op": "MSTORE"
    },
    "2932": {
      "op": "PUSH2",
      "value": "0xB84"
    },
    "2935": {
      "op": "DUP2"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2938": {
      "op": "DUP6"
    },
    "2939": {
      "op": "ADD"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2942": {
      "op": "DUP8"
    },
    "2943": {
      "op": "ADD"
    },
    "2944": {
      "op": "PUSH2",
      "value": "0xB39"
    },
    "2947": {
      "jump": "i",
      "op": "JUMP"
    },
    "2948": {
      "op": "JUMPDEST"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2954": {
      "op": "NOT"
    },
    "2955": {
      "op": "AND"
    },
    "2956": {
      "op": "SWAP2"
    },
    "2957": {
      "op": "SWAP1"
    },
    "2958": {
      "op": "SWAP2"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2962": {
      "op": "ADD"
    },
    "2963": {
      "op": "SWAP3"
    },
    "2964": {
      "op": "SWAP2"
    },
    "2965": {
      "op": "POP"
    },
    "2966": {
      "op": "POP"
    },
    "2967": {
      "jump": "o",
      "op": "JUMP"
    },
    "2968": {
      "op": "JUMPDEST"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2973": {
      "op": "DUP3"
    },
    "2974": {
      "op": "DUP5"
    },
    "2975": {
      "op": "SUB"
    },
    "2976": {
      "op": "SLT"
    },
    "2977": {
      "op": "ISZERO"
    },
    "2978": {
      "op": "PUSH2",
      "value": "0xBAA"
    },
    "2981": {
      "op": "JUMPI"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2984": {
      "op": "DUP1"
    },
    "2985": {
      "op": "REVERT"
    },
    "2986": {
      "op": "JUMPDEST"
    },
    "2987": {
      "op": "POP"
    },
    "2988": {
      "op": "CALLDATALOAD"
    },
    "2989": {
      "op": "SWAP2"
    },
    "2990": {
      "op": "SWAP1"
    },
    "2991": {
      "op": "POP"
    },
    "2992": {
      "jump": "o",
      "op": "JUMP"
    },
    "2993": {
      "op": "JUMPDEST"
    },
    "2994": {
      "op": "DUP1"
    },
    "2995": {
      "op": "CALLDATALOAD"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "op": "SUB"
    },
    "3004": {
      "op": "DUP2"
    },
    "3005": {
      "op": "AND"
    },
    "3006": {
      "op": "DUP2"
    },
    "3007": {
      "op": "EQ"
    },
    "3008": {
      "op": "PUSH2",
      "value": "0xBC8"
    },
    "3011": {
      "op": "JUMPI"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3014": {
      "op": "DUP1"
    },
    "3015": {
      "op": "REVERT"
    },
    "3016": {
      "op": "JUMPDEST"
    },
    "3017": {
      "op": "SWAP2"
    },
    "3018": {
      "op": "SWAP1"
    },
    "3019": {
      "op": "POP"
    },
    "3020": {
      "jump": "o",
      "op": "JUMP"
    },
    "3021": {
      "op": "JUMPDEST"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3024": {
      "op": "DUP1"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3027": {
      "op": "DUP4"
    },
    "3028": {
      "op": "DUP6"
    },
    "3029": {
      "op": "SUB"
    },
    "3030": {
      "op": "SLT"
    },
    "3031": {
      "op": "ISZERO"
    },
    "3032": {
      "op": "PUSH2",
      "value": "0xBE0"
    },
    "3035": {
      "op": "JUMPI"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3038": {
      "op": "DUP1"
    },
    "3039": {
      "op": "REVERT"
    },
    "3040": {
      "op": "JUMPDEST"
    },
    "3041": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3044": {
      "op": "DUP4"
    },
    "3045": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3048": {
      "jump": "i",
      "op": "JUMP"
    },
    "3049": {
      "op": "JUMPDEST"
    },
    "3050": {
      "op": "SWAP5"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3053": {
      "op": "SWAP4"
    },
    "3054": {
      "op": "SWAP1"
    },
    "3055": {
      "op": "SWAP4"
    },
    "3056": {
      "op": "ADD"
    },
    "3057": {
      "op": "CALLDATALOAD"
    },
    "3058": {
      "op": "SWAP4"
    },
    "3059": {
      "op": "POP"
    },
    "3060": {
      "op": "POP"
    },
    "3061": {
      "op": "POP"
    },
    "3062": {
      "jump": "o",
      "op": "JUMP"
    },
    "3063": {
      "op": "JUMPDEST"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3066": {
      "op": "DUP1"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3071": {
      "op": "DUP5"
    },
    "3072": {
      "op": "DUP7"
    },
    "3073": {
      "op": "SUB"
    },
    "3074": {
      "op": "SLT"
    },
    "3075": {
      "op": "ISZERO"
    },
    "3076": {
      "op": "PUSH2",
      "value": "0xC0C"
    },
    "3079": {
      "op": "JUMPI"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3082": {
      "op": "DUP1"
    },
    "3083": {
      "op": "REVERT"
    },
    "3084": {
      "op": "JUMPDEST"
    },
    "3085": {
      "op": "PUSH2",
      "value": "0xC15"
    },
    "3088": {
      "op": "DUP5"
    },
    "3089": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3092": {
      "jump": "i",
      "op": "JUMP"
    },
    "3093": {
      "op": "JUMPDEST"
    },
    "3094": {
      "op": "SWAP3"
    },
    "3095": {
      "op": "POP"
    },
    "3096": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3101": {
      "op": "DUP6"
    },
    "3102": {
      "op": "ADD"
    },
    "3103": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3106": {
      "jump": "i",
      "op": "JUMP"
    },
    "3107": {
      "op": "JUMPDEST"
    },
    "3108": {
      "op": "SWAP2"
    },
    "3109": {
      "op": "POP"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3112": {
      "op": "DUP5"
    },
    "3113": {
      "op": "ADD"
    },
    "3114": {
      "op": "CALLDATALOAD"
    },
    "3115": {
      "op": "SWAP1"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "op": "SWAP3"
    },
    "3118": {
      "op": "POP"
    },
    "3119": {
      "op": "SWAP3"
    },
    "3120": {
      "op": "POP"
    },
    "3121": {
      "op": "SWAP3"
    },
    "3122": {
      "jump": "o",
      "op": "JUMP"
    },
    "3123": {
      "op": "JUMPDEST"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3128": {
      "op": "DUP3"
    },
    "3129": {
      "op": "DUP5"
    },
    "3130": {
      "op": "SUB"
    },
    "3131": {
      "op": "SLT"
    },
    "3132": {
      "op": "ISZERO"
    },
    "3133": {
      "op": "PUSH2",
      "value": "0xC45"
    },
    "3136": {
      "op": "JUMPI"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3139": {
      "op": "DUP1"
    },
    "3140": {
      "op": "REVERT"
    },
    "3141": {
      "op": "JUMPDEST"
    },
    "3142": {
      "op": "PUSH2",
      "value": "0x6F2"
    },
    "3145": {
      "op": "DUP3"
    },
    "3146": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3149": {
      "jump": "i",
      "op": "JUMP"
    },
    "3150": {
      "op": "JUMPDEST"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3153": {
      "op": "DUP1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3156": {
      "op": "DUP4"
    },
    "3157": {
      "op": "DUP6"
    },
    "3158": {
      "op": "SUB"
    },
    "3159": {
      "op": "SLT"
    },
    "3160": {
      "op": "ISZERO"
    },
    "3161": {
      "op": "PUSH2",
      "value": "0xC61"
    },
    "3164": {
      "op": "JUMPI"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3167": {
      "op": "DUP1"
    },
    "3168": {
      "op": "REVERT"
    },
    "3169": {
      "op": "JUMPDEST"
    },
    "3170": {
      "op": "PUSH2",
      "value": "0xC6A"
    },
    "3173": {
      "op": "DUP4"
    },
    "3174": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3177": {
      "jump": "i",
      "op": "JUMP"
    },
    "3178": {
      "op": "JUMPDEST"
    },
    "3179": {
      "op": "SWAP2"
    },
    "3180": {
      "op": "POP"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3183": {
      "op": "DUP4"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "CALLDATALOAD"
    },
    "3186": {
      "op": "DUP1"
    },
    "3187": {
      "op": "ISZERO"
    },
    "3188": {
      "op": "ISZERO"
    },
    "3189": {
      "op": "DUP2"
    },
    "3190": {
      "op": "EQ"
    },
    "3191": {
      "op": "PUSH2",
      "value": "0xC7F"
    },
    "3194": {
      "op": "JUMPI"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3197": {
      "op": "DUP1"
    },
    "3198": {
      "op": "REVERT"
    },
    "3199": {
      "op": "JUMPDEST"
    },
    "3200": {
      "op": "DUP1"
    },
    "3201": {
      "op": "SWAP2"
    },
    "3202": {
      "op": "POP"
    },
    "3203": {
      "op": "POP"
    },
    "3204": {
      "op": "SWAP3"
    },
    "3205": {
      "op": "POP"
    },
    "3206": {
      "op": "SWAP3"
    },
    "3207": {
      "op": "SWAP1"
    },
    "3208": {
      "op": "POP"
    },
    "3209": {
      "jump": "o",
      "op": "JUMP"
    },
    "3210": {
      "op": "JUMPDEST"
    },
    "3211": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3218": {
      "op": "SHL"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3221": {
      "op": "MSTORE"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3226": {
      "op": "MSTORE"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3231": {
      "op": "REVERT"
    },
    "3232": {
      "op": "JUMPDEST"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3235": {
      "op": "DUP1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3238": {
      "op": "DUP1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3241": {
      "op": "DUP6"
    },
    "3242": {
      "op": "DUP8"
    },
    "3243": {
      "op": "SUB"
    },
    "3244": {
      "op": "SLT"
    },
    "3245": {
      "op": "ISZERO"
    },
    "3246": {
      "op": "PUSH2",
      "value": "0xCB6"
    },
    "3249": {
      "op": "JUMPI"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3252": {
      "op": "DUP1"
    },
    "3253": {
      "op": "REVERT"
    },
    "3254": {
      "op": "JUMPDEST"
    },
    "3255": {
      "op": "PUSH2",
      "value": "0xCBF"
    },
    "3258": {
      "op": "DUP6"
    },
    "3259": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3262": {
      "jump": "i",
      "op": "JUMP"
    },
    "3263": {
      "op": "JUMPDEST"
    },
    "3264": {
      "op": "SWAP4"
    },
    "3265": {
      "op": "POP"
    },
    "3266": {
      "op": "PUSH2",
      "value": "0xCCD"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3271": {
      "op": "DUP7"
    },
    "3272": {
      "op": "ADD"
    },
    "3273": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3276": {
      "jump": "i",
      "op": "JUMP"
    },
    "3277": {
      "op": "JUMPDEST"
    },
    "3278": {
      "op": "SWAP3"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3282": {
      "op": "DUP6"
    },
    "3283": {
      "op": "ADD"
    },
    "3284": {
      "op": "CALLDATALOAD"
    },
    "3285": {
      "op": "SWAP2"
    },
    "3286": {
      "op": "POP"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3289": {
      "op": "DUP6"
    },
    "3290": {
      "op": "ADD"
    },
    "3291": {
      "op": "CALLDATALOAD"
    },
    "3292": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3301": {
      "op": "DUP1"
    },
    "3302": {
      "op": "DUP3"
    },
    "3303": {
      "op": "GT"
    },
    "3304": {
      "op": "ISZERO"
    },
    "3305": {
      "op": "PUSH2",
      "value": "0xCF1"
    },
    "3308": {
      "op": "JUMPI"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3311": {
      "op": "DUP1"
    },
    "3312": {
      "op": "REVERT"
    },
    "3313": {
      "op": "JUMPDEST"
    },
    "3314": {
      "op": "DUP2"
    },
    "3315": {
      "op": "DUP8"
    },
    "3316": {
      "op": "ADD"
    },
    "3317": {
      "op": "SWAP2"
    },
    "3318": {
      "op": "POP"
    },
    "3319": {
      "op": "DUP8"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3322": {
      "op": "DUP4"
    },
    "3323": {
      "op": "ADD"
    },
    "3324": {
      "op": "SLT"
    },
    "3325": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3328": {
      "op": "JUMPI"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3331": {
      "op": "DUP1"
    },
    "3332": {
      "op": "REVERT"
    },
    "3333": {
      "op": "JUMPDEST"
    },
    "3334": {
      "op": "DUP2"
    },
    "3335": {
      "op": "CALLDATALOAD"
    },
    "3336": {
      "op": "DUP2"
    },
    "3337": {
      "op": "DUP2"
    },
    "3338": {
      "op": "GT"
    },
    "3339": {
      "op": "ISZERO"
    },
    "3340": {
      "op": "PUSH2",
      "value": "0xD17"
    },
    "3343": {
      "op": "JUMPI"
    },
    "3344": {
      "op": "PUSH2",
      "value": "0xD17"
    },
    "3347": {
      "op": "PUSH2",
      "value": "0xC8A"
    },
    "3350": {
      "jump": "i",
      "op": "JUMP"
    },
    "3351": {
      "op": "JUMPDEST"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3354": {
      "op": "MLOAD"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3357": {
      "op": "DUP3"
    },
    "3358": {
      "op": "ADD"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3361": {
      "op": "NOT"
    },
    "3362": {
      "op": "SWAP1"
    },
    "3363": {
      "op": "DUP2"
    },
    "3364": {
      "op": "AND"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "AND"
    },
    "3369": {
      "op": "DUP2"
    },
    "3370": {
      "op": "ADD"
    },
    "3371": {
      "op": "SWAP1"
    },
    "3372": {
      "op": "DUP4"
    },
    "3373": {
      "op": "DUP3"
    },
    "3374": {
      "op": "GT"
    },
    "3375": {
      "op": "DUP2"
    },
    "3376": {
      "op": "DUP4"
    },
    "3377": {
      "op": "LT"
    },
    "3378": {
      "op": "OR"
    },
    "3379": {
      "op": "ISZERO"
    },
    "3380": {
      "op": "PUSH2",
      "value": "0xD3F"
    },
    "3383": {
      "op": "JUMPI"
    },
    "3384": {
      "op": "PUSH2",
      "value": "0xD3F"
    },
    "3387": {
      "op": "PUSH2",
      "value": "0xC8A"
    },
    "3390": {
      "jump": "i",
      "op": "JUMP"
    },
    "3391": {
      "op": "JUMPDEST"
    },
    "3392": {
      "op": "DUP2"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3395": {
      "op": "MSTORE"
    },
    "3396": {
      "op": "DUP3"
    },
    "3397": {
      "op": "DUP2"
    },
    "3398": {
      "op": "MSTORE"
    },
    "3399": {
      "op": "DUP11"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3402": {
      "op": "DUP5"
    },
    "3403": {
      "op": "DUP8"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "op": "ADD"
    },
    "3406": {
      "op": "GT"
    },
    "3407": {
      "op": "ISZERO"
    },
    "3408": {
      "op": "PUSH2",
      "value": "0xD58"
    },
    "3411": {
      "op": "JUMPI"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3414": {
      "op": "DUP1"
    },
    "3415": {
      "op": "REVERT"
    },
    "3416": {
      "op": "JUMPDEST"
    },
    "3417": {
      "op": "DUP3"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3420": {
      "op": "DUP7"
    },
    "3421": {
      "op": "ADD"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3424": {
      "op": "DUP4"
    },
    "3425": {
      "op": "ADD"
    },
    "3426": {
      "op": "CALLDATACOPY"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3431": {
      "op": "DUP5"
    },
    "3432": {
      "op": "DUP4"
    },
    "3433": {
      "op": "ADD"
    },
    "3434": {
      "op": "ADD"
    },
    "3435": {
      "op": "MSTORE"
    },
    "3436": {
      "op": "DUP1"
    },
    "3437": {
      "op": "SWAP6"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "op": "POP"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "op": "POP"
    },
    "3442": {
      "op": "POP"
    },
    "3443": {
      "op": "POP"
    },
    "3444": {
      "op": "SWAP3"
    },
    "3445": {
      "op": "SWAP6"
    },
    "3446": {
      "op": "SWAP2"
    },
    "3447": {
      "op": "SWAP5"
    },
    "3448": {
      "op": "POP"
    },
    "3449": {
      "op": "SWAP3"
    },
    "3450": {
      "op": "POP"
    },
    "3451": {
      "jump": "o",
      "op": "JUMP"
    },
    "3452": {
      "op": "JUMPDEST"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3455": {
      "op": "DUP1"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3458": {
      "op": "DUP4"
    },
    "3459": {
      "op": "DUP6"
    },
    "3460": {
      "op": "SUB"
    },
    "3461": {
      "op": "SLT"
    },
    "3462": {
      "op": "ISZERO"
    },
    "3463": {
      "op": "PUSH2",
      "value": "0xD8F"
    },
    "3466": {
      "op": "JUMPI"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3469": {
      "op": "DUP1"
    },
    "3470": {
      "op": "REVERT"
    },
    "3471": {
      "op": "JUMPDEST"
    },
    "3472": {
      "op": "PUSH2",
      "value": "0xD98"
    },
    "3475": {
      "op": "DUP4"
    },
    "3476": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3479": {
      "jump": "i",
      "op": "JUMP"
    },
    "3480": {
      "op": "JUMPDEST"
    },
    "3481": {
      "op": "SWAP2"
    },
    "3482": {
      "op": "POP"
    },
    "3483": {
      "op": "PUSH2",
      "value": "0xDA6"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3488": {
      "op": "DUP5"
    },
    "3489": {
      "op": "ADD"
    },
    "3490": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "3493": {
      "jump": "i",
      "op": "JUMP"
    },
    "3494": {
      "op": "JUMPDEST"
    },
    "3495": {
      "op": "SWAP1"
    },
    "3496": {
      "op": "POP"
    },
    "3497": {
      "op": "SWAP3"
    },
    "3498": {
      "op": "POP"
    },
    "3499": {
      "op": "SWAP3"
    },
    "3500": {
      "op": "SWAP1"
    },
    "3501": {
      "op": "POP"
    },
    "3502": {
      "jump": "o",
      "op": "JUMP"
    },
    "3503": {
      "op": "JUMPDEST"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3506": {
      "op": "DUP2"
    },
    "3507": {
      "op": "DUP2"
    },
    "3508": {
      "op": "SHR"
    },
    "3509": {
      "op": "SWAP1"
    },
    "3510": {
      "op": "DUP3"
    },
    "3511": {
      "op": "AND"
    },
    "3512": {
      "op": "DUP1"
    },
    "3513": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "3516": {
      "op": "JUMPI"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3519": {
      "op": "DUP3"
    },
    "3520": {
      "op": "AND"
    },
    "3521": {
      "op": "SWAP2"
    },
    "3522": {
      "op": "POP"
    },
    "3523": {
      "op": "JUMPDEST"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3526": {
      "op": "DUP3"
    },
    "3527": {
      "op": "LT"
    },
    "3528": {
      "op": "DUP2"
    },
    "3529": {
      "op": "SUB"
    },
    "3530": {
      "op": "PUSH2",
      "value": "0xDE3"
    },
    "3533": {
      "op": "JUMPI"
    },
    "3534": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3541": {
      "op": "SHL"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3544": {
      "op": "MSTORE"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3549": {
      "op": "MSTORE"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3554": {
      "op": "REVERT"
    },
    "3555": {
      "op": "JUMPDEST"
    },
    "3556": {
      "op": "POP"
    },
    "3557": {
      "op": "SWAP2"
    },
    "3558": {
      "op": "SWAP1"
    },
    "3559": {
      "op": "POP"
    },
    "3560": {
      "jump": "o",
      "op": "JUMP"
    },
    "3561": {
      "op": "JUMPDEST"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3564": {
      "op": "DUP1"
    },
    "3565": {
      "op": "DUP3"
    },
    "3566": {
      "op": "MSTORE"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "3569": {
      "op": "SWAP1"
    },
    "3570": {
      "op": "DUP3"
    },
    "3571": {
      "op": "ADD"
    },
    "3572": {
      "op": "MSTORE"
    },
    "3573": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3608": {
      "op": "DUP3"
    },
    "3609": {
      "op": "ADD"
    },
    "3610": {
      "op": "MSTORE"
    },
    "3611": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "3631": {
      "op": "SHL"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3634": {
      "op": "DUP3"
    },
    "3635": {
      "op": "ADD"
    },
    "3636": {
      "op": "MSTORE"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3639": {
      "op": "ADD"
    },
    "3640": {
      "op": "SWAP1"
    },
    "3641": {
      "jump": "o",
      "op": "JUMP"
    },
    "3642": {
      "op": "JUMPDEST"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3645": {
      "op": "DUP4"
    },
    "3646": {
      "op": "MLOAD"
    },
    "3647": {
      "op": "PUSH2",
      "value": "0xE4C"
    },
    "3650": {
      "op": "DUP2"
    },
    "3651": {
      "op": "DUP5"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3654": {
      "op": "DUP9"
    },
    "3655": {
      "op": "ADD"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xB39"
    },
    "3659": {
      "jump": "i",
      "op": "JUMP"
    },
    "3660": {
      "op": "JUMPDEST"
    },
    "3661": {
      "op": "SWAP2"
    },
    "3662": {
      "op": "SWAP1"
    },
    "3663": {
      "op": "SWAP2"
    },
    "3664": {
      "op": "ADD"
    },
    "3665": {
      "op": "SWAP2"
    },
    "3666": {
      "op": "DUP3"
    },
    "3667": {
      "op": "MSTORE"
    },
    "3668": {
      "op": "POP"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3671": {
      "op": "ADD"
    },
    "3672": {
      "op": "SWAP2"
    },
    "3673": {
      "op": "SWAP1"
    },
    "3674": {
      "op": "POP"
    },
    "3675": {
      "jump": "o",
      "op": "JUMP"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3687": {
      "op": "MSTORE"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3692": {
      "op": "MSTORE"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3697": {
      "op": "REVERT"
    },
    "3698": {
      "op": "JUMPDEST"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3701": {
      "op": "DUP3"
    },
    "3702": {
      "op": "DUP3"
    },
    "3703": {
      "op": "LT"
    },
    "3704": {
      "op": "ISZERO"
    },
    "3705": {
      "op": "PUSH2",
      "value": "0xE84"
    },
    "3708": {
      "op": "JUMPI"
    },
    "3709": {
      "op": "PUSH2",
      "value": "0xE84"
    },
    "3712": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3715": {
      "jump": "i",
      "op": "JUMP"
    },
    "3716": {
      "op": "JUMPDEST"
    },
    "3717": {
      "op": "POP"
    },
    "3718": {
      "op": "SUB"
    },
    "3719": {
      "op": "SWAP1"
    },
    "3720": {
      "jump": "o",
      "op": "JUMP"
    },
    "3721": {
      "op": "JUMPDEST"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3724": {
      "op": "DUP3"
    },
    "3725": {
      "op": "NOT"
    },
    "3726": {
      "op": "DUP3"
    },
    "3727": {
      "op": "GT"
    },
    "3728": {
      "op": "ISZERO"
    },
    "3729": {
      "op": "PUSH2",
      "value": "0xE9C"
    },
    "3732": {
      "op": "JUMPI"
    },
    "3733": {
      "op": "PUSH2",
      "value": "0xE9C"
    },
    "3736": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3739": {
      "jump": "i",
      "op": "JUMP"
    },
    "3740": {
      "op": "JUMPDEST"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "op": "ADD"
    },
    "3743": {
      "op": "SWAP1"
    },
    "3744": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0f4040ca1cc3ad5f6b41bce3d79ab709c49f5386",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\n\npragma solidity >=0.8.0;\n\nimport \"../../interfaces/IERC721.sol\";\nimport \"../../interfaces/extensions/IERC721Metadata.sol\";\nimport \"../utils/Context.sol\";\nimport \"../introspection/local/ERC165Storage.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165Storage, IERC721, IERC721Metadata {\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _tokenToOwnerMap;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // No token approvals - This is for soulbound nft\n    // No mapping from owner to operator approvals\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n\n        // Reporting supported interfaces \n        _registerInterface(type(IERC721).interfaceId);\n        _registerInterface(type(IERC721Metadata).interfaceId);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Storage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     * It'll always be between 0 and 1. We'll limit single nft per address\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _tokenToOwnerMap[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     * - Change to reflect on-chain generative ASCII art \n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId)) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     * Implement this in EXPerience - Badge contract\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     * Should be overriden and restricted if what to implement soulbound properties \n     * of the NFT\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     * \n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n         require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev These internal functions are not implemented as we don't need them right now.\n     * When Soul and Soul-Constellation expands, we will revisit these functions to allow certain capaibilties\n     * - Allow transfer only after certain period of time (temporary soulbound)\n     * - Ability to convert into soulbound if held long enough \n     * - much more coming from this paper: Decentralized Society: Finding Web3\u00e2\u20ac\u2122s Soul (By E. Glen Weyl, Puja Ohlhaver, Vitalik Buterin)\n     * - Updates: Keeping ERC721 interface intact, and implement soulbound capabilties in derived contract to allow resuing \n     * - ERC721 in other contracts with different set of rules for transfer/approval of the NFT\n     */\n    // ---------START OF SECTION ----------- Functions who's public version should be overridden in derived and updated accordingly \n    // function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual;\n    // function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool);\n    // function _transfer(address from, address to, uint256 tokenId ) internal virtual;\n    // function _approve(address to, uint256 tokenId) internal virtual;\n    // function _setApprovalForAll(address owner, address operator, bool approved) internal virtual;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        // require(_checkOnERC721Received) can be added here \n        // Skipping it here, may be we'll add it in future;\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _tokenToOwnerMap[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    // ---------END OF SECTION ----------- Functions that should be overridden in derived and updated accordingly \n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _tokenToOwnerMap[tokenId] != address(0);\n    }\n\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory\n    ) internal virtual {\n        _mint(to, tokenId);\n        // Could perform require(_checkOnERC721Received()) here,\n        // But it's left for future improvements \n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     * \n     * - We limit minting single NFT to single address here by adding a condition \n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n        require(_balances[to] == 0, \"ERC721: Only one EXPerienceViewer (NFT) per address\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _tokenToOwnerMap[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * \n     * - At the moment, let's not think about any burning mechanism\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _tokenToOwnerMap[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}",
  "sourceMap": "560:14255:4:-:0;;;1381:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1447:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1470:17:4;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;1541:45:4;-1:-1:-1;;;1541:18:4;:45::i;:::-;1596:53;-1:-1:-1;;;1596:18:4;:53::i;:::-;1381:275;;560:14255;;1434:200:2;-1:-1:-1;;;;;;1518:25:2;;;;;1510:65;;;;-1:-1:-1;;;1510:65:2;;1805:2:13;1510:65:2;;;1787:21:13;1844:2;1824:18;;;1817:30;1883:29;1863:18;;;1856:57;1930:18;;1510:65:2;;;;;;;;-1:-1:-1;;;;;;1586:33:2;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1586:40:2;1622:4;1586:40;;;1434:200::o;560:14255:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;560:14255:4;;;-1:-1:-1;560:14255:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:13;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:13;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:13:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:13;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1959:380::-;2038:1;2034:12;;;;2081;;;2102:61;;2156:4;2148:6;2144:17;2134:27;;2102:61;2209:2;2201:6;2198:14;2178:18;2175:38;2172:161;;2255:10;2250:3;2246:20;2243:1;2236:31;2290:4;2287:1;2280:15;2318:4;2315:1;2308:15;2172:161;;1959:380;;;:::o;:::-;560:14255:4;;;;;;",
  "sourcePath": "contracts/tokens/ERC721.sol",
  "type": "contract"
}